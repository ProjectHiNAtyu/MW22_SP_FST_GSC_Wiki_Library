// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_spawnvehicle( spawndata, _id_EE8DA5624236DC89 )
{
    if ( !istrue( spawndata.startsuspended ) )
    {
        if ( !canspawnvehicle() )
        {
            if ( isdefined( _id_EE8DA5624236DC89 ) )
                _id_EE8DA5624236DC89.fail = "total_limit_exceeded";

            return undefined;
        }
    }

    vehicle = undefined;

    if ( isdefined( spawndata.initialvelocity ) )
        vehicle = spawnvehicle( spawndata.modelname, spawndata.targetname, spawndata.vehicletype, spawndata.origin, spawndata.angles, spawndata.owner, spawndata.initialvelocity, spawndata._id_0131EA86B569E731 );
    else
        vehicle = spawnvehicle( spawndata.modelname, spawndata.targetname, spawndata.vehicletype, spawndata.origin, spawndata.angles, spawndata.owner, undefined, spawndata._id_0131EA86B569E731 );

    if ( !isdefined( vehicle ) )
    {
        if ( isdefined( _id_EE8DA5624236DC89 ) )
            _id_EE8DA5624236DC89.fail = "total_limit_exceeded";

        return undefined;
    }

    vehicle.spawndata = spawndata;
    level.vehiclecount++;
    return vehicle;
}

_spawnhelicopter( owner, origin, angles, type, modelname )
{
    _id_EE8DA5624236DC89 = spawnstruct();
    spawndata = spawnstruct();
    spawndata.modelname = modelname;
    spawndata.vehicletype = type;
    spawndata.origin = origin;
    spawndata.angles = angles;
    spawndata.owner = owner;

    if ( !canspawnvehicle() )
    {
        if ( isdefined( _id_EE8DA5624236DC89 ) )
            _id_EE8DA5624236DC89.fail = "total_limit_exceeded";

        return undefined;
    }

    vehicle = spawnhelicopter( spawndata.owner, spawndata.origin, spawndata.angles, spawndata.vehicletype, spawndata.modelname );

    if ( !isdefined( vehicle ) )
    {
        if ( isdefined( _id_EE8DA5624236DC89 ) )
            _id_EE8DA5624236DC89.fail = "code";

        return undefined;
    }

    level.vehiclecount++;
    return vehicle;
}

_deletevehicle( vehicle )
{
    vehicle notify( "vehicle_deleted" );
    level.vehiclecount--;
    vehicle delete();
    return 1;
}

canspawnvehicle()
{
    return level.vehiclecount < level.maxvehiclecount;
}

getvehiclecount()
{
    return level.vehiclecount;
}

reservevehicle( count )
{
    if ( canspawnvehicle() )
    {
        if ( !isdefined( count ) )
        {
            level.vehiclecount++;
            return 1;
        }

        _id_2505BA0EB2A7B5D5 = level.maxvehiclecount - level.vehiclecount;

        if ( count <= _id_2505BA0EB2A7B5D5 )
        {
            level.vehiclecount = level.vehiclecount + count;
            return 1;
        }
    }

    return 0;
}

clearvehiclereservation( count )
{
    if ( !isdefined( count ) )
        count = 1;

    level.vehiclecount = level.vehiclecount - count;
    level.vehiclecount = int( max( 0, level.vehiclecount ) );
}

getvehiclespawndata( vehicle )
{
    return vehicle.spawndata;
}

copyvehiclespawndata( from, to )
{
    to.modelname = from.modelname;
    to._id_14CDE247AC3313A4 = from._id_14CDE247AC3313A4;
    to.targetname = from.targetname;
    to.vehicletype = from.vehicletype;
    to.origin = from.origin;
    to.angles = from.angles;
    to.owner = from.owner;
    to.initialvelocity = from.initialvelocity;
    to.cannotbesuspended = from.cannotbesuspended;
    to.startsuspended = from.startsuspended;
    to.spawntype = from.spawntype;
    to.team = from.team;
    to.ref = from.ref;
}

vehicle_tracking_registerinstance( vehicle, owner, team )
{
    vehicle_tracking_deregisterinstance( vehicle );
    level.vehicle.instances[vehicle.vehiclename][vehicle getentitynumber()] = vehicle;
    vehicle.vehicleowner = undefined;

    if ( isdefined( owner ) )
        vehicle.vehicleowner = owner;

    vehicle.vehicleteam = undefined;

    if ( isdefined( team ) )
        vehicle.vehicleteam = team;
}

vehicle_tracking_deregisterinstance( vehicle )
{
    if ( !isdefined( level.vehicle ) )
        return;

    if ( !isdefined( level.vehicle.instances ) )
        return;

    if ( !isdefined( level.vehicle.instances[vehicle.vehiclename] ) )
        return;

    level.vehicle.instances[vehicle.vehiclename][vehicle getentitynumber()] = undefined;

    if ( level.vehicle.instances[vehicle.vehiclename].size <= 0 )
        level.vehicle.instances[vehicle.vehiclename] = undefined;

    vehicle.vehicleowner = undefined;
    vehicle.vehicleteam = undefined;
}

vehicle_tracking_limitgameinstances( vehiclename, limit, message )
{
    level.vehicle.instancelimits[vehiclename] = limit;
    level.vehicle.instancelimitmessages[vehiclename] = message;
}

_id_5C8408CB68649308( vehiclename, spawntype, limit )
{
    if ( !isdefined( level.vehicle._id_0EB26B962268635B[vehiclename] ) )
        level.vehicle._id_0EB26B962268635B[vehiclename] = [];

    level.vehicle._id_0EB26B962268635B[vehiclename][spawntype] = limit;
}

vehicle_tracking_limitownerinstances( vehiclename, limit, message )
{
    level.vehicle.ownerinstancelimits[vehiclename] = limit;
    level.vehicle.ownerinstancelimitmessages[vehiclename] = message;
}

vehicle_tracking_limitteaminstances( vehiclename, limit, message )
{
    level.vehicle.teaminstancelimits[vehiclename] = limit;
    level.vehicle.teaminstancelimitmessages[vehiclename] = message;
}

vehicle_tracking_atinstancelimit( vehiclename, owner, team, spawntype, _id_5BA9AF6ABAE862CA )
{
    if ( !isdefined( level.vehicle.instances[vehiclename] ) )
        return 0;

    _id_9804D2DE3C8F09C6 = level.vehicle.instancelimits[vehiclename];

    if ( isdefined( _id_9804D2DE3C8F09C6 ) )
    {
        if ( isdefined( level.vehicle.instances[vehiclename] ) && level.vehicle.instances[vehiclename].size >= _id_9804D2DE3C8F09C6 )
            return 1;
    }

    _id_8FE403544E073DB7 = undefined;
    _id_6536066694C661FB = undefined;

    if ( isdefined( spawntype ) && isdefined( level.vehicle._id_0EB26B962268635B ) && isdefined( level.vehicle._id_0EB26B962268635B[vehiclename] ) && isdefined( level.vehicle._id_0EB26B962268635B[vehiclename][spawntype] ) )
    {
        _id_8FE403544E073DB7 = level.vehicle._id_0EB26B962268635B[vehiclename][spawntype];
        _id_6536066694C661FB = 0;
    }

    _id_07493F9697366D2B = undefined;
    _id_A79D78866AC25C77 = undefined;

    if ( isdefined( owner ) )
    {
        _id_07493F9697366D2B = level.vehicle.ownerinstancelimits[vehiclename];
        _id_A79D78866AC25C77 = 0;
    }

    _id_3287DCCCC68557B3 = undefined;
    _id_652F47620AC4713F = undefined;

    if ( isdefined( team ) )
    {
        _id_3287DCCCC68557B3 = level.vehicle.teaminstancelimits[vehiclename];
        _id_652F47620AC4713F = 0;
    }

    if ( !isdefined( _id_07493F9697366D2B ) && !isdefined( _id_3287DCCCC68557B3 ) && !isdefined( _id_8FE403544E073DB7 ) )
        return 0;

    foreach ( instance in level.vehicle.instances[vehiclename] )
    {
        if ( isdefined( _id_07493F9697366D2B ) && isdefined( instance.vehicleowner ) && instance.vehicleowner == owner )
        {
            _id_A79D78866AC25C77++;

            if ( _id_A79D78866AC25C77 >= _id_07493F9697366D2B )
                return 1;
        }

        if ( isdefined( _id_3287DCCCC68557B3 ) && isdefined( instance.vehicleteam ) && instance.vehicleteam == team )
        {
            _id_652F47620AC4713F++;

            if ( _id_652F47620AC4713F >= _id_3287DCCCC68557B3 )
                return 1;
        }

        if ( isdefined( _id_8FE403544E073DB7 ) && isdefined( instance.spawndata ) && isdefined( instance.spawndata.spawntype ) && instance.spawndata.spawntype == spawntype )
        {
            _id_6536066694C661FB++;

            if ( _id_6536066694C661FB >= _id_8FE403544E073DB7 )
                return 1;
        }
    }

    return 0;
}

vehicle_tracking_getgameinstances( vehiclename )
{
    if ( !isdefined( level.vehicle.instances[vehiclename] ) )
        return [];

    return level.vehicle.instances[vehiclename];
}

vehicle_tracking_getownerinstances( vehiclename, owner )
{
    if ( !isdefined( level.vehicle.instances[vehiclename] ) )
        return [];

    instances = [];

    foreach ( instance in level.vehicle.instances[vehiclename] )
    {
        if ( isdefined( instance.vehicleowner ) && instance.vehicleowner == owner )
            instances[instances.size] = instance;
    }

    return instances;
}

vehicle_tracking_getteaminstances( vehiclename, team )
{
    if ( !isdefined( level.vehicle.instances[vehiclename] ) )
        return [];

    instances = [];

    foreach ( instance in level.vehicle.instances[vehiclename] )
    {
        if ( isdefined( instance.vehicleteam ) && instance.vehicleteam == team )
            instances[instances.size] = instance;
    }

    return instances;
}

vehicle_tracking_getgameinstancesforall()
{
    if ( !isdefined( level.vehicle.instances ) )
        return [];

    instances = [];

    foreach ( _id_E705B089592C075D in level.vehicle.instances )
    {
        foreach ( instance in _id_E705B089592C075D )
            instances[instances.size] = instance;
    }

    return instances;
}

vehicle_tracking_instancesarelimited( vehiclename )
{
    if ( isdefined( level.vehicle.instancelimits[vehiclename] ) )
        return 1;

    if ( isdefined( level.vehicle.ownerinstancelimits[vehiclename] ) )
        return 1;

    if ( isdefined( level.vehicle.teaminstancelimits[vehiclename] ) )
        return 1;

    if ( isdefined( level.vehicle._id_0EB26B962268635B[vehiclename] ) )
        return 1;

    return 0;
}

vehicle_tracking_init()
{
    level.vehicle.instances = [];
    level.vehicle.instancelimits = [];
    level.vehicle.ownerinstancelimits = [];
    level.vehicle.teaminstancelimits = [];
    level.vehicle._id_0EB26B962268635B = [];
    level.vehicle.instancelimitmessages = [];
    level.vehicle.ownerinstancelimitmessages = [];
    level.vehicle.teaminstancelimitmessages = [];
    level.vehiclecount = 0;
    level.maxvehiclecount = getdvarint( "dvar_A473574B4E4333D0", 128 );
}

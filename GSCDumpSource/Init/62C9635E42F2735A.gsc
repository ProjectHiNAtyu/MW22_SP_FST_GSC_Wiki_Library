// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_02BEF3A70387BED5()
{
    _func_75723F405BAB9463();
}

_id_0AD45F79E3A9B4D2()
{
    _func_56F34B9A1463755C();
    self.sessionstate = "playing";
    self.statusicon = "";
}

getweapon( _id_BAE77D8848F4D84D )
{
    weaponname = _id_BAE77D8848F4D84D[0];
    weaponattachments = [];
    _id_7424CD8B0792EE4C = [];
    _id_91F46FFD5296EEE1 = undefined;
    _id_B2EC7DAEBAAB7CAF = undefined;
    _id_FEDB77AAD2340743 = 0;
    _id_11852DA97169016B = undefined;
    _id_3A585B7543F910C5 = undefined;

    if ( isdefined( _id_BAE77D8848F4D84D[1] ) )
    {
        weaponattachments = strtok( _id_BAE77D8848F4D84D[1], "+" );

        for ( index = 0; index < weaponattachments.size; index++ )
        {
            _id_653A7FF5A0D6FAC2 = strtok( weaponattachments[index], "[" );
            weaponattachments[index] = _id_653A7FF5A0D6FAC2[0];

            if ( isdefined( _id_653A7FF5A0D6FAC2[1] ) && _id_653A7FF5A0D6FAC2[1] != "" )
            {
                _id_160345544D655DE0 = strtok( _id_653A7FF5A0D6FAC2[1], "," );
                _id_160345544D655DE0[0] = float( _id_160345544D655DE0[0] );
                _id_160345544D655DE0[1] = float( _func_E84A5F30606D3A09( _id_160345544D655DE0[1], "]" ) );
                _id_7424CD8B0792EE4C[weaponattachments[index]] = _id_160345544D655DE0;
            }
        }

        _id_91F46FFD5296EEE1 = _id_BAE77D8848F4D84D[2];
        _id_B2EC7DAEBAAB7CAF = _id_BAE77D8848F4D84D[3];

        if ( isdefined( _id_BAE77D8848F4D84D[4] ) )
            _id_FEDB77AAD2340743 = int( _id_BAE77D8848F4D84D[4] );

        _id_11852DA97169016B = _id_BAE77D8848F4D84D[5];
        _id_3A585B7543F910C5 = _id_BAE77D8848F4D84D[6];
    }

    _id_11A1FA68AEB971C0 = 0;
    return _id_2669878CF5A1B6BC::buildweapon( weaponname, weaponattachments, _id_91F46FFD5296EEE1, _id_B2EC7DAEBAAB7CAF, _id_FEDB77AAD2340743, [], _id_11852DA97169016B, _id_3A585B7543F910C5, _id_11A1FA68AEB971C0, _id_7424CD8B0792EE4C );
}

_id_FDE9D87638F0D841( _id_8ED697739F58CA21, _id_292D214DF4388861 )
{
    if ( isdefined( self.primaryweaponobj ) )
        self takeweapon( self.primaryweaponobj );

    if ( isdefined( self.secondaryweaponobj ) && self.secondaryweaponobj.basename != "none" )
        self takeweapon( self.secondaryweaponobj );

    self.primaryweapon = undefined;
    self.primaryweaponobj = undefined;
    self.secondaryweapon = undefined;
    self.secondaryweaponobj = undefined;
    _id_8ED697739F58CA21 = strtok( _id_8ED697739F58CA21, "|" );
    weaponname = _id_8ED697739F58CA21[0];

    if ( isdefined( weaponname ) && weaponname != "none" )
    {
        self.primaryweaponobj = getweapon( _id_8ED697739F58CA21 );
        self giveweapon( self.primaryweaponobj );
        self setweaponammoclip( self.primaryweaponobj, weaponclipsize( self.primaryweaponobj ) );
        self setweaponammostock( self.primaryweaponobj, weaponmaxammo( self.primaryweaponobj ) );
    }

    if ( isdefined( _id_292D214DF4388861 ) )
    {
        _id_292D214DF4388861 = strtok( _id_292D214DF4388861, "|" );
        weaponname = _id_292D214DF4388861[0];

        if ( isdefined( weaponname ) && weaponname != "none" )
        {
            self.secondaryweaponobj = getweapon( _id_292D214DF4388861 );
            self giveweapon( self.secondaryweaponobj );
            self setweaponammoclip( self.secondaryweaponobj, weaponclipsize( self.secondaryweaponobj ) );
            self setweaponammostock( self.secondaryweaponobj, weaponmaxammo( self.secondaryweaponobj ) );
        }
    }

    self switchtoweaponimmediate( self.primaryweaponobj );
    thread _id_B74A4C79011E5ADF( self.primaryweaponobj );
}

_id_20242BDF7238ABCC( _id_BAE77D8848F4D84D )
{
    _id_BAE77D8848F4D84D = strtok( _id_BAE77D8848F4D84D, "`" );
    _id_8ED697739F58CA21 = _id_BAE77D8848F4D84D[0];
    _id_292D214DF4388861 = _id_BAE77D8848F4D84D[1];
    _id_FDE9D87638F0D841( _id_8ED697739F58CA21, _id_292D214DF4388861 );
}

_id_CB993EBADDA105C7( _id_BAE77D8848F4D84D )
{
    _func_DAA1538470157756();
    level thread _id_F00185B72CDB3B04();
    level._id_37A55ECAF979D920 = 0;
    level._id_91D278FB245D797B = 0;
    level._id_FEBC1F5F6FC40F70 = 0;
    level._id_EDCA0E3497F3463F = 0;
    self setsuit( "iw9_defaultsuit_mp" );
    self.sessionstate = "playing";
    self.statusicon = "";
    waitframe();
    self spawn( level._id_AEB531C63A3266D6.basecam.origin, level._id_AEB531C63A3266D6.basecam.angles );
    waitframe();
    _id_BAE77D8848F4D84D = strtok( _id_BAE77D8848F4D84D, "`" );
    _id_8ED697739F58CA21 = _id_BAE77D8848F4D84D[0];
    _id_292D214DF4388861 = _id_BAE77D8848F4D84D[1];
    _id_FDE9D87638F0D841( _id_8ED697739F58CA21, _id_292D214DF4388861 );
    self setclienttriggeraudiozone( "frontend_firingrange", 2 );
    setmusicstate( "" );
    body = "body_mp_milsim_ranger_1_1_lod1";
    head = "head_mp_milsim_ranger_1_1";
    self setcustomization( body, head );

    if ( isdefined( self.headmodel ) )
        self detach( self.headmodel );

    bodymodelname = self getcustomizationbody();
    headmodelname = self getcustomizationhead();
    _id_41BD2EEDA1C033D2 = self getcustomizationviewmodel();
    self setmodel( bodymodelname );
    self setviewmodel( _id_41BD2EEDA1C033D2 );

    if ( isdefined( headmodelname ) )
    {
        self attach( headmodelname, "", 1 );
        self.headmodel = headmodelname;
    }

    self setclothtype( "vestlight" );
    self _meth_8ABE5A968CC3C220( "millghtgr" );
    thread infiniteammo();
}

_id_6DDBFA779DCE4B5D()
{
    if ( isdefined( self.primaryweaponobj ) )
    {
        if ( self hasweapon( self.primaryweaponobj ) )
        {
            self takeweapon( self.primaryweaponobj );
            self clearclienttriggeraudiozone( 2 );
            setmusicstate( "music_mainmenu_mp" );
        }
    }

    self suicide();
    waitframe();
    self allowspectateteam( "none", 1 );
    self setspectatedefaults( level.camera_loadout_showcase_overview.basecam.origin, level.camera_loadout_showcase_overview.basecam.angles );
    thread scripts\cp_mp\frontendutils::frontend_camera_watcher( scripts\cp_mp\frontendutils::camera_section_change );
    self.sessionstate = "spectator";
    _func_4738968C0CD77B51();
    level._id_37A55ECAF979D920 = 0;
    level._id_91D278FB245D797B = 0;
    level._id_FEBC1F5F6FC40F70 = 0;
    level._id_EDCA0E3497F3463F = 0;
    level notify( "exit_firing_range" );
}

infiniteammo()
{
    level endon( "exit_firing_range" );
    self notify( "infiniteAmmo" );
    self endon( "infiniteAmmo" );

    for (;;)
    {
        weapons = self getweaponslistprimaries();

        foreach ( weapon in weapons )
        {
            self givemaxammo( weapon );
            self setweaponammostock( weapon, weaponmaxammo( weapon ) );
        }

        waitframe();
    }
}

_id_F00185B72CDB3B04()
{
    if ( !isdefined( level._id_E0FD2FCCBEADEF41 ) )
    {
        level._id_E0FD2FCCBEADEF41 = getentarray( "enemyTarget", "targetname" );

        foreach ( ent in level._id_E0FD2FCCBEADEF41 )
        {
            ent._id_C284C09EF7780E64 = spawn( "script_origin", ent.origin );
            ent._id_C284C09EF7780E64.health = 100;
            ent._id_C284C09EF7780E64 thread _id_487345CE6A43A653();
            ent._id_3B77CA060F09B517 = getentarray( ent.target, "targetname" );

            foreach ( brush in ent._id_3B77CA060F09B517 )
            {
                brush.owner = ent;
                brush thread _id_66CDAC98AC1A8A6A();
            }
        }
    }
    else
    {
        foreach ( ent in level._id_E0FD2FCCBEADEF41 )
            ent._id_C284C09EF7780E64.health = 100;
    }
}

_id_66CDAC98AC1A8A6A()
{
    self setcandamage( 1 );
    _id_DAF783F0070ECCB5 = undefined;

    for (;;)
    {
        self waittill( "damage", damage, attacker, direction_vec, point, meansofdeath, modelname, tagname, partname, idflags, weapon );
        hitloc = "torso_upper";

        switch ( self.script_noteworthy )
        {
            case "chest":
                hitloc = "torso_upper";
                break;
            case "head":
                hitloc = "head";
                break;
            case "leg":
                hitloc = "left_leg_upper";
                break;
            case "arm":
                hitloc = "left_arm_upper";
                break;
        }

        currenttime = gettime();

        if ( !isdefined( _id_DAF783F0070ECCB5 ) || _id_DAF783F0070ECCB5.damage < damage || _id_DAF783F0070ECCB5.time < currenttime )
        {
            instance = spawnstruct();
            instance.damage = damage;
            instance.origin = self.origin;
            instance.attacker = attacker;
            instance.meansofdeath = meansofdeath;
            instance.weapon = weapon;
            instance.hitloc = hitloc;
            instance.time = currenttime;
            _id_DAF783F0070ECCB5 = instance;
            level notify( "damage_done" );
            self.owner thread _id_FAD21382D44834E8( _id_DAF783F0070ECCB5 );
        }
    }
}

#using_animtree("script_model");

_id_FAD21382D44834E8( instance )
{
    _id_C284C09EF7780E64 = self._id_C284C09EF7780E64;

    if ( _id_C284C09EF7780E64.health <= 0 )
        return;

    _id_C284C09EF7780E64 notify( "processDamageThisFrame" );
    _id_C284C09EF7780E64 endon( "processDamageThisFrame" );
    waitframe();

    if ( _id_C284C09EF7780E64.health > 0 )
    {
        _id_C284C09EF7780E64 dodamage( instance.damage, instance.origin, instance.attacker, instance.attacker, instance.meansofdeath, instance.weapon, instance.hitloc );
        alias = getdvar( "dvar_D6875627FD8914DE" );
        playsoundatpos( instance.origin, alias );
        isheadshot = instance.hitloc == "head";
        _id_A1566100E7DF492E = 1;
        _id_7D955100FAEA2A9B = 1;

        if ( instance.attacker getcurrentweapon() == instance.attacker.primaryweaponobj )
        {
            level._id_91D278FB245D797B++;
            _id_7D955100FAEA2A9B = level._id_91D278FB245D797B;
            _id_A1566100E7DF492E = level._id_37A55ECAF979D920;
        }
        else
        {
            level._id_EDCA0E3497F3463F++;
            _id_7D955100FAEA2A9B = level._id_EDCA0E3497F3463F;
            _id_A1566100E7DF492E = level._id_FEBC1F5F6FC40F70;
        }

        _id_A1566100E7DF492E = max( 1.0, _id_A1566100E7DF492E );
        setomnvar( "ui_firing_range_accuracy", _id_7D955100FAEA2A9B / _id_A1566100E7DF492E );

        if ( _id_C284C09EF7780E64.health <= 0 )
        {
            _id_EE27F3F198276535 = getomnvar( "ui_firing_range_target_kill_count" );

            if ( _id_EE27F3F198276535 <= 500 )
                setomnvar( "ui_firing_range_target_kill_count", _id_EE27F3F198276535 + 1 );

            instance.attacker _id_5E9E768A83DA2AD4::_id_02A968DDF3C277CE( "standard", 1, isheadshot, 0 );
            self._id_9A74C6FBE0CF64EB = 1;
            _id_C284C09EF7780E64 setcandamage( 0 );
            self scriptmodelplayanimdeltamotion( "iw9_mp_firingrange_dummy_death" );
            wait( getanimlength( %iw9_mp_firingrange_dummy_death ) );
            self scriptmodelplayanimdeltamotion( "iw9_mp_firingrange_dummy_deathidle" );
            wait 3.0;
            self scriptmodelplayanimdeltamotion( "iw9_mp_firingrange_dummy_respawn" );
            wait( getanimlength( %iw9_mp_firingrange_dummy_respawn ) );
            self scriptmodelclearanim();
            self._id_9A74C6FBE0CF64EB = 0;
            _id_C284C09EF7780E64.health = 100;
            _id_C284C09EF7780E64 setcandamage( 1 );
        }
        else
            instance.attacker _id_5E9E768A83DA2AD4::_id_02A968DDF3C277CE( "standard", 0, isheadshot, 0 );
    }
}

_id_487345CE6A43A653()
{
    self setcandamage( 1 );
    thread _id_64289D610B532582();

    for (;;)
        self waittill( "damage", damage, attacker, direction_vec, point, meansofdeath, modelname, tagname, partname, idflags, weapon );
}

_id_64289D610B532582()
{
    for (;;)
    {
        color = scripts\engine\utility::ter_op( self.health > 0, ( 0, 1, 0 ), ( 1, 0, 0 ) );
        waitframe();
    }
}

_id_B74A4C79011E5ADF( primary )
{
    level notify( "frontend_watch_bullets" );
    level endon( "exit_firing_range" );
    level endon( "frontend_watch_bullets" );

    for (;;)
    {
        self waittill( "weapon_fired", objweapon );
        _id_A1566100E7DF492E = 0;
        _id_66049A1B8433BBEE = 0;

        if ( objweapon == primary )
        {
            level._id_37A55ECAF979D920++;
            _id_A1566100E7DF492E = level._id_37A55ECAF979D920;
            _id_66049A1B8433BBEE = level._id_91D278FB245D797B;
        }
        else
        {
            level._id_FEBC1F5F6FC40F70++;
            _id_A1566100E7DF492E = level._id_FEBC1F5F6FC40F70;
            _id_66049A1B8433BBEE = level._id_EDCA0E3497F3463F;
        }

        thread _id_AF1E66CD09D0FA6F( _id_66049A1B8433BBEE, _id_A1566100E7DF492E, objweapon == primary );
    }
}

_id_AF1E66CD09D0FA6F( _id_66049A1B8433BBEE, _id_A1566100E7DF492E, _id_918D83438649E9A5 )
{
    level notify( "wait_for_bullet_result" );
    level endon( "exit_firing_range" );
    level endon( "wait_for_bullet_result" );
    thread _id_A9FE4D5F2A3EFC22();
    level scripts\engine\utility::waittill_any_2( "timeout_damage", "damage_done" );

    if ( _id_918D83438649E9A5 && _id_66049A1B8433BBEE == level._id_91D278FB245D797B || !_id_918D83438649E9A5 && _id_66049A1B8433BBEE == level._id_EDCA0E3497F3463F )
    {
        _id_A1566100E7DF492E = max( 1.0, _id_A1566100E7DF492E );
        setomnvar( "ui_firing_range_accuracy", _id_66049A1B8433BBEE / _id_A1566100E7DF492E );
    }
}

_id_A9FE4D5F2A3EFC22()
{
    level endon( "damage_done" );
    level endon( "exit_firing_range" );
    level endon( "wait_for_bullet_result" );
    wait 0.1;
    level notify( "timeout_damage" );
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level thread brtruck_initfeatures();
    level thread brtruck_initpostmain();
    level thread brtruck_initdialog();
    level thread brtruck_initexternalfeatures();
    level.autorespawnwaittime = getdvarint( "dvar_4BEAC336193A373D", 20 );
    level.respawntimedisable = getdvarint( "dvar_73DBC19AD4C85D57", 0 );
    level._id_4B3D0771DF2C44A9 = _id_600B944A95C3A7BF::_id_54B046AA3BA2678A( "truckWarBuyStation" );
    level init_airdrop_anims();
}

brtruck_initfeatures()
{
    if ( getdvarint( "dvar_32B7F75982043672", 0 ) == 1 )
    {
        _id_362C58E8BB39BCDA::disablefeature( "circle" );
        _id_362C58E8BB39BCDA::disablefeature( "dropbag" );
        _id_362C58E8BB39BCDA::enablefeature( "allowLateJoiners" );
    }

    _id_362C58E8BB39BCDA::disablefeature( "gulag" );
    _id_362C58E8BB39BCDA::disablefeature( "plunderSites" );
    _id_362C58E8BB39BCDA::disablefeature( "vehicleSpawns" );
    _id_362C58E8BB39BCDA::enablefeature( "tabletReplace" );
}

brtruck_initpostmain()
{
    _id_362C58E8BB39BCDA::registerbrgametypefunc( "playerWelcomeSplashes", ::brtruck_playerwelcomesplashes );
    _id_362C58E8BB39BCDA::registerbrgametypefunc( "onStartGameType", ::onstartgametype );
    _id_362C58E8BB39BCDA::registerbrgametypefunc( "playerKilledSpawn", ::playerrespawn );
    _id_362C58E8BB39BCDA::registerbrgametypefunc( "markPlayerAsEliminatedOnKilled", ::markplayeraseliminatedonkilled );
    _id_362C58E8BB39BCDA::registerbrgametypefunc( "mayConsiderPlayerDead", ::mayconsiderplayerdead );
    _id_362C58E8BB39BCDA::registerbrgametypefunc( "isTeamEliminated", ::isteameliminated );
    _id_362C58E8BB39BCDA::registerbrgametypefunc( "infilSequence", ::_id_73BDF8B18E29B13F );
    waittillframeend;
    level.ontimelimit = ::brtruck_ontimelimit;
    level.modeplayerkilledspawn = ::playerkilledspawn;
    brtruck_cleanupents();
    level.validautoassignquests = [];
    level.validautoassignquests[0] = "assassination";
    level.validautoassignquests[1] = "domination";
    level.validautoassignquests[2] = "scavenger";
    level.startjuggdelivery = 0;
}

brtruck_initdialog()
{
    level endon( "game_ended" );
    level waittill( "br_dialog_initialized" );
    game["dialog"]["vehicle_under_attack"] = "truckwars_armored_vehicle_under_attack";
    game["dialog"]["vehicle_spawn_disabled"] = "truckwars_armored_vehicle_spawn_disabled";
    game["dialog"]["vehicle_spawn_enabled"] = "truckwars_armored_vehicle_spawn_enabled";
    game["dialog"]["vehicle_destroyed"] = "truckwars_armor_vehicle_destroyed";
}

brtruck_cleanupents()
{
    scripts\cp_mp\utility\game_utility::removematchingents_bykey( "delete_on_load", "targetname" );
    scripts\cp_mp\utility\game_utility::removematchingents_bymodel( "door_prison_cell_metal_mp", 1 );
    scripts\cp_mp\utility\game_utility::removematchingents_bymodel( "door_wooden_panel_mp_01", 1 );
    scripts\cp_mp\utility\game_utility::removematchingents_bymodel( "me_electrical_box_street_01", 1 );
}

brtruck_initexternalfeatures()
{
    level._effect["light_tank_land"] = loadfx( "vfx/iw8_mp/killstreak/vfx_tank_dropoff_dust.vfx" );
}

onstartgametype()
{
    initspawns();
    level thread initvehicles();
}

brtruck_playerwelcomesplashes( data )
{
    self endon( "disconnect" );
    self waittill( "spawned_player" );
    wait 1;
    scripts\mp\hud_message::showsplash( "br_gametype_truckwar_prematch_welcome" );

    if ( !istrue( level.br_infils_disabled ) )
    {
        self waittill( "br_jump" );

        while ( !self isonground() )
            waitframe();
    }
    else
        level waittill( "prematch_done" );

    _id_715028F54BAD19A1::branalytics_landing( self );
    wait 1;
    scripts\mp\hud_message::showsplash( "br_gametype_truckwar_welcome" );
    _id_2CEDCC356F1B9FC8::brleaderdialogplayer( "primary_objective", self, 0 );
}

brtruck_ontimelimit()
{
    if ( isdefined( level.numendgame ) )
        level thread _id_1E4A61DB11011446::startendgame( 1 );

    level.numendgame = undefined;
}

mayconsiderplayerdead( player )
{
    return 1;
}

markplayeraseliminatedonkilled()
{
    return 1;
}

vehiclespawn_getspawndata( loc )
{
    spawndata = spawnstruct();
    spawndata.origin = loc.origin;
    spawndata.angles = loc.angles;
    spawndata.spawntype = "GAME_MODE";
    spawndata.showheadicon = 1;
    return spawndata;
}

registervehicletype( refname, _id_E4015CFE956F4F3F )
{
    vehicleinfo = spawnstruct();
    vehicleinfo.refname = refname;
    vehicleinfo.spawncallback = _id_E4015CFE956F4F3F;
    vehicleinfo.vehiclespawns = scripts\cp_mp\vehicles\vehicle_spawn::_id_B08E7E3A0B14F76F( refname );
    level.vehicleinfo[refname] = vehicleinfo;
}

vehiclespawn_littlebird( loc, _id_EE8DA5624236DC89 )
{
    if ( !isdefined( loc.angles ) )
        loc.angles = ( 0, randomfloat( 360 ), 0 );

    spawndata = vehiclespawn_getspawndata( loc );
    return scripts\cp_mp\vehicles\vehicle::vehicle_spawn( "little_bird", spawndata, _id_EE8DA5624236DC89 );
}

vehiclespawn_atv( loc, _id_EE8DA5624236DC89 )
{
    if ( !isdefined( loc.angles ) )
        loc.angles = ( 0, randomfloat( 360 ), 0 );

    spawndata = vehiclespawn_getspawndata( loc );
    return scripts\cp_mp\vehicles\vehicle::vehicle_spawn( "atv", spawndata, _id_EE8DA5624236DC89 );
}

vehiclespawn_tacrover( loc, _id_EE8DA5624236DC89 )
{
    if ( !isdefined( loc.angles ) )
        loc.angles = ( 0, randomfloat( 360 ), 0 );

    spawndata = vehiclespawn_getspawndata( loc );
    return scripts\cp_mp\vehicles\vehicle::vehicle_spawn( "tac_rover", spawndata, _id_EE8DA5624236DC89 );
}

initvehicles()
{
    if ( !isdefined( level.vehicleinfo ) )
        level.vehicleinfo = [];

    registervehicletype( "little_bird", ::vehiclespawn_littlebird );
    registervehicletype( "atv", ::vehiclespawn_atv );
    registervehicletype( "tac_rover", ::vehiclespawn_tacrover );
    level waittill( "prematch_fade_done" );
    wait 2.0;
}

_id_9E97F797DC8E211C()
{
    level.vehiclespawnlocs = [];
    level._id_8D137603BD840E40 = [];

    foreach ( vehicleinfo in level.vehicleinfo )
    {
        foreach ( spawnpoint in vehicleinfo.vehiclespawns )
        {
            index = level.vehiclespawnlocs.size;
            level.vehiclespawnlocs[index] = spawnpoint;
            level.vehiclespawnlocs[index].refname = vehicleinfo.refname;
        }
    }

    if ( 0 )
    {
        foreach ( loc in level.vehiclespawnlocs )
            thread scripts\mp\utility\debug::drawline( loc.origin, loc.origin + ( 0, 0, 1500 ), 1000, ( 1, 0, 0 ) );
    }

    level.vehiclespawnlocs = scripts\engine\utility::array_randomize( level.vehiclespawnlocs );

    if ( 0 )
    {
        for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < level.vehiclespawnlocs.size; _id_AC0E594AC96AA3A8++ )
        {
            loc = level.vehiclespawnlocs[_id_AC0E594AC96AA3A8];
            thread scripts\mp\utility\debug::drawline( loc.origin + ( 0, 0, 1500 ), loc.origin + ( 0, 0, 2500 ), 1000, ( 0, 1, 0 ) );
        }
    }
}

spawnvehicles()
{
    vehicles = [];

    foreach ( team, loc in level._id_8D137603BD840E40 )
    {
        vehicleinfo = level.vehicleinfo[loc.refname];
        vehicle = [[ vehicleinfo.spawncallback ]]( loc );
        vehicles[vehicles.size] = vehicle;
    }

    maxvehiclecount = getdvarint( "dvar_58C9645BC2B9D636", 120 );
    _id_95D1B9EDAE469D81 = maxvehiclecount - vehicles.size;

    for ( index = 0; index < level.vehiclespawnlocs.size && _id_95D1B9EDAE469D81 > 0; index++ )
    {
        loc = level.vehiclespawnlocs[index];

        if ( isdefined( loc ) )
        {
            vehicleinfo = level.vehicleinfo[loc.refname];
            vehicle = [[ vehicleinfo.spawncallback ]]( loc );
            _id_95D1B9EDAE469D81--;
        }
    }

    level.teamvehicles = vehicles;
}

assignvehiclestoteams()
{
    vehicles = level.teamvehicles;
    level.teamvehicles = [];
    level.teamcanrespawn = [];
    level._id_E3CCF0898A949BEC = [];
    index = 0;

    foreach ( _id_F90358454413407F in level.teamnamelist )
    {
        if ( scripts\mp\utility\teams::getteamdata( _id_F90358454413407F, "players" ).size == 0 )
            continue;

        vehicle = vehicles[index];
        _id_020B77FBF1AF1A5D( vehicle, _id_F90358454413407F );
        index++;
    }
}

_id_020B77FBF1AF1A5D( vehicle, team, _id_E751C7771E6A1E5C )
{
    level.teamvehicles[team] = vehicle;
    level.teamcanrespawn[team] = 1;
    level thread watchvehicleingas( vehicle, team );
    level thread _id_3E5A0635A240EDE5( vehicle, team );
    level thread notifyteamonvehicledeath( vehicle, team );
    level thread _id_46ED8B0B237087F8( vehicle, team );
    scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_setteam( vehicle, team );

    if ( istrue( _id_E751C7771E6A1E5C ) && getdvarint( "dvar_051DF9C2CA5EE638", 1 ) == 1 )
    {
        players = scripts\mp\utility\teams::getteamdata( team, "players" );

        foreach ( player in players )
        {
            if ( istrue( player.br_iseliminated ) )
                player thread playerrespawn( 1 );
        }
    }

    _id_96EEC65D35FBA521( team );
}

watchvehicleingas( vehicle, team )
{
    vehicle endon( "death" );
    players = scripts\mp\utility\teams::getteamdata( team, "players" );

    foreach ( player in players )
        player scripts\engine\utility::ent_flag_init( "respawn_vehicle_in_gas" );

    while ( isdefined( vehicle ) )
    {
        _id_819EDACDACB810E4 = _id_2695A20D4011076D::getdangercircleorigin();
        _id_E86632D645C137D0 = _id_2695A20D4011076D::getdangercircleradius();
        _id_0DCDCEA34083B6B8 = getdvarint( "dvar_54E04086872E7D2C", 0 ) == 1;

        if ( _id_0DCDCEA34083B6B8 || distance2dsquared( _id_819EDACDACB810E4, vehicle.origin ) > _id_E86632D645C137D0 * _id_E86632D645C137D0 )
        {
            vehicle thread _id_6C35D65FC1F38EB8();

            if ( level.teamcanrespawn[team] == 1 )
            {
                level.teamcanrespawn[team] = 0;
                players = scripts\mp\utility\teams::getteamdata( team, "players" );

                foreach ( player in players )
                    player scripts\engine\utility::ent_flag_set( "respawn_vehicle_in_gas" );

                scripts\mp\hud_util::showsplashtoteam( team, "br_gametype_truckwar_vehicle_spawn_disabled" );
                level thread _id_2CEDCC356F1B9FC8::brleaderdialog( "vehicle_spawn_disabled", 0, players, undefined );
                level thread [[ level.updategameevents ]]();
            }
        }
        else if ( level.teamcanrespawn[team] == 0 )
        {
            vehicle notify( "vehicle_gas_exit" );
            vehicle._id_C2B8326EF7ABCAE6 = 0;
            level.teamcanrespawn[team] = 1;
            players = scripts\mp\utility\teams::getteamdata( team, "players" );

            foreach ( player in players )
                player scripts\engine\utility::ent_flag_clear( "respawn_vehicle_in_gas" );

            scripts\mp\hud_util::showsplashtoteam( team, "br_gametype_truckwar_vehicle_spawn_enabled" );
            level thread _id_2CEDCC356F1B9FC8::brleaderdialog( "vehicle_spawn_enabled", 0, players, undefined );
            level thread [[ level.updategameevents ]]();
        }

        waitframe();
    }
}

_id_6C35D65FC1F38EB8()
{
    self endon( "death" );
    self endon( "vehicle_gas_exit" );

    if ( istrue( self._id_C2B8326EF7ABCAE6 ) )
        return;

    self._id_C2B8326EF7ABCAE6 = 1;
    _id_796DBBB5B21A7303 = getdvarfloat( "dvar_A705A5CAA6EA4DAF", 0.05 );
    _id_C4C191BEFB977DB0 = self.maxhealth * _id_796DBBB5B21A7303;

    while ( isdefined( self ) )
    {
        wait 1.0;
        self dodamage( _id_C4C191BEFB977DB0, self.origin, undefined, undefined, "MOD_TRIGGER_HURT", "danger_circle_br" );
    }
}

_id_3E5A0635A240EDE5( vehicle, team )
{
    vehicle endon( "death" );
    _id_5CC086A792B04FCE = getdvarfloat( "dvar_DEF42F45937BE461", 5.0 ) * 1000;
    lastplayedtime = undefined;

    while ( isdefined( vehicle ) )
    {
        vehicle waittill( "damage_taken", data );
        vehicle.lastdamagedtime = gettime();
        vehicle thread _id_888A901C55A0C460( team );

        if ( data.meansofdeath == "MOD_TRIGGER_HURT" )
            continue;

        if ( isdefined( lastplayedtime ) && lastplayedtime + _id_5CC086A792B04FCE > gettime() )
            continue;

        lastplayedtime = gettime();
        players = scripts\mp\utility\teams::getteamdata( team, "players" );
        scripts\mp\hud_util::showsplashtoteam( team, "br_gametype_truckwar_vehicle_under_attack" );
        level thread _id_2CEDCC356F1B9FC8::brleaderdialog( "vehicle_under_attack", 0, players, undefined );
    }
}

_id_888A901C55A0C460( team )
{
    self endon( "death" );
    self notify( "blockHealing" );
    self endon( "blockHealing" );
    self._id_A2DA885FCC826D37 = 1;
    _id_96EEC65D35FBA521( team );
    _id_5CC086A792B04FCE = getdvarfloat( "dvar_AA27DEA6D1C24CA3", 15.0 );
    wait( _id_5CC086A792B04FCE );
    self._id_A2DA885FCC826D37 = 0;
    _id_96EEC65D35FBA521( team );
}

_id_46ED8B0B237087F8( vehicle, team )
{
    vehicle endon( "death" );

    while ( isdefined( vehicle ) )
    {
        vehicle waittill( "upgrade_message", message );

        if ( message != "trophy_ammo_used" )
        {
            _id_F7B6CC6C062A7A43 = _id_E50C00059892A159( message );
            scripts\mp\hud_util::showsplashtoteam( team, _id_F7B6CC6C062A7A43 );
        }

        _id_96EEC65D35FBA521( team );
    }
}

_id_E50C00059892A159( message )
{
    switch ( message )
    {
        case "armor_upgraded":
            return "br_gametype_truckwar_vehicle_armor_upgraded";
        case "trophy_activated":
            return "br_gametype_truckwar_vehicle_trophy_activated";
        case "uav_activated":
            return "br_gametype_truckwar_vehicle_portable_radar_activated";
        case "barrel_activated":
            return "br_gametype_truckwar_vehicle_barrel_upgraded";
        case "trophy_no_ammo":
            return "br_gametype_truckwar_vehicle_trophy_no_ammo";
        case "trophy_ammo_refill":
            return "br_gametype_truckwar_vehicle_trophy_refilled";
    }
}

notifyteamonvehicledeath( vehicle, team )
{
    players = scripts\mp\utility\teams::getteamdata( team, "players" );

    foreach ( player in players )
        player scripts\engine\utility::ent_flag_init( "respawn_vehicle_death" );

    vehicle waittill( "death" );
    level.teamcanrespawn[team] = 0;
    players = scripts\mp\utility\teams::getteamdata( team, "players" );

    foreach ( player in players )
        player scripts\engine\utility::ent_flag_set( "respawn_vehicle_death" );

    scripts\mp\hud_util::showsplashtoteam( team, "br_gametype_truckwar_vehicle_destroyed" );
    level thread _id_2CEDCC356F1B9FC8::brleaderdialog( "vehicle_destroyed", 0, players, undefined );
    level thread [[ level.updategameevents ]]();
    _id_96EEC65D35FBA521( team );
}

gettruckspawns( _id_7731ADEF63E19B0C, vehicletype )
{
    if ( level.mapname != "mp_br_mechanics" )
        return getpresettruckspawns( _id_7731ADEF63E19B0C, vehicletype );

    _id_0EB62FAD9344BDA2 = level.teamnamelist.size;
    _id_F806489200F3B88B = 0;

    foreach ( _id_F90358454413407F in level.teamnamelist )
    {
        if ( scripts\mp\utility\teams::getteamdata( _id_F90358454413407F, "players" ).size > 0 )
            _id_F806489200F3B88B++;
    }

    _id_0EB62FAD9344BDA2 = _id_F806489200F3B88B;
    _id_C0FD4E75A105DEAE = 360 / _id_0EB62FAD9344BDA2;
    circlecenter = ( 0, 0, 100 );

    if ( level.mapname == "mp_br_mechanics" )
    {
        circlecenter = ( 0, 0, 100 );
        _id_73562BF0DDC8B02D = 5000;
    }
    else
    {
        circlecenter = ( 4000, 10000, 100 );
        _id_73562BF0DDC8B02D = 40000;
    }

    _id_FBCABD62B8F66EB8 = scripts\engine\trace::create_default_contents( 1 );
    _id_29D9D2428185616D = [];

    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_0EB62FAD9344BDA2; _id_AC0E594AC96AA3A8++ )
    {
        angles = _id_AC0E594AC96AA3A8 * _id_C0FD4E75A105DEAE;
        forward = anglestoforward( ( 0, angles, 0 ) );
        origin = circlecenter + forward * _id_73562BF0DDC8B02D;
        groundorigin = scripts\engine\utility::drop_to_ground( origin, 10000, -20000, undefined, _id_FBCABD62B8F66EB8 );
        origin = ( origin[0], origin[1], groundorigin[2] + 200 );
        vehicle = spawnstruct();
        vehicle.origin = origin;
        _id_7224BACAB3F8EE26 = ( 0, 0, 0 );
        vehicle.angles = vectortoangles( forward * -1 );
        vehicle.targetname = _id_7731ADEF63E19B0C;
        vehicle.vehicletype = vehicletype;
        _id_29D9D2428185616D[_id_29D9D2428185616D.size] = vehicle;
    }

    return _id_29D9D2428185616D;
}

getpresettruckspawns( _id_7731ADEF63E19B0C, vehicletype )
{
    _id_A36AA7AE98DA9C1F = [];
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 8007.48, 61748.5, 1065.47 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 15903.9, 56363, 1806.17 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 24328.3, 51258.6, 2340.31 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 31596, 44922.1, 774.951 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 41390.1, 44150.8, 1575.32 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 42884.3, 34337.3, -100.002 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 46427.1, 26898.2, -418.97 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 47481.6, 17902.9, -347.17 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 51513, 11868.2, 364.799 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 59490.7, 5001.68, 315.383 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 58757.3, -3209.9, -68.5192 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 60905.3, -11867.7, -210.554 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 57503.5, -21343.6, -347.686 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 58058.4, -29123.9, -198.817 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 56845, -37347.1, 29.8755 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 47090.2, -42644.5, -124.32 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 37122.1, -41432.6, -632.351 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 30926.8, -36382.6, -565.888 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 26054.5, -32738.7, -591.938 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 16764.4, -35736.8, 324.124 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 10670.9, -33911.4, -468.433 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 3021.04, -36802.2, -112.528 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -3065.84, -41388.7, 386.737 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -10682.6, -41533.1, 95.235 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -19405.3, -42648.2, 391.85 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -24509.8, -37263.1, 885.738 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -30469.9, -36715.2, 158.07 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -35104.8, -29279.8, -338.376 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -36304, -21301.4, 475.675 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -37949.1, -15420.2, 72.8627 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -40225.9, -7747.02, 348.617 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -39333.7, 779.045, 656.499 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -38032.3, 8142.15, 504.84 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -36624.3, 15865.7, 1225.04 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -34694.2, 23428.1, 240.757 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -35853.7, 31331.3, 1348.31 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -27803.6, 36403.8, 518.574 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -28563.5, 45883.2, 2682.65 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -24012.3, 54658.8, 2737.11 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -20594.6, 63464.4, 2395.54 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -10879, 62434.7, 1628.43 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -1100.71, 58870.3, 518.125 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 13284.5, 43682, 1055.62 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 24767.1, 32309.8, 802.438 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 35259.2, 18524.1, 349.512 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( 35202.8, -5885.98, -651.857 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -18560.9, -29413.2, 88.3296 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -31690.9, 3418.5, -291.875 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -13617.7, 30860.6, -247.676 );
    _id_A36AA7AE98DA9C1F[_id_A36AA7AE98DA9C1F.size] = ( -6597.38, 30600.7, -422.458 );
    _id_A36AA7AE98DA9C1F = scripts\engine\utility::array_randomize( _id_A36AA7AE98DA9C1F );
    _id_FBCABD62B8F66EB8 = scripts\engine\trace::create_default_contents( 1 );

    foreach ( spawnorigin in _id_A36AA7AE98DA9C1F )
    {
        groundorigin = scripts\engine\utility::drop_to_ground( spawnorigin, 10000, -20000, undefined, _id_FBCABD62B8F66EB8 );
        origin = ( spawnorigin[0], spawnorigin[1], groundorigin[2] + 200 );
        spawnorigin = origin;
    }

    _id_29D9D2428185616D = [];
    _id_0EB62FAD9344BDA2 = level.teamnamelist.size;
    _id_F806489200F3B88B = 0;

    foreach ( _id_F90358454413407F in level.teamnamelist )
    {
        if ( scripts\mp\utility\teams::getteamdata( _id_F90358454413407F, "players" ).size > 0 )
            _id_F806489200F3B88B++;
    }

    _id_0EB62FAD9344BDA2 = _id_F806489200F3B88B;
    _id_0EB62FAD9344BDA2 = min( _id_0EB62FAD9344BDA2, 50 );

    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_0EB62FAD9344BDA2; _id_AC0E594AC96AA3A8++ )
    {
        vehicle = spawnstruct();
        vehicle.origin = _id_A36AA7AE98DA9C1F[_id_AC0E594AC96AA3A8];
        _id_8589033A649DF46B = ( 0, 0, 0 ) - vehicle.origin;
        vehicle.angles = vectortoangles( _id_8589033A649DF46B );
        vehicle.targetname = _id_7731ADEF63E19B0C;
        vehicle.vehicletype = vehicletype;
        _id_29D9D2428185616D[_id_29D9D2428185616D.size] = vehicle;
    }

    return _id_29D9D2428185616D;
}

gethelispawns( _id_7731ADEF63E19B0C, vehicletype )
{
    _id_29D9D2428185616D = [];
    _id_0EB62FAD9344BDA2 = 3;
    _id_C0FD4E75A105DEAE = 360 / _id_0EB62FAD9344BDA2;
    circlecenter = ( 0, 0, 100 );
    _id_73562BF0DDC8B02D = 1000;

    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_0EB62FAD9344BDA2; _id_AC0E594AC96AA3A8++ )
    {
        angles = _id_AC0E594AC96AA3A8 * _id_C0FD4E75A105DEAE;
        forward = anglestoforward( ( 0, angles, 0 ) );
        origin = circlecenter + forward * _id_73562BF0DDC8B02D;
        vehicle = spawnstruct();
        vehicle.origin = origin;
        _id_7224BACAB3F8EE26 = ( 0, 0, 0 );
        vehicle.angles = vectortoangles( forward * -1 );
        vehicle.targetname = _id_7731ADEF63E19B0C;
        vehicle.vehicletype = vehicletype;
        _id_29D9D2428185616D[_id_29D9D2428185616D.size] = vehicle;
    }

    return _id_29D9D2428185616D;
}

isteameliminated( team )
{
    if ( !isdefined( level.teamcanrespawn ) )
        return 0;

    return scripts\mp\utility\teams::getteamdata( team, "aliveCount" ) == 0 && !istrue( level.teamcanrespawn[team] );
}

playerkilledspawn( _id_642470E1ABC1BBF9, _id_8B3F6477DBED24D7 )
{
    if ( !scripts\mp\flags::gameflag( "prematch_done" ) )
        return 0;

    _id_642470E1ABC1BBF9.victim thread playerrespawn();
    _id_642470E1ABC1BBF9.victim thread _id_6489FCDFE6FA2E36::spawnspectator( _id_642470E1ABC1BBF9, _id_8B3F6477DBED24D7 );
    return 1;
}

playerrespawn( _id_5A1633A0A398BEE1 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "gulag_auto_win" );
    self notify( "playerRespawn" );
    self endon( "playerRespawn" );

    if ( istrue( level.gameended ) )
        return;

    if ( isteameliminated( self.team ) || scripts\engine\utility::ent_flag( "respawn_vehicle_death" ) )
    {
        thread _id_6489FCDFE6FA2E36::triggereliminatedoverlay();
        return;
    }

    if ( getdvarint( "dvar_FE3AFD6EAD4AA523", 1 ) == 1 )
        self endon( "brWaitAndSpawnClientComplete" );

    _id_30839284ADD41CED = level.autorespawnwaittime;

    if ( istrue( _id_5A1633A0A398BEE1 ) )
        _id_30839284ADD41CED = 0;

    _id_AC5CF023CA77DB21 = getdvarfloat( "dvar_DE0DFC4549393BA2", 5.0 );

    if ( _id_30839284ADD41CED < _id_AC5CF023CA77DB21 )
        _id_30839284ADD41CED = _id_AC5CF023CA77DB21;

    if ( level.respawntimedisable != 0 )
        _id_30839284ADD41CED = 0;

    scripts\engine\utility::ent_flag_init( "playerRespawn_intermission_spawned" );
    self.intermissionspawnorigin = undefined;
    self.intermissionspawntime = undefined;
    scripts\mp\utility\lower_message::setlowermessageomnvar( "waiting_to_spawn", int( gettime() + _id_30839284ADD41CED * 1000 ) );
    _id_A294C35CBB452CBF = _id_30839284ADD41CED - _id_AC5CF023CA77DB21;
    _id_D2F5422694822652 = _id_30839284ADD41CED - _id_A294C35CBB452CBF;
    _id_C445F6D6BC71ED85 = _id_30839284ADD41CED - getdvarfloat( "dvar_0879A2FDE5543837", 5.0 );
    _id_1E4A61DB11011446::_id_258C4F40DEE8189A();
    thread fadetogearingup( _id_C445F6D6BC71ED85 );
    result = scripts\engine\utility::waittill_notify_or_timeout_return( "respawn_vehicle_death", _id_A294C35CBB452CBF );

    if ( result != "respawn_vehicle_death" )
    {
        thread updateprestreamrespawn();
        result = scripts\engine\utility::waittill_notify_or_timeout_return( "respawn_vehicle_death", _id_D2F5422694822652 );
    }

    self notify( "stop_updatePrestreamRespawn" );

    if ( scripts\engine\utility::ent_flag( "respawn_vehicle_death" ) )
        thread _id_6489FCDFE6FA2E36::setbuybackpingmessage();
    else if ( scripts\engine\utility::ent_flag( "respawn_vehicle_in_gas" ) )
        scripts\mp\utility\lower_message::setlowermessageomnvar( "vehicle_in_gas" );

    while ( !scripts\engine\utility::ent_flag( "respawn_vehicle_death" ) && !level.teamcanrespawn[self.team] )
        waitframe();

    if ( scripts\engine\utility::ent_flag( "respawn_vehicle_death" ) )
        thread _id_6489FCDFE6FA2E36::setbuybackpingmessage();

    if ( isteameliminated( self.team ) || scripts\engine\utility::ent_flag( "respawn_vehicle_death" ) )
    {
        thread _id_6489FCDFE6FA2E36::triggereliminatedoverlay();
        scripts\cp_mp\utility\omnvar_utility::setcachedclientomnvar( "ui_br_transition_type", 0 );
        _id_67708F418B1FAC79::gulagfadefromblack();
        return;
    }

    spawnpoint = getspawnpoint();
    _id_11F3B4465C8B637B = _id_67708F418B1FAC79::playerprestreamrespawnorigin( spawnpoint );
    flareorigin = level.teamvehicles[self.team].origin;

    if ( getdvarint( "dvar_DF02345C60008647", 1 ) == 0 )
        _id_2CEDCC356F1B9FC8::playerwaittillstreamhintcomplete();

    scripts\engine\utility::ent_flag_clear( "playerRespawn_intermission_spawned" );
    self.intermissionspawnorigin = undefined;
    self.intermissionspawntime = undefined;
    scripts\mp\utility\lower_message::setlowermessageomnvar( "clear_lower_msg" );
    scripts\mp\playerlogic::spawnplayer( undefined, 0 );
    self.cachedomnars = [];
    scripts\cp_mp\execution::_clearexecution();
    _id_7E52B56769FA7774::initplayer();

    if ( _id_2CEDCC356F1B9FC8::_id_D6AE35E0CE14BBAF() && isdefined( level.player_respawn_struct ) )
        spawnpoint = scripts\engine\utility::getstruct( level.player_respawn_struct, "targetname" );

    _id_67708F418B1FAC79::gulagwinnerrespawn( 1, undefined, spawnpoint, 1, _id_11F3B4465C8B637B, 1, undefined, 0, 0, 1 );
    self notify( "respawn_view_set" );
    _id_0A34750D17473C49::unmarkplayeraseliminated( self );
    level thread scripts\mp\battlechatter_mp::trysaylocalsound( self, "stat_B092E3259EC308D8" );

    if ( isdefined( level.teamvehicles[self.team] ) )
    {
        flareorigin = level.teamvehicles[self.team].origin;
        scripts\cp_mp\utility\omnvar_utility::setcachedclientomnvar( "ui_br_team_cash_pockets", level.teamvehicles[self.team].health );
        scripts\cp_mp\utility\omnvar_utility::setcachedclientomnvar( "ui_br_team_cash_banked", level.teamvehicles[self.team].maxhealth );
    }

    level thread _id_64ACB6CE534155B7::utilflare_shootflare( flareorigin, "revive" );
    scripts\cp_mp\utility\omnvar_utility::setcachedclientomnvar( "ui_br_transition_type", 0 );
    _id_96EEC65D35FBA521( self.team );
}

fadetogearingup( waittime )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "spawned_player" );
    self notify( "fadeToGearingUp" );
    self endon( "fadeToGearingUp" );

    if ( isdefined( waittime ) && waittime > 0 )
        wait( waittime );

    if ( isteameliminated( self.team ) || !level.teamcanrespawn[self.team] )
        return;

    _id_B59F471C2C064E56 = 1.0;
    thread fadeoutin();
    wait( _id_B59F471C2C064E56 - 0.25 );
    scripts\cp_mp\utility\omnvar_utility::setcachedclientomnvar( "ui_br_transition_type", 2 );
    wait 0.25;

    if ( isteameliminated( self.team ) || !level.teamcanrespawn[self.team] )
    {
        scripts\cp_mp\utility\omnvar_utility::setcachedclientomnvar( "ui_br_transition_type", 0 );
        return;
    }

    if ( getdvarint( "dvar_F006294EF8B720A4", 1 ) == 1 )
    {
        _id_2CEDCC356F1B9FC8::playerclearstreamhintorigin();
        spawnpoint = getspawnpoint();
        _id_6489FCDFE6FA2E36::playerclearspectatekillchainsystem();
        _id_1E4A61DB11011446::spawnintermission( spawnpoint.origin, spawnpoint.angles );
        scripts\mp\spectating::setdisabled();
        self.intermissionspawnorigin = spawnpoint.origin;
        self.intermissionspawntime = gettime();
        scripts\engine\utility::ent_flag_set( "playerRespawn_intermission_spawned" );
    }
}

fadeoutin()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    _id_67708F418B1FAC79::gulagfadetoblack();
    result = scripts\engine\utility::waittill_any_return_no_endon_death_3( "spawned_player", "respawn_vehicle_in_gas", "gulag_auto_win" );

    if ( result == "spawned_player" || result == "respawn_vehicle_in_gas" )
        self waittill( "respawn_view_set" );
    else
        scripts\cp_mp\utility\omnvar_utility::setcachedclientomnvar( "ui_br_transition_type", 0 );

    _id_67708F418B1FAC79::gulagfadefromblack();
}

updateprestreamrespawn()
{
    self endon( "disconnect" );
    self endon( "spawned_player" );
    self endon( "stop_updatePrestreamRespawn" );
    self endon( "respawn_vehicle_death" );

    for (;;)
    {
        if ( scripts\engine\utility::ent_flag( "playerRespawn_intermission_spawned" ) )
        {
            spawnpoint = getspawnpoint();
            currenttime = gettime();

            if ( currenttime - self.intermissionspawntime >= getdvarfloat( "dvar_57FBCC1BAE0F210A", 2.0 ) * 1000 )
            {
                spawnpoint = getspawnpoint();
                _id_11F3B4465C8B637B = _id_67708F418B1FAC79::playerprestreamrespawnorigin( spawnpoint );
            }
        }
        else
        {
            spawnpoint = getspawnpoint();
            _id_11F3B4465C8B637B = _id_67708F418B1FAC79::playerprestreamrespawnorigin( spawnpoint );
        }

        wait 1.0;
    }
}

initspawns()
{
    level.spawnheight = getdvarfloat( "dvar_1CDB6B91E9C4A104", 2500 );
}

getspawnpoint( isplanejump )
{
    if ( !isdefined( self.redeployspawn ) )
    {
        self.redeployspawn = spawnstruct();
        return generatespawnpoint( istrue( isplanejump ) );
    }

    self.ti_spawn = 0;

    if ( isdefined( self.setspawnpoint ) )
    {
        spawnpoint = self.setspawnpoint;

        if ( !istrue( self.setspawnpoint.notti ) )
        {
            self.ti_spawn = 1;
            self playlocalsound( "tactical_spawn" );

            foreach ( _id_F90358454413407F in level.teamnamelist )
            {
                if ( _id_F90358454413407F != self.team )
                    self playsoundtoteam( "tactical_spawn", _id_F90358454413407F );
            }
        }

        spawnorigin = self.setspawnpoint.playerspawnpos;
        _id_FBCABD62B8F66EB8 = scripts\engine\trace::create_default_contents( 1 );
        groundorigin = scripts\engine\utility::drop_to_ground( spawnorigin, 10000, -20000, undefined, _id_FBCABD62B8F66EB8 );
        spawnorigin = ( spawnorigin[0], spawnorigin[1], groundorigin[2] );
        spawnorigin = spawnorigin + ( 0, 0, 1 ) * level.brtdm_config.spawnheight[self.team];

        if ( getdvarint( "dvar_53B56FCD1AD4A8CE" ) == 1 )
            thread scripts\mp\utility\debug::drawline( spawnorigin, groundorigin, 15.0, ( 1, 1, 0 ) );

        self.redeployspawn.origin = spawnorigin;
        self.redeployspawn.angles = self.setspawnpoint.playerspawnangles;
        self.redeployspawn.lifeid = self.lifeid;
        self.redeployspawn.time = gettime();
        scripts\mp\equipment\tac_insert::spawnpoint_clearspawnpoint( 0, 1 );
    }
    else if ( self.redeployspawn.team != self.team || self.redeployspawn.lifeid != self.lifeid || istrue( self.redeployspawn.isplanejump ) )
        return generatespawnpoint( istrue( isplanejump ) );

    return self.redeployspawn;
}

generatespawnpoint( isplanejump )
{
    spawnorigin = level.teamvehicles[self.team].origin;
    _id_FBCABD62B8F66EB8 = scripts\engine\trace::create_default_contents( 1 );
    result = scripts\engine\trace::ray_trace( spawnorigin + ( 0, 0, 10000 ), spawnorigin - ( 0, 0, 20000 ), undefined, _id_FBCABD62B8F66EB8 )["position"];
    spawnorigin = ( spawnorigin[0], spawnorigin[1], result[2] + level.spawnheight );
    self.redeployspawn.origin = spawnorigin;
    self.redeployspawn.angles = level.teamvehicles[self.team].angles;
    self.redeployspawn.time = gettime();
    self.redeployspawn.team = self.team;
    self.redeployspawn.index = -1;
    self.redeployspawn.lifeid = self.lifeid;
    self.redeployspawn.isplanejump = isplanejump;
    return self.redeployspawn;
}

watchspawninput()
{
    while ( !isdefined( level.players ) || level.players.size == 0 )
        waitframe();

    _id_C6BD826CA92175D8 = 1;

    for (;;)
    {
        waitframe();

        if ( getdvarint( "dvar_C8B7643C6637E674", 0 ) != 0 )
        {
            damage = 1000;
            radiusdamage( level.teamvehicles["axis"].origin, 1000, damage, damage );
        }
    }
}

addspawnlocation()
{
    if ( !isdefined( level.truckwarspawnlocations ) )
        level.truckwarspawnlocations = [];

    level.truckwarspawnlocations[level.truckwarspawnlocations.size] = level.players[0].origin;

    foreach ( origin in level.truckwarspawnlocations )
    {

    }
}

#using_animtree("script_model");

init_airdrop_anims()
{
    level.scr_animtree["ac130"] = #animtree;
    level.scr_anim["ac130"]["truck_drop"] = %mp_mkilo23_gunner_drop_acharlie130;
    level.scr_animname["ac130"]["truck_drop"] = "mp_mkilo23_gunner_drop_acharlie130";
    level.scr_anim["ac130"]["truck_drop_trimmed"] = %mp_mkilo23_gunner_drop_acharlie130_trimmed;
    level.scr_animname["ac130"]["truck_drop_trimmed"] = "mp_mkilo23_gunner_drop_acharlie130_trimmed";
    level.scr_animtree["parachute"] = #animtree;
    level.scr_anim["parachute"]["truck_drop"] = %mp_mkilo23_gunner_drop_parachute;
    level.scr_animname["parachute"]["truck_drop"] = "mp_mkilo23_gunner_drop_parachute";
    level.scr_anim["parachute"]["truck_drop_trimmed"] = %mp_mkilo23_gunner_drop_parachute_trimmed;
    level.scr_animname["parachute"]["truck_drop_trimmed"] = "mp_mkilo23_gunner_drop_parachute_trimmed";
    init_airrop_vehicle_anims();
}

#using_animtree("mp_vehicles_always_loaded");

init_airrop_vehicle_anims()
{
    level.scr_animtree["truck"] = #animtree;
    level.scr_anim["truck"]["truck_drop"] = %mp_mkilo23_gunner_drop_mkilo23;
    level.scr_anim["truck"]["truck_drop_trimmed"] = %mp_mkilo23_gunner_drop_mkilo23_trimmed;
}

truck_airdrop( vehicle, position, angles, _id_134736684B51C14B )
{
    animation = scripts\engine\utility::ter_op( istrue( _id_134736684B51C14B ), "truck_drop", "truck_drop_trimmed" );
    vehicle.animname = "truck";
    vehicle._id_AE21E3BF76862551 = 1;
    vehicle vehphys_forcekeyframedmotion();
    vehicle hide();
    scenenode = spawn( "script_model", position );
    scenenode.angles = angles;
    scenenode setmodel( "tag_origin" );
    objent = undefined;
    parachute = spawn( "script_model", position );
    parachute.angles = angles;
    parachute.animname = "parachute";
    parachute setmodel( "veh8_mil_lnd_bromeo_parachute" );
    parachute scripts\common\anim::setanimtree();
    parachute hide();
    carrier = undefined;

    if ( istrue( _id_134736684B51C14B ) )
    {
        carrier = spawn( "script_model", position );
        carrier.angles = angles;
        carrier.animname = "ac130";
        carrier setmodel( "veh8_mil_air_acharlie130_ks_carrier" );
        carrier scripts\common\anim::setanimtree();
        carrier hide();
    }

    scenenode.vehicle = vehicle;
    scenenode.parachute = parachute;
    scenenode.carrier = carrier;
    scenenode.objent = objent;
    _id_5119EBA6031EDF54 = gettime() + level.frameduration;
    scenenode.endtime = gettime();
    scenenode.vehicleendtime = _id_5119EBA6031EDF54 + getanimlength( level.scr_anim["truck"][animation] ) * 1000;

    if ( scenenode.vehicleendtime > scenenode.endtime )
        scenenode.endtime = scenenode.vehicleendtime;

    scenenode.parachuteendtime = _id_5119EBA6031EDF54 + getanimlength( level.scr_anim["parachute"][animation] ) * 1000;

    if ( scenenode.parachuteendtime > scenenode.endtime )
        scenenode.endtime = scenenode.parachuteendtime;

    scenenode.carrierendtime = _id_5119EBA6031EDF54 + getanimlength( level.scr_anim["ac130"][animation] ) * 1000;

    if ( scenenode.carrierendtime > scenenode.endtime )
        scenenode.endtime = scenenode.carrierendtime;

    scenenode thread truck_airdropinternal( animation );
    return vehicle;
}

truck_airdropinternal( animation )
{
    scripts\common\anim::anim_first_frame_solo( self.vehicle, animation );
    scripts\common\anim::anim_first_frame_solo( self.parachute, animation );

    if ( isdefined( self.carrier ) )
        scripts\common\anim::anim_first_frame_solo( self.carrier, animation );

    waitframe();

    if ( isdefined( self.vehicle ) )
    {
        self.vehicle show();
        thread scripts\common\anim::anim_single_solo( self.vehicle, animation );
    }

    if ( isdefined( self.parachute ) )
    {
        self.parachute show();
        thread scripts\common\anim::anim_single_solo( self.parachute, animation );
    }

    if ( isdefined( self.carrier ) )
    {
        self.carrier show();
        self.carrier playloopsound( "iw8_cargotruck_drop_c130" );
        self.carrier setscriptablepartstate( "lights2", "on", 0 );
        self.carrier setscriptablepartstate( "contrails", "on", 0 );
        thread scripts\common\anim::anim_single_solo( self.carrier, animation );
    }

    while ( gettime() <= self.endtime )
    {
        if ( !isdefined( self.vehicle ) || istrue( self.vehicle.isdestroyed ) || gettime() >= self.vehicleendtime )
            thread truck_detachvehiclefromairdropsequence( self.vehicle );

        if ( isdefined( self.parachute ) && gettime() >= self.parachuteendtime )
            self.parachute delete();

        if ( isdefined( self.carrier ) && gettime() >= self.carrierendtime )
            self.carrier delete();

        waitframe();
    }

    thread truck_detachvehiclefromairdropsequence( self.vehicle );

    if ( isdefined( self.parachute ) )
        self.parachute delete();

    if ( isdefined( self.carrier ) )
        self.carrier delete();

    self delete();
}

truck_detachvehiclefromairdropsequence( vehicle )
{
    self.vehicle = undefined;

    if ( isdefined( vehicle ) )
    {
        vehicle vehphys_setdefaultmotion();
        vehicle thread _id_F004D4B200AA4C84();
    }
}

_id_F004D4B200AA4C84()
{
    self endon( "death" );
    self physics_registerforcollisioncallback();
    waitframe();
    endtime = gettime() + 5000;
    _id_E66474B0BA499331 = undefined;
    _id_BEC445E79E2F5B6A = undefined;

    while ( gettime() < endtime )
    {
        if ( !isdefined( _id_E66474B0BA499331 ) )
            _id_E66474B0BA499331 = vectordot( self vehicle_getvelocity(), ( 0, 0, -1 ) );
        else
        {
            _id_544768E59992F277 = vectordot( self vehicle_getvelocity(), ( 0, 0, -1 ) );
            _id_CDD8B2D07410AAB0 = ( _id_544768E59992F277 - _id_E66474B0BA499331 ) / level.framedurationseconds;

            if ( isdefined( _id_BEC445E79E2F5B6A ) )
            {
                if ( _id_BEC445E79E2F5B6A - _id_CDD8B2D07410AAB0 >= 300 )
                {
                    _id_327619A999339E18( self.origin, self.angles );
                    break;
                }
            }

            _id_E66474B0BA499331 = _id_544768E59992F277;
            _id_BEC445E79E2F5B6A = _id_CDD8B2D07410AAB0;
        }

        waitframe();
    }

    self physics_unregisterforcollisioncallback();
}

_id_327619A999339E18( position, angles )
{
    playfx( scripts\engine\utility::getfx( "light_tank_land" ), position, anglestoforward( angles ) );
    playsoundatpos( position, "iw8_c130_drop_mkilo" );
    earthquake( 0.3, 0.7, position, 800 );
    playrumbleonposition( "grenade_rumble", position );
    physicsexplosionsphere( position, 800, 400, 0.5 );
}

_id_73BDF8B18E29B13F( players )
{
    if ( getdvarint( "dvar_EC075EAAC396B9BB", 1 ) == 1 )
        level thread _id_E3327F035A47191B();

    if ( !_id_362C58E8BB39BCDA::isfeaturedisabled( "oneLife" ) )
    {
        level.disablespawning = 1;
        setdynamicdvar( _func_2EF675C13CA1C4AF( "dvar_D98C82B5A26DC973", scripts\mp\utility\game::getgametype(), "_numLives" ), 1 );
    }

    _id_9E97F797DC8E211C();

    foreach ( player in level.players )
    {
        if ( !isdefined( player ) )
            continue;

        player _id_67708F418B1FAC79::gulagfadetoblack();
        player thread _id_08AA3182C50A3094();
    }

    wait 2.0;
    scripts\mp\flags::gameflagset( "prematch_fade_done" );
    wait 2.0;
    spawnvehicles();
    assignvehiclestoteams();

    foreach ( player in level.players )
    {
        if ( !isdefined( player ) )
            continue;

        player thread _id_927A1C74689CE55A();
    }

    level thread _id_4EC88C05D0625CA0();
}

_id_08AA3182C50A3094()
{
    _id_11F3B4465C8B637B = _id_67708F418B1FAC79::playerprestreamrespawnorigin( level._id_8D137603BD840E40[self.team] );
}

_id_927A1C74689CE55A()
{
    _id_2CEDCC356F1B9FC8::playerwaittillstreamhintcomplete();
    vehicle = level.teamvehicles[self.team];

    if ( !istrue( vehicle._id_AE21E3BF76862551 ) )
        level thread truck_airdrop( vehicle, vehicle.origin, vehicle.angles, 0 );

    getspawnpoint( 1 );
    _id_C1763D3130BBE79A = anglestoforward( ( 0, randomint( 360 ), 0 ) );
    offset = getdvarint( "dvar_152992667994717B", 500 );
    height = getdvarint( "dvar_7B079D61A6A1B553", 3000 );
    spawnorigin = self.redeployspawn.origin + _id_C1763D3130BBE79A * offset + ( 0, 0, 1 ) * height;
    spawnangles = vectortoangles( self.redeployspawn.origin - spawnorigin );
    self setorigin( spawnorigin, 1 );
    self setplayerangles( spawnangles );
    thread _id_45B2B4A889E633FA::parachute( undefined, 0, undefined, 0 );
    _id_67708F418B1FAC79::gulagfadefromblack();
    self.plotarmor = undefined;
    self clearsoundsubmix( "mp_br_lobby_fade", 1.5 );
}

_id_E3327F035A47191B()
{
    ents = [];

    if ( getdvarint( "dvar_4E6765B5F47964DF", 1 ) == 1 )
    {
        _setdomflagiconinfo( "waypoint_repair_station_idle", 1, "neutral", "MP_BR_INGAME/REPAIR_STATION", "ui_mp_br_mapmenu_icon_truckwar_repair_idle", 0 );
        _setdomflagiconinfo( "waypoint_repair_station_in_use", 1, "neutral", "MP_BR_INGAME/REPAIR_STATION", "ui_mp_br_mapmenu_icon_truckwar_repair_in_use", 0 );
    }

    _id_757D4D2CE1701811 = getdvarint( "dvar_B4A41EB239A45BB2", 90000 );
    origins = _id_DA77FEE0CBA3F65A();

    foreach ( origin in origins )
    {
        _id_E4A6D0A55FD775A7 = _id_204A1F1178F8CA87( origin, sqrt( _id_757D4D2CE1701811 ) );
        _id_E4A6D0A55FD775A7._id_757D4D2CE1701811 = _id_757D4D2CE1701811;
        ents[ents.size] = _id_E4A6D0A55FD775A7;
    }

    _id_757D4D2CE1701811 = getdvarint( "dvar_15F14BA39B98E2D7", 90000 );
    origins = _id_D1ECD71915270559();

    foreach ( origin in origins )
    {
        _id_E4A6D0A55FD775A7 = _id_204A1F1178F8CA87( origin, sqrt( _id_757D4D2CE1701811 ) );
        _id_E4A6D0A55FD775A7._id_757D4D2CE1701811 = _id_757D4D2CE1701811;
        ents[ents.size] = _id_E4A6D0A55FD775A7;
    }

    level._id_02C467B902768C15 = ents;
}

_setdomflagiconinfo( name, _id_96D1603BEEEFA4EA, colors, string, image, _id_B50E35D9C370899B )
{
    level.waypointcolors[name] = colors;
    level.waypointbgtype[name] = _id_96D1603BEEEFA4EA;
    level.waypointstring[name] = string;
    level.waypointshader[name] = image;
    level.waypointpulses[name] = _id_B50E35D9C370899B;
}

_id_204A1F1178F8CA87( origin, radius )
{
    _id_E4A6D0A55FD775A7 = undefined;

    if ( getdvarint( "dvar_4E6765B5F47964DF", 1 ) == 1 )
    {
        trigger = spawn( "trigger_radius", origin, 0, int( radius ), int( radius ) );
        _id_E4A6D0A55FD775A7 = _id_6663215F917210AE::setupobjective( trigger );
        _id_E4A6D0A55FD775A7 scripts\mp\gameobjects::allowuse( "none" );
        _id_E4A6D0A55FD775A7.flagmodel hide();
        scripts\mp\objidpoolmanager::update_objective_position( _id_E4A6D0A55FD775A7.objidnum, _id_E4A6D0A55FD775A7.curorigin + ( 0, 0, 60 ) );
        _id_E4A6D0A55FD775A7 scripts\mp\gameobjects::setobjectivestatusicons( "waypoint_repair_station_idle" );
    }
    else
        _id_E4A6D0A55FD775A7 = spawnscriptable( "truckwar_repair_station", origin, ( 0, 0, 1 ) );

    _id_E4A6D0A55FD775A7.inuse = 0;
    _id_E4A6D0A55FD775A7._id_18E4B96D492D6950 = 0;
    return _id_E4A6D0A55FD775A7;
}

_id_DA77FEE0CBA3F65A()
{
    origins = [];

    if ( level.mapname == "mp_br_mechanics" )
        origins[origins.size] = ( 1850, -50, 0 );
    else
    {
        origins[origins.size] = ( -18964, -22238, -165 );
        origins[origins.size] = ( 5507, -29862, 62 );
        origins[origins.size] = ( -21604, 1168, -254 );
        origins[origins.size] = ( -6975, 19920, -262 );
        origins[origins.size] = ( -28578, 46653, 2746 );
        origins[origins.size] = ( -3080, 56856, 678 );
        origins[origins.size] = ( 19946, 3582, -390 );
        origins[origins.size] = ( 16578, -22869, -146 );
        origins[origins.size] = ( 46055, 24809, -342 );
    }

    return origins;
}

_id_D1ECD71915270559()
{
    origins = [];
    origins[origins.size] = ( -30563, 3055, -232 );
    origins[origins.size] = ( -21165, -15396, -246 );
    origins[origins.size] = ( -27563, -2557, -256 );
    origins[origins.size] = ( -22268, -27419, -82 );
    origins[origins.size] = ( -9895, -34131, 218 );
    origins[origins.size] = ( 10254, -20711, -231 );
    origins[origins.size] = ( 4552, -14424, -229 );
    origins[origins.size] = ( -11881, 1482, -262 );
    origins[origins.size] = ( -18095, 6481, -262 );
    origins[origins.size] = ( 10306, 14001, -270 );
    origins[origins.size] = ( 17112, 2074, -534 );
    origins[origins.size] = ( 33549, 26531, 627 );
    origins[origins.size] = ( 44925, 17451, -308 );
    origins[origins.size] = ( 45326, -265, 20 );
    return origins;
}

_id_4EC88C05D0625CA0()
{
    if ( getdvarint( "dvar_EC075EAAC396B9BB", 1 ) == 0 )
        return;

    _id_1CB68A5E7CC26C0F = getdvarfloat( "dvar_E7C32B801C5B43A2", 0.025 );
    _id_BED888265C10FCC1 = getdvarfloat( "dvar_9E06ADB574328430", 1.0 );

    for (;;)
    {
        foreach ( _id_E4A6D0A55FD775A7 in level._id_02C467B902768C15 )
            _id_E4A6D0A55FD775A7._id_59E9B68F790A1EF1 = 0;

        foreach ( team, truck in level.teamvehicles )
        {
            if ( !isdefined( truck ) )
                continue;

            _id_BBBAF88370F158B8 = istrue( truck._id_34F355A9DA5039E1 );
            _id_279EBFB6B9DCF247 = 0;

            foreach ( _id_E4A6D0A55FD775A7 in level._id_02C467B902768C15 )
            {
                distsq = distancesquared( truck.origin, scripts\engine\utility::ter_op( isdefined( _id_E4A6D0A55FD775A7.origin ), _id_E4A6D0A55FD775A7.origin, _id_E4A6D0A55FD775A7.curorigin ) );

                if ( distsq < _id_E4A6D0A55FD775A7._id_757D4D2CE1701811 )
                {
                    _id_E4A6D0A55FD775A7 _id_D3210B6035722F9A();
                    _id_E4A6D0A55FD775A7._id_59E9B68F790A1EF1 = 1;
                    _id_279EBFB6B9DCF247 = 1;

                    if ( istrue( truck._id_A2DA885FCC826D37 ) )
                        continue;

                    if ( truck.health == truck.maxhealth )
                        continue;

                    truck._id_34F355A9DA5039E1 = 1;

                    if ( !_id_BBBAF88370F158B8 )
                        _id_96EEC65D35FBA521( team );

                    _id_6F17073F208628D6 = int( _id_1CB68A5E7CC26C0F * truck.maxhealth );
                    truck scripts\cp_mp\vehicles\vehicle_damage::_id_653B96CE8310763E( _id_6F17073F208628D6 );

                    if ( getdvarint( "dvar_38D15E2D7DDBF066", 1 ) == 1 )
                    {
                        players = scripts\mp\utility\teams::getteamdata( team, "players" );

                        foreach ( player in players )
                            player _id_5762AC2F22202BA2::hudicontype( "truckheal" );
                    }

                    break;
                }
            }

            if ( _id_BBBAF88370F158B8 && !_id_279EBFB6B9DCF247 )
            {
                truck._id_34F355A9DA5039E1 = 0;
                _id_96EEC65D35FBA521( team );
            }
        }

        foreach ( _id_E4A6D0A55FD775A7 in level._id_02C467B902768C15 )
        {
            if ( !_id_E4A6D0A55FD775A7._id_59E9B68F790A1EF1 )
                _id_E4A6D0A55FD775A7 _id_EC3B48F24927F84E();
        }

        wait( _id_BED888265C10FCC1 );
    }
}

_id_D3210B6035722F9A()
{
    self._id_18E4B96D492D6950 = self.inuse;
    self.inuse = 1;

    if ( self.inuse != self._id_18E4B96D492D6950 )
    {
        if ( getdvarint( "dvar_4E6765B5F47964DF", 1 ) == 1 )
            scripts\mp\gameobjects::setobjectivestatusicons( "waypoint_repair_station_in_use" );
    }
}

_id_EC3B48F24927F84E()
{
    self._id_18E4B96D492D6950 = self.inuse;
    self.inuse = 0;

    if ( self.inuse != self._id_18E4B96D492D6950 )
    {
        if ( getdvarint( "dvar_4E6765B5F47964DF", 1 ) == 1 )
            scripts\mp\gameobjects::setobjectivestatusicons( "waypoint_repair_station_idle" );
    }
}

_id_96EEC65D35FBA521( team )
{
    truck = level.teamvehicles[team];
    _id_5C9DDCF56D36F133 = 0;

    if ( isdefined( truck ) && !istrue( truck.isdestroyed ) )
    {
        if ( scripts\cp_mp\vehicles\vehicle_interact::_id_969511C7E34A4434( truck, "armor" ) )
            _id_5C9DDCF56D36F133 = 1;

        if ( scripts\cp_mp\vehicles\vehicle_interact::_id_969511C7E34A4434( truck, "uav" ) )
            _id_5C9DDCF56D36F133 = _id_5C9DDCF56D36F133 + 2;

        if ( scripts\cp_mp\vehicles\vehicle_interact::_id_969511C7E34A4434( truck, "barrel" ) )
            _id_5C9DDCF56D36F133 = _id_5C9DDCF56D36F133 + 4;

        if ( scripts\cp_mp\vehicles\vehicle_interact::_id_969511C7E34A4434( truck, "trophy" ) )
        {
            _id_5C9DDCF56D36F133 = _id_5C9DDCF56D36F133 + 8;
            _id_5C9DDCF56D36F133 = _id_5C9DDCF56D36F133 + ( truck._id_FA8480818F379E09 << 4 );
        }
    }

    if ( !isdefined( truck ) || istrue( truck.isdestroyed ) )
        _id_5C9DDCF56D36F133 = _id_5C9DDCF56D36F133 + 64;
    else if ( istrue( truck._id_A2DA885FCC826D37 ) )
        _id_5C9DDCF56D36F133 = _id_5C9DDCF56D36F133 + 128;
    else if ( istrue( truck._id_34F355A9DA5039E1 ) )
        _id_5C9DDCF56D36F133 = _id_5C9DDCF56D36F133 + 256;

    players = scripts\mp\utility\teams::getteamdata( team, "players" );

    foreach ( player in players )
        player scripts\cp_mp\utility\omnvar_utility::setcachedclientomnvar( "ui_br_team_placement", _id_5C9DDCF56D36F133 );
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

registerentforoob( ent, ref )
{
    ent.oobref = ref;
}

deregisterentforoob( ent )
{
    ent.oobref = undefined;
}

registeroobentercallback( ref, callback )
{
    struct = getoobdata();
    struct.entercallbacks[ref] = callback;
}

registeroobexitcallback( ref, callback )
{
    struct = getoobdata();
    struct.exitcallbacks[ref] = callback;
}

registerooboutoftimecallback( ref, callback )
{
    struct = getoobdata();
    struct.outoftimecallbacks[ref] = callback;
}

registeroobclearcallback( ref, callback )
{
    struct = getoobdata();
    struct.clearcallbacks[ref] = callback;
}

isoob( ent, _id_3E36F415F762070E )
{
    if ( isoobimmune( ent ) )
        return 0;

    if ( istrue( _id_3E36F415F762070E ) && isoobimmune( ent ) )
        return 0;

    return isdefined( ent.oob ) && ent.oob > 0;
}

enableoob( ent )
{
    if ( !isdefined( ent.oob ) )
        ent.oob = 0;

    ent.oob++;

    if ( ent.oob == 1 )
    {
        if ( !isdefined( ent.oobimmunity ) || ent.oobimmunity <= 0 )
            onenteroob( ent );
    }
}

disableoob( ent )
{
    if ( !isdefined( ent.oob ) )
        return;

    ent.oob--;

    if ( ent.oob == 0 )
    {
        ent.oob = undefined;

        if ( !isdefined( ent.oobimmunity ) || ent.oobimmunity <= 0 )
            onexitoob( ent, 0 );
    }
}

isoobimmune( ent )
{
    return isdefined( ent.oobimmunity ) && ent.oobimmunity > 0;
}

enableoobimmunity( ent )
{
    if ( !isdefined( ent.oobimmunity ) )
        ent.oobimmunity = 0;

    ent.oobimmunity++;

    if ( ent.oobimmunity == 1 )
    {
        if ( isdefined( ent.oob ) && ent.oob > 0 )
            onexitoob( ent, 0 );
    }
}

disableoobimmunity( ent )
{
    ent.oobimmunity--;

    if ( ent.oobimmunity == 0 )
    {
        ent.oobimmunity = undefined;

        if ( isdefined( ent.oob ) && ent.oob > 0 )
            onenteroob( ent );
    }
}

clearoob( ent, _id_FCEF8D217A441961 )
{
    ent notify( "clear_oob" );

    if ( isoob( ent, 1 ) )
        onexitoob( ent, _id_FCEF8D217A441961, 1 );

    _id_A92C68F274CD0239 = undefined;

    if ( isplayer( ent ) )
        _id_A92C68F274CD0239 = ::playerclearcallback;
    else if ( isdefined( ent.oobref ) )
    {
        struct = getoobdata();
        _id_A92C68F274CD0239 = struct.clearcallbacks[ent.oobref];
    }

    if ( isdefined( _id_A92C68F274CD0239 ) )
        ent [[ _id_A92C68F274CD0239 ]]();

    ent.oobref = undefined;
    ent.oob = undefined;
    ent.oobimmunity = undefined;
    ent.oobtimeleft = undefined;
    ent.oobendtime = undefined;
    ent.oobtriggertype = undefined;
    ent._id_4A3CC04781D25C6F = undefined;

    if ( isdefined( ent.oobtriggers ) )
    {
        foreach ( trigger in ent.oobtriggers )
            trigger.entstouching[ent getentitynumber()] = undefined;

        ent.oobtriggers = undefined;
    }

    if ( isdefined( ent.oobsupressiontriggers ) )
    {
        foreach ( trigger in ent.oobsupressiontriggers )
            trigger.entstouching[ent getentitynumber()] = undefined;

        ent.oobsupressiontriggers = undefined;
    }
}

istouchingoobtrigger()
{
    if ( istrue( self.allowedintrigger ) )
        return 0;

    if ( !isdefined( level.outofboundstriggers ) )
        return 0;

    foreach ( trigger in level.outofboundstriggers )
    {
        if ( !interactswithgivenoobtrigger( trigger, self ) )
            continue;

        if ( self istouching( trigger ) )
            return 1;
    }

    return 0;
}

ispointinoutofbounds( _id_863C619037F3AC74, _id_DA8CEC9BCE12F9CB )
{
    _id_E448B9771980DFD6 = 0;

    if ( !isdefined( level.outofboundstriggers ) )
        return _id_E448B9771980DFD6;
    else
    {
        foreach ( trigger in level.outofboundstriggers )
        {
            if ( ispointinvolume( _id_863C619037F3AC74, trigger ) )
            {
                if ( isdefined( trigger.script_team ) && isdefined( _id_DA8CEC9BCE12F9CB ) && trigger.script_team != _id_DA8CEC9BCE12F9CB )
                    continue;
                else
                {
                    _id_E448B9771980DFD6 = 1;
                    break;
                }
            }
        }
    }

    return _id_E448B9771980DFD6;
}

initoob()
{
    thread watchoobtriggers();
    _id_3B64EB40368C1450::_id_2D6E7E0B80767910( "enterOOB", [ "killstreaks", "supers" ] );
}

onenteroob( ent )
{
    if ( ent scripts\cp_mp\vehicles\vehicle::isvehicle() && !isdefined( ent.streakinfo ) )
    {
        occupants = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getalloccupants( ent );

        foreach ( _id_F85572CD5F6117C6 in occupants )
            onenteroobtrigger( self, _id_F85572CD5F6117C6 );
    }

    _id_2D2D28B1528166D2 = undefined;
    trigger = getlastoobtrigger( ent );

    if ( !isdefined( trigger ) )
        trigger = self;

    triggertype = gettriggertype( ent, trigger );

    if ( isplayer( ent ) )
        _id_2D2D28B1528166D2 = ::playerentercallback;
    else if ( isdefined( ent.oobref ) )
    {
        struct = getoobdata();
        _id_2D2D28B1528166D2 = struct.entercallbacks[ent.oobref];
    }

    ent notify( "oob_cooldown_end" );

    if ( isdefined( ent.oobtimeleft ) && previouslytouchedtriggertype( ent, triggertype ) )
    {
        outofboundstime = ent.oobtimeleft / 1000;
        ent.oobendtime = int( gettime() + ent.oobtimeleft );
        ent.oobtimeleft = undefined;
        thread watchooboutoftime( ent, outofboundstime );
    }
    else
    {
        ent.oobtimeleft = undefined;
        ent.oobtriggertype = triggertype;
        outofboundstime = getoutofboundstime( triggertype );
        ent.oobendtime = int( gettime() + outofboundstime * 1000 );
        thread watchooboutoftime( ent, outofboundstime );
    }

    if ( isdefined( _id_2D2D28B1528166D2 ) )
        ent thread [[ _id_2D2D28B1528166D2 ]]( "exit_oob", "clear_oob", triggertype );
}

onexitoob( ent, _id_FCEF8D217A441961, _id_704294F906FAD67E )
{
    if ( ent scripts\cp_mp\vehicles\vehicle::isvehicle() && !isdefined( ent.streakinfo ) )
    {
        occupants = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getalloccupants( ent );

        foreach ( _id_F85572CD5F6117C6 in occupants )
            onexitoobtrigger( self, _id_F85572CD5F6117C6 );
    }

    ent notify( "exit_oob" );
    _id_6166EC335950C5F2 = undefined;

    if ( isplayer( ent ) )
        _id_6166EC335950C5F2 = ::playerexitcallback;
    else if ( isdefined( ent.oobref ) )
    {
        struct = getoobdata();
        _id_6166EC335950C5F2 = struct.exitcallbacks[ent.oobref];
    }

    ent notify( "oob_timeout_end" );

    if ( !istrue( _id_704294F906FAD67E ) )
    {
        if ( isdefined( ent.oobendtime ) )
        {
            ent.oobtimeleft = int( max( 0, ent.oobendtime - gettime() ) );
            ent.oobendtime = undefined;
            trigger = getlastoobtrigger( ent );
            triggertype = gettriggertype( ent, trigger );
            cooldowntime = getcooldowntime( triggertype );
            thread watchoobcooldown( ent, cooldowntime );
        }
    }

    if ( isdefined( _id_6166EC335950C5F2 ) )
        ent thread [[ _id_6166EC335950C5F2 ]]( _id_FCEF8D217A441961, _id_704294F906FAD67E, "clear_oob" );
}

onooboutoftime( ent )
{
    _id_106B10573BDEADF0 = undefined;

    if ( isplayer( ent ) )
    {
        _id_775C9A68F9C00019 = 1;

        if ( scripts\cp_mp\utility\game_utility::_id_0BEFF479639E6508() )
        {
            if ( istrue( level.infilcinematicactive ) )
                _id_775C9A68F9C00019 = 0;
            else if ( isdefined( level.matchcountdowntime ) && level.matchcountdowntime < 2 )
                _id_775C9A68F9C00019 = 0;
        }

        if ( _id_775C9A68F9C00019 )
            _id_106B10573BDEADF0 = ::playeroutoftimecallback;
    }
    else if ( isdefined( ent.oobref ) )
    {
        struct = getoobdata();
        _id_106B10573BDEADF0 = struct.outoftimecallbacks[ent.oobref];
    }

    if ( isdefined( _id_106B10573BDEADF0 ) )
        ent thread [[ _id_106B10573BDEADF0 ]]( "oob_timeout_end", "clear_oob" );
}

watchooboutoftime( ent, _id_8DD9F2EB8215A139 )
{
    if ( isplayer( ent ) )
        ent endon( "death_or_disconnect" );
    else
        ent endon( "death" );

    ent notify( "oob_timeout_end" );
    ent endon( "oob_timeout_end" );
    ent endon( "clear_oob" );
    wait( _id_8DD9F2EB8215A139 );
    thread onooboutoftime( ent );
}

watchoobcooldown( ent, _id_8DD9F2EB8215A139 )
{
    if ( isplayer( ent ) )
        ent endon( "death_or_disconnect" );
    else
        ent endon( "death" );

    ent notify( "oob_cooldown_end" );
    ent endon( "oob_cooldown_end" );
    ent endon( "clear_oob" );
    wait( _id_8DD9F2EB8215A139 );
    ent.oobtimeleft = undefined;
    ent.oobtriggertype = undefined;
}

playerentercallback( _id_44E306D53285E1F8, _id_93F5DB7E81311353, triggertype )
{
    _id_49E84EC5D8AA4F0A = _id_0C6AA39A55C49DC1( triggertype );
    self._id_4A3CC04781D25C6F = _id_49E84EC5D8AA4F0A;
    self setclientomnvar( "ui_out_of_bounds_type", _id_49E84EC5D8AA4F0A );
    self setclientomnvar( "ui_out_of_bounds_countdown", self.oobendtime );
    _id_3B64EB40368C1450::_id_3633B947164BE4F3( "enterOOB", 0 );
}

playerexitcallback( _id_FCEF8D217A441961, _id_704294F906FAD67E, _id_93F5DB7E81311353 )
{
    self setclientomnvar( "ui_out_of_bounds_type", 0 );
    self setclientomnvar( "ui_out_of_bounds_countdown", 0 );
    _id_3B64EB40368C1450::_id_588F2307A3040610( "enterOOB" );
}

playeroutoftimecallback( _id_2F57CFAE824CA728, _id_93F5DB7E81311353 )
{
    trigger = getlastoobtrigger( self );
    triggertype = gettriggertype( self, trigger );

    if ( triggertype == "minefield" )
        thread playeroutoftimeminefield( _id_2F57CFAE824CA728, _id_93F5DB7E81311353 );
    else
        scripts\mp\utility\damage::_suicide( undefined, 1 );
}

playerclearcallback( _id_93F5DB7E81311353 )
{
    self setclientomnvar( "ui_out_of_bounds_type", 0 );
    self setclientomnvar( "ui_out_of_bounds_countdown", 0 );
}

playeroutoftimeminefield( _id_2F57CFAE824CA728, _id_93F5DB7E81311353 )
{
    _id_64AC6C50CE3A7C25 = self.origin;
    _id_CAB9F210984BED37 = scripts\engine\trace::ray_trace( self.origin, self.origin - ( 0, 0, 1000 ), self );

    if ( isdefined( _id_CAB9F210984BED37["hittype"] != "hittype_none" ) && isdefined( _id_CAB9F210984BED37["position"] ) )
        _id_64AC6C50CE3A7C25 = _id_CAB9F210984BED37["position"];

    mine = spawn( "script_model", _id_64AC6C50CE3A7C25 );
    mine setmodel( "ks_minefield_mp" );
    mine setentityowner( self );
    mine setotherent( self );
    mine setscriptablepartstate( "warning_click", "on", 0 );
    _id_3F67BB4D035FB5A1 = playeroutoftimeminefieldinternal( mine, _id_2F57CFAE824CA728, _id_93F5DB7E81311353 );

    if ( istrue( _id_3F67BB4D035FB5A1 ) )
        wait 2;

    mine delete();
}

playeroutoftimeminefieldinternal( mine, _id_2F57CFAE824CA728, _id_93F5DB7E81311353 )
{
    self endon( "death_or_disconnect" );

    if ( isdefined( _id_2F57CFAE824CA728 ) )
        self endon( _id_2F57CFAE824CA728 );

    if ( isdefined( _id_93F5DB7E81311353 ) )
        self endon( _id_93F5DB7E81311353 );

    scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 0.3 );
    mine setscriptablepartstate( "explosion", "on", 0 );
    wait 0.05;
    self dodamage( 2000, self.origin, self, mine, "MOD_EXPLOSIVE", "minefield_mp" );
    return 1;
}

killstreakentercallback( _id_44E306D53285E1F8, _id_93F5DB7E81311353, triggertype )
{
    _id_49E84EC5D8AA4F0A = _id_0C6AA39A55C49DC1( triggertype );
    self._id_4A3CC04781D25C6F = _id_49E84EC5D8AA4F0A;

    if ( isdefined( self.owner ) )
    {
        self.owner setclientomnvar( "ui_out_of_bounds_type", _id_49E84EC5D8AA4F0A );
        self.owner setclientomnvar( "ui_out_of_bounds_countdown", self.oobendtime );
    }
}

killstreakexitcallback( _id_FCEF8D217A441961, _id_704294F906FAD67E, _id_93F5DB7E81311353 )
{
    if ( isdefined( self.owner ) )
    {
        self.owner setclientomnvar( "ui_out_of_bounds_type", 0 );
        self.owner setclientomnvar( "ui_out_of_bounds_countdown", 0 );
    }
}

killstreakoutoftimecallback( _id_2F57CFAE824CA728, _id_93F5DB7E81311353 )
{
    scripts\mp\utility\killstreak::dodamagetokillstreak( 10000, self.owner, self, self.team, self.origin, "MOD_EXPLOSIVE", "nuke_mp" );
}

killstreakclearcallback()
{
    if ( isdefined( self.owner ) )
    {
        self.owner setclientomnvar( "ui_out_of_bounds_type", 0 );
        self.owner setclientomnvar( "ui_out_of_bounds_countdown", 0 );
    }
}

killstreakregisteroobcallbacks()
{
    registeroobentercallback( "killstreak", ::killstreakentercallback );
    registeroobexitcallback( "killstreak", ::killstreakexitcallback );
    registerooboutoftimecallback( "killstreak", ::killstreakoutoftimecallback );
    registeroobclearcallback( "killstreak", ::killstreakclearcallback );
}

watchoobtriggers()
{
    if ( scripts\mp\utility\game::lpcfeaturegated() && !scripts\mp\utility\game_utility_mp::_id_9A2FD0D19774EDDE() && !scripts\cp_mp\utility\game_utility::_id_0BEFF479639E6508() )
        return;

    if ( isdefined( level.outofboundstriggers ) )
    {
        foreach ( trigger in level.outofboundstriggers )
            thread watchoobtrigger( trigger );

        if ( isdefined( level.outofboundstriggerpatches ) )
        {
            foreach ( trigger in level.outofboundstriggerpatches )
                thread watchoobsuppressiontrigger( trigger );
        }
    }
}

watchoobtrigger( trigger )
{
    trigger.entstouching = [];

    if ( !scripts\cp_mp\utility\game_utility::_id_0BEFF479639E6508() )
        scripts\mp\flags::gameflagwait( "prematch_done" );

    thread watchoobtriggerexit( trigger );
    thread watchoobtriggerenter( trigger );
}

watchoobtriggerenter( trigger )
{
    level endon( "game_ended" );

    for (;;)
    {
        trigger waittill( "trigger", ent );

        if ( isplayer( ent ) && isdefined( ent.c130 ) )
            continue;

        if ( !interactswithgivenoobtrigger( trigger, ent ) )
            continue;

        if ( !interactswithoobtriggers( ent ) )
            continue;

        onenteroobtrigger( trigger, ent );
    }
}

watchoobtriggerexit( trigger )
{
    level endon( "game_ended" );

    for (;;)
    {
        _id_5C397C9CF7A06802 = trigger.entstouching;

        foreach ( id, ent in _id_5C397C9CF7A06802 )
        {
            if ( !isdefined( ent ) )
                trigger.entstouching[id] = undefined;

            if ( isdefined( ent ) && !trigger istouching( ent ) && !isdefined( ent.vehicle ) )
                onexitoobtrigger( trigger, ent );
        }

        waitframe();
    }
}

onenteroobtrigger( trigger, ent )
{
    entnum = ent getentitynumber();

    if ( isdefined( trigger.entstouching[entnum] ) )
        return;

    trigger.entstouching[entnum] = ent;

    if ( !isdefined( ent.oobtriggers ) )
        ent.oobtriggers = [];

    _id_5C397C9CF7A06802 = [ trigger ];

    foreach ( _id_70E9548D1E3EA919 in ent.oobtriggers )
        _id_5C397C9CF7A06802[_id_5C397C9CF7A06802.size] = _id_70E9548D1E3EA919;

    ent.oobtriggers = _id_5C397C9CF7A06802;
    trigger enableoob( ent );
}

onexitoobtrigger( trigger, ent )
{
    entnum = ent getentitynumber();
    trigger.entstouching[entnum] = undefined;
    trigger disableoob( ent );
    ent.oobtriggers = scripts\engine\utility::array_remove( ent.oobtriggers, trigger );

    if ( ent.oobtriggers.size == 0 )
        ent.oobtriggers = undefined;
}

watchoobsuppressiontrigger( trigger )
{
    trigger.entstouching = [];
    scripts\mp\flags::gameflagwait( "prematch_done" );
    thread watchoobsuppressiontriggerexit( trigger );
    thread watchoobsupressiontriggerenter( trigger );
}

watchoobsupressiontriggerenter( trigger )
{
    level endon( "game_ended" );

    for (;;)
    {
        trigger waittill( "trigger", ent );

        if ( !interactswithoobtriggers( ent ) )
            continue;

        onenteroobsuppressiontrigger( trigger, ent );
    }
}

watchoobsuppressiontriggerexit( trigger )
{
    level endon( "game_ended" );

    for (;;)
    {
        _id_5C397C9CF7A06802 = trigger.entstouching;

        if ( isdefined( _id_5C397C9CF7A06802 ) )
        {
            foreach ( id, ent in _id_5C397C9CF7A06802 )
            {
                if ( !isdefined( ent ) )
                    trigger.entstouching[id] = undefined;

                if ( isdefined( ent ) && !trigger istouching( ent ) )
                    onexitoobsupressiontrigger( trigger, ent );
            }
        }

        waitframe();
    }
}

onenteroobsuppressiontrigger( trigger, ent )
{
    entnum = ent getentitynumber();

    if ( isdefined( trigger.entstouching[entnum] ) )
        return;

    trigger.entstouching[entnum] = ent;

    if ( !isdefined( ent.oobsupressiontriggers ) )
        ent.oobsupressiontriggers = [];

    _id_5C397C9CF7A06802 = [ trigger ];

    foreach ( _id_90410C262793087E in ent.oobsupressiontriggers )
        _id_5C397C9CF7A06802[_id_5C397C9CF7A06802.size] = _id_90410C262793087E;

    ent.oobsupressiontriggers = _id_5C397C9CF7A06802;
    enableoobimmunity( ent );
}

onexitoobsupressiontrigger( trigger, ent )
{
    entnum = ent getentitynumber();
    trigger.entstouching[entnum] = undefined;
    ent.oobsupressiontriggers[trigger getentitynumber()] = undefined;

    if ( ent.oobsupressiontriggers.size == 0 )
        ent.oobsupressiontriggers = undefined;

    disableoobimmunity( ent );
}

interactswithgivenoobtrigger( trigger, ent )
{
    isvehicle = ent scripts\cp_mp\vehicles\vehicle::isvehicle();

    if ( isdefined( trigger.script_team ) )
    {
        if ( scripts\mp\utility\game::isgroundwarcoremode() || istrue( level._id_CBB6EC6B15529252 ) )
            return 0;

        if ( isvehicle )
        {
            if ( isdefined( ent.team ) && ent.team != "neutral" && ent.team != trigger.script_team )
                return 0;

            if ( isdefined( ent.owner ) && ent.owner.team != trigger.script_team )
                return 0;

            if ( isdefined( ent.occupants ) )
            {
                foreach ( _id_F85572CD5F6117C6 in ent.occupants )
                {
                    if ( isdefined( _id_F85572CD5F6117C6.team ) && _id_F85572CD5F6117C6.team != trigger.script_team )
                        return 0;
                }
            }
        }
        else if ( !isdefined( ent.team ) || ent.team != trigger.script_team )
            return 0;
    }

    if ( isvehicle )
    {
        ref = ent scripts\cp_mp\vehicles\vehicle::_id_D93EC4635290FEBD();

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( ref, "interactsWithOOBTrigger" ) && ![[ scripts\cp_mp\utility\script_utility::getsharedfunc( ref, "interactsWithOOBTrigger" ) ]]( trigger, ent ) )
            return 0;
    }

    return 1;
}

interactswithoobtriggers( ent )
{
    if ( isdefined( ent ) )
    {
        if ( isplayer( ent ) )
        {
            if ( ent scripts\cp_mp\utility\player_utility::_isalive() )
                return 1;
        }

        if ( isdefined( ent.oobref ) )
        {
            if ( ent scripts\cp_mp\vehicles\vehicle::isvehicle() )
            {
                if ( !istrue( ent.isdestroyed ) )
                    return 1;
            }

            if ( isdefined( ent.streakinfo ) && iskillstreakaffectedbyobb( ent.streakinfo.streakname ) )
                return 1;
        }
    }

    return 0;
}

getoobdata()
{
    struct = level.oobdata;

    if ( !isdefined( struct ) )
    {
        struct = spawnstruct();
        struct.entercallbacks = [];
        struct.exitcallbacks = [];
        struct.outoftimecallbacks = [];
        struct.clearcallbacks = [];
        level.oobdata = struct;
    }

    return struct;
}

iskillstreakaffectedbyobb( streakname )
{
    _id_60F0EEDDE53BB451 = 0;

    switch ( streakname )
    {
        case "pac_sentry":
        case "radar_drone_recon":
        case "assault_drone":
            _id_60F0EEDDE53BB451 = 1;
            break;
    }

    return _id_60F0EEDDE53BB451;
}

gettriggertype( ent, trigger )
{
    triggertype = "default";

    if ( trigger scripts\cp_mp\vehicles\vehicle::isvehicle() )
        return "vehicle";

    if ( scripts\cp_mp\utility\game_utility::_id_0BEFF479639E6508() )
        return "br";

    if ( isdefined( trigger ) && isdefined( trigger.script_team ) )
        return "restricted";

    if ( isdefined( ent ) && ent scripts\cp_mp\vehicles\vehicle::isvehicle() )
        return "default";

    if ( isdefined( ent ) && isdefined( ent.streakinfo ) )
        return "default";

    if ( isdefined( trigger ) && isdefined( trigger.script_noteworthy ) && trigger.script_noteworthy == "MineField" )
        triggertype = "minefield";

    return triggertype;
}

_id_0C6AA39A55C49DC1( triggertype )
{
    _id_4A3CC04781D25C6F = 1;
    _id_7C4A4F886922A011 = 0;

    if ( scripts\cp_mp\utility\game_utility::islargemap() )
    {
        gametype = scripts\mp\utility\game::getgametype();

        switch ( gametype )
        {
            case "gwtdm":
            case "gwbomb":
            case "risk":
            case "arm":
                _id_7C4A4F886922A011 = 1;
                break;
        }

        if ( scripts\mp\utility\game::isgroundwarcoremode() )
            _id_7C4A4F886922A011 = 1;
    }

    if ( istrue( _id_7C4A4F886922A011 ) )
    {
        if ( isdefined( triggertype ) && triggertype == "restricted" )
            _id_4A3CC04781D25C6F = 2;
    }

    return _id_4A3CC04781D25C6F;
}

getcooldowntime( triggertype )
{
    switch ( triggertype )
    {
        case "restricted":
        case "minefield":
        case "br":
        case "vehicle":
        case "default":
            return scripts\mp\utility\game::getmaxoutofboundscooldown();
    }

    return undefined;
}

getoutofboundstime( triggertype )
{
    switch ( triggertype )
    {
        case "minefield":
            return scripts\mp\utility\game::getmaxoutofboundsminefieldtime();
        case "restricted":
            return scripts\mp\utility\game::getmaxoutofboundsrestrictedtime();
        case "br":
            return scripts\mp\utility\game::getmaxoutofboundsbrtime();
        case "default":
            return scripts\mp\utility\game::getmaxoutofboundstime();
        case "vehicle":
            return scripts\mp\utility\game::_id_A01D18A56C6CC1AA();
    }

    return undefined;
}

getlastoobtrigger( ent )
{
    if ( isdefined( ent.oobtriggers ) )
        return ent.oobtriggers[0];

    return undefined;
}

previouslytouchedtriggertype( _id_7EDFACE381884CA9, _id_D9D739B40FEDD346 )
{
    _id_1B99BB6CC4AEC0FE = 0;

    if ( isdefined( _id_7EDFACE381884CA9.oobtriggertype ) )
    {
        _id_F4A7B9FD1E2F84F0 = _id_7EDFACE381884CA9.oobtriggertype;

        if ( _id_D9D739B40FEDD346 == _id_F4A7B9FD1E2F84F0 )
            _id_1B99BB6CC4AEC0FE = 1;
        else if ( ( _id_D9D739B40FEDD346 == "default" || _id_D9D739B40FEDD346 == "minefield" ) && ( _id_F4A7B9FD1E2F84F0 == "default" || _id_F4A7B9FD1E2F84F0 == "minefield" ) )
            _id_1B99BB6CC4AEC0FE = 1;
    }

    return _id_1B99BB6CC4AEC0FE;
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

adddamagemodifier( id, modifier, _id_B3D6E2C2DB2FB4A9, _id_9E3A69E8E82478BD )
{
    if ( !isdefined( _id_B3D6E2C2DB2FB4A9 ) )
        _id_B3D6E2C2DB2FB4A9 = 1;

    if ( _id_B3D6E2C2DB2FB4A9 )
    {
        if ( !isdefined( self.additivedamagemodifiers ) )
            self.additivedamagemodifiers = [];

        self.additivedamagemodifiers[id] = modifier;

        if ( isdefined( _id_9E3A69E8E82478BD ) )
        {
            if ( !isdefined( self.additivedamagemodifierignorefuncs ) )
                self.additivedamagemodifierignorefuncs = [];

            self.additivedamagemodifierignorefuncs[id] = _id_9E3A69E8E82478BD;
        }
    }
    else
    {
        if ( !isdefined( self.multiplicativedamagemodifiers ) )
            self.multiplicativedamagemodifiers = [];

        self.multiplicativedamagemodifiers[id] = modifier;

        if ( isdefined( _id_9E3A69E8E82478BD ) )
        {
            if ( !isdefined( self.multiplicativedamagemodifierignorefuncs ) )
                self.multiplicativedamagemodifierignorefuncs = [];

            self.multiplicativedamagemodifierignorefuncs[id] = _id_9E3A69E8E82478BD;
        }
    }
}

removedamagemodifier( id, _id_B3D6E2C2DB2FB4A9 )
{
    if ( !isdefined( _id_B3D6E2C2DB2FB4A9 ) )
        _id_B3D6E2C2DB2FB4A9 = 1;

    if ( _id_B3D6E2C2DB2FB4A9 )
    {
        if ( !isdefined( self.additivedamagemodifiers ) )
            return;

        self.additivedamagemodifiers[id] = undefined;

        if ( !isdefined( self.additivedamagemodifierignorefuncs ) )
            return;

        self.additivedamagemodifierignorefuncs[id] = undefined;
    }
    else
    {
        if ( !isdefined( self.multiplicativedamagemodifiers ) )
            return;

        self.multiplicativedamagemodifiers[id] = undefined;

        if ( !isdefined( self.multiplicativedamagemodifierignorefuncs ) )
            return;

        self.multiplicativedamagemodifierignorefuncs[id] = undefined;
    }
}

getdamagemodifiertotal( inflictor, attacker, victim, damage, meansofdeath, objweapon, hitloc )
{
    _id_C8E219B403B2E789 = 1.0;

    if ( isdefined( self.additivedamagemodifiers ) )
    {
        foreach ( index, modifier in self.additivedamagemodifiers )
        {
            _id_8411C7D6AC406B06 = 0;

            if ( isdefined( self.additivedamagemodifierignorefuncs ) && isdefined( self.additivedamagemodifierignorefuncs[index] ) )
                _id_8411C7D6AC406B06 = [[ self.additivedamagemodifierignorefuncs[index] ]]( inflictor, attacker, victim, damage, meansofdeath, objweapon, hitloc );

            if ( !_id_8411C7D6AC406B06 )
                _id_C8E219B403B2E789 = _id_C8E219B403B2E789 + ( modifier - 1.0 );
        }
    }

    _id_1CBF01D0DF82CDE7 = 1.0;

    if ( isdefined( self.multiplicativedamagemodifiers ) )
    {
        foreach ( index, modifier in self.multiplicativedamagemodifiers )
        {
            _id_8411C7D6AC406B06 = 0;

            if ( isdefined( self.multiplicativedamagemodifierignorefuncs ) && isdefined( self.multiplicativedamagemodifierignorefuncs[index] ) )
                _id_8411C7D6AC406B06 = [[ self.multiplicativedamagemodifierignorefuncs[index] ]]( inflictor, attacker, victim, damage, meansofdeath, objweapon, hitloc );

            if ( !_id_8411C7D6AC406B06 )
                _id_1CBF01D0DF82CDE7 = _id_1CBF01D0DF82CDE7 * modifier;
        }
    }

    return _id_C8E219B403B2E789 * _id_1CBF01D0DF82CDE7;
}

cleardamagemodifiers()
{
    self.additivedamagemodifiers = [];
    self.multiplicativedamagemodifiers = [];
    self.additivedamagemodifierignorefuncs = [];
    self.multiplicativedamagemodifierignorefuncs = [];
}

packdamagedata( attacker, victim, damage, objweapon, meansofdeath, inflictor, point, direction_vec, modelname, _id_799F234362ADB813, partname, tagname, idflags, eventid )
{
    struct = spawnstruct();
    struct.attacker = attacker;
    struct.victim = victim;
    struct.damage = damage;
    struct.objweapon = objweapon;
    struct.meansofdeath = meansofdeath;
    struct.inflictor = inflictor;
    struct.point = point;
    struct.direction_vec = direction_vec;
    struct.modelname = modelname;
    struct._id_799F234362ADB813 = _id_799F234362ADB813;
    struct.partname = partname;
    struct.tagname = tagname;
    struct.idflags = idflags;
    struct.damageflags = idflags;
    struct.eventid = eventid;

    if ( isdefined( struct.attacker ) )
        struct.attacker.assistedsuicide = 0;

    return struct;
}

isstuckdamage( data, _id_9B97F4BA6BDC58BE )
{
    if ( istrue( self.forcestuckdamage ) )
        return 1;

    if ( isdefined( self.stuckbygrenade ) )
    {
        if ( isdefined( data.inflictor ) && data.inflictor == self.stuckbygrenade )
        {
            if ( istrue( _id_9B97F4BA6BDC58BE ) )
                return 1;
            else if ( isexplosivedamagemod( data.meansofdeath ) || data.meansofdeath == "MOD_FIRE" )
                return 1;
        }
    }

    return 0;
}

isstuckdamagekill( data )
{
    if ( istrue( self.nostuckdamagekill ) )
        return 0;

    if ( !isstuckdamage( data, 0 ) )
        return 0;

    switch ( data.objweapon.basename )
    {
        case "thermite_ap_mp":
        case "bunkerbuster_round_mp":
        case "bunkerbuster_mp":
        case "bunkerbuster_burrowed_mp":
        case "thermite_av_mp":
        case "thermite_mp":
        case "molotov_mp":
            return 0;
        default:
            break;
    }

    return 1;
}

forcestuckdamage()
{
    self.forcestuckdamage = 1;
}

forcestuckdamageclear()
{
    self.forcestuckdamage = undefined;
}

isheadshot( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return shitloc == "head" || shitloc == "helmet";
}

validshotcheck( smeansofdeath, attacker )
{
    if ( isdefined( attacker ) )
    {
        if ( isdefined( attacker.owner ) )
        {
            switch ( attacker.code_classname )
            {
                case "misc_turret":
                case "script_model":
                case "script_vehicle":
                    return 0;
            }
        }
    }

    switch ( smeansofdeath )
    {
        case "MOD_CRUSH":
        case "MOD_IMPACT":
        case "MOD_MELEE":
        case "MOD_EXPLOSIVE":
        case "MOD_FIRE":
            return 0;
    }

    return 1;
}

istorsoshot( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return istorsouppershot( shitloc, smeansofdeath, attacker ) || _id_77ED09D75C0C7165( shitloc, smeansofdeath, attacker );
}

istorsouppershot( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return shitloc == "neck" || shitloc == "torso_upper";
}

_id_77ED09D75C0C7165( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return shitloc == "torso_lower";
}

_id_2DEB4955AA2D2BC1( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return _id_6F291533530EDC79( shitloc, smeansofdeath, attacker ) || _id_D5C75FD1228282EE( shitloc, smeansofdeath, attacker );
}

_id_6F291533530EDC79( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return _id_24278EB0EC1E2953( shitloc, smeansofdeath, attacker ) || _id_BF1EFC7185168448( shitloc, smeansofdeath, attacker );
}

_id_D5C75FD1228282EE( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return _id_82850161196DF912( shitloc, smeansofdeath, attacker ) || _id_D7395809E0049A49( shitloc, smeansofdeath, attacker );
}

_id_24278EB0EC1E2953( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return shitloc == "right_arm_upper";
}

_id_82850161196DF912( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return shitloc == "left_arm_upper";
}

_id_BF1EFC7185168448( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return shitloc == "right_arm_lower" || shitloc == "right_hand";
}

_id_D7395809E0049A49( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return shitloc == "left_arm_lower" || shitloc == "left_hand";
}

_id_45F34EAEC78AD083( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return _id_C0BD16DEEB47765B( shitloc, smeansofdeath, attacker ) || _id_F15A47528FFFCE28( shitloc, smeansofdeath, attacker );
}

_id_C0BD16DEEB47765B( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return _id_4536856E83718DBD( shitloc, smeansofdeath, attacker ) || _id_2EEF344E0F951A1A( shitloc, smeansofdeath, attacker );
}

_id_F15A47528FFFCE28( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return _id_275E2A90A59B872C( shitloc, smeansofdeath, attacker ) || _id_DA1A82D3AE010F8B( shitloc, smeansofdeath, attacker );
}

_id_4536856E83718DBD( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return shitloc == "right_leg_upper";
}

_id_275E2A90A59B872C( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return shitloc == "left_leg_upper";
}

_id_2EEF344E0F951A1A( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return shitloc == "right_leg_lower" || shitloc == "right_foot";
}

_id_DA1A82D3AE010F8B( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    return shitloc == "left_leg_lower" || shitloc == "left_foot";
}

isupperbodyshot( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    switch ( shitloc )
    {
        case "right_hand":
        case "left_arm_upper":
        case "left_arm_lower":
        case "torso_upper":
        case "neck":
        case "right_arm_lower":
        case "right_arm_upper":
        case "left_hand":
        case "torso_lower":
        case "right_leg_upper":
        case "left_leg_upper":
            return 1;
    }

    return 0;
}

islowerbodyshot( shitloc, smeansofdeath, attacker )
{
    if ( !validshotcheck( smeansofdeath, attacker ) )
        return 0;

    switch ( shitloc )
    {
        case "left_leg_lower":
        case "right_leg_lower":
        case "left_foot":
        case "right_leg_upper":
        case "left_leg_upper":
        case "right_foot":
            return 1;
    }

    return 0;
}

_id_0CB9BA92488B23C5( objweapon )
{
    return isdefined( objweapon ) && isdefined( objweapon.basename ) && objweapon.basename == "danger_circle_br";
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_magicbullet( objweapon, start, end, owner, _id_2DD9A5AE31CA66C1 )
{
    missile = magicbullet( objweapon, start, end, owner, _id_2DD9A5AE31CA66C1 );

    if ( isdefined( missile ) && isdefined( owner ) )
        missile setotherent( owner );

    return missile;
}

islockonlauncher( objweapon )
{
    _id_149A0FE48B2F9247 = undefined;
    basename = undefined;

    if ( isstring( objweapon ) )
        basename = objweapon;
    else
        basename = objweapon.basename;

    switch ( basename )
    {
        case "iw8_la_gromeoks_mp":
        case "iw8_la_juliet_mp":
        case "iw8_la_gromeo_mp":
        case "iw9_la_gromeo_mp":
        case "iw9_la_juliet_mp":
            _id_149A0FE48B2F9247 = 1;
            break;
        default:
            _id_149A0FE48B2F9247 = 0;
    }

    return _id_149A0FE48B2F9247;
}

addlockedon( entity, attacker )
{
    if ( !isdefined( entity.islockedon ) )
    {
        entity.islockedon = 0;
        entity.attackerslockedon = [];
    }

    if ( entity.islockedon == 0 )
    {
        if ( isdefined( entity.lockedoncallback ) )
            entity thread [[ entity.lockedoncallback ]]();
    }

    if ( isdefined( attacker ) )
    {
        attacker.entlockedonto = entity;
        entity.attackerslockedon[attacker getentitynumber()] = attacker;
    }

    entity.islockedon++;
}

removelockedon( entity, attacker )
{
    if ( !isdefined( entity.islockedon ) )
        return;

    if ( entity.islockedon == 1 )
    {
        if ( isdefined( entity.lockedonremovedcallback ) )
            entity thread [[ entity.lockedonremovedcallback ]]();
    }

    if ( isdefined( attacker ) )
    {
        if ( isdefined( attacker.entlockedonto ) && attacker.entlockedonto == entity )
            attacker.entlockedonto = undefined;

        entity.attackerslockedon[attacker getentitynumber()] = undefined;
    }

    entity.islockedon--;
}

setlockedoncallback( entity, lockedoncallback )
{
    entity.lockedoncallback = lockedoncallback;
}

setlockedonremovedcallback( entity, lockedonremovedcallback )
{
    entity.lockedonremovedcallback = lockedonremovedcallback;
}

clearlockedon( entity )
{
    entity notify( "clearLockedOn" );

    if ( islockedonto( entity ) )
    {
        if ( isdefined( entity.lockedonremovedcallback ) )
            entity thread [[ entity.lockedonremovedcallback ]]();

        foreach ( _id_AC0E594AC96AA3A8, attacker in entity.attackerslockedon )
        {
            if ( isdefined( attacker ) )
            {
                if ( isdefined( attacker.entlockedonto ) && attacker.entlockedonto == entity )
                    attacker.entlockedonto = undefined;
            }
        }
    }

    entity.islockedon = undefined;
    entity.attackerslockedon = undefined;
    entity.lockedoncallback = undefined;
    entity.lockedonremovedcallback = undefined;

    if ( hasincoming( entity ) )
    {
        if ( isdefined( entity.incomingremovedcallback ) )
            entity thread [[ entity.incomingremovedcallback ]]();
    }

    entity.hasincoming = undefined;
    entity.incomingcallback = undefined;
    entity.incomingremovedcallback = undefined;
}

clearlockedonondisconnect( player )
{
    if ( isdefined( self.entlockedonto ) )
        removelockedon( self.entlockedonto, self );

    self.entlockedonto = undefined;
}

islockedonto( entity )
{
    return isdefined( entity.islockedon ) && entity.islockedon > 0;
}

_id_F18DBD353F3E1570( entity )
{
    return isdefined( entity._id_F2F04BCC448FAB3A ) && entity._id_F2F04BCC448FAB3A > 0;
}

_id_53FD22613EA65204( entity, _id_5EC2DA3D1D27E716 )
{
    entity._id_5EC2DA3D1D27E716 = _id_5EC2DA3D1D27E716;
}

_id_B55A664E824540D2( entity, _id_0218D5FB97D94F2C )
{
    entity._id_0218D5FB97D94F2C = _id_0218D5FB97D94F2C;
}

_id_69D45A21A6D4E9F8( entity )
{
    if ( !isdefined( entity._id_F2F04BCC448FAB3A ) )
        entity._id_F2F04BCC448FAB3A = 0;

    if ( entity._id_F2F04BCC448FAB3A == 0 )
    {
        if ( isdefined( entity._id_5EC2DA3D1D27E716 ) )
            entity thread [[ entity._id_5EC2DA3D1D27E716 ]]();
    }

    entity._id_F2F04BCC448FAB3A++;
}

_id_28E583BFECC38A25( entity )
{
    if ( !isdefined( entity._id_F2F04BCC448FAB3A ) )
        return;

    if ( entity._id_F2F04BCC448FAB3A == 1 )
    {
        if ( isdefined( entity._id_0218D5FB97D94F2C ) )
            entity thread [[ entity._id_0218D5FB97D94F2C ]]();
    }

    entity._id_F2F04BCC448FAB3A--;
}

addincoming( entity )
{
    if ( !isdefined( entity.hasincoming ) )
        entity.hasincoming = 0;

    if ( entity.hasincoming == 0 )
    {
        if ( isdefined( entity.incomingcallback ) )
            entity thread [[ entity.incomingcallback ]]();
    }

    entity.hasincoming++;
}

removeincoming( entity )
{
    if ( !isdefined( entity.hasincoming ) )
        return;

    if ( entity.hasincoming == 1 )
    {
        if ( isdefined( entity.incomingremovedcallback ) )
            entity thread [[ entity.incomingremovedcallback ]]();
    }

    entity.hasincoming--;
}

_id_F19F8B4CF085ECBD( objweapon )
{
    self endon( "death" );
    self endon( "disconnect" );

    if ( !isweapon( objweapon ) )
    {
        if ( isstring( objweapon ) )
            objweapon = makeweapon( objweapon );
    }

    if ( !isweapon( objweapon ) )
    {
        self notify( "giveAndFireOffhandReliableFailed", objweapon );
        return 0;
    }

    self giveandfireoffhand( objweapon );

    if ( !self hasweapon( objweapon ) )
    {
        self notify( "giveAndFireOffhandReliableFailed", objweapon );
        return 0;
    }

    result = spawnstruct();
    result childthread _id_8EA8B6459D144947( self, objweapon );
    result childthread _id_158897145D2EFB26( self, objweapon );
    result waittill( "race_start" );
    waittillframeend;
    result notify( "race_end" );

    if ( istrue( result.success ) )
    {
        self notify( "giveAndFireOffhandReliableSucceeded", objweapon );
        return 1;
    }
    else if ( istrue( result.failure ) )
    {
        self notify( "giveAndFireOffhandReliableFailed", objweapon );
        return 0;
    }
}

_id_8EA8B6459D144947( player, objweapon )
{
    self endon( "race_end" );
    player waittillmatch( "offhand_fired", objweapon );
    self.success = 1;
    self notify( "race_start" );
}

_id_158897145D2EFB26( player, objweapon )
{
    self endon( "race_end" );

    while ( player hasweapon( objweapon ) )
        waitframe();

    self.failure = 1;
    self notify( "race_start" );
}

setincomingcallback( entity, incomingcallback )
{
    entity.incomingcallback = incomingcallback;
}

setincomingremovedcallback( entity, incomingremovedcallback )
{
    entity.incomingremovedcallback = incomingremovedcallback;
}

hasincoming( entity )
{
    return isdefined( entity.hasincoming ) && entity.hasincoming > 0;
}

watchtargetlockedontobyprojectile( target, projectile )
{
    target endon( "clearLockedOn" );
    addlockedon( target );
    addincoming( target );
    projectile scripts\engine\utility::waittill_any_2( "death", "clearTargetLockedOntoByProjectile" );

    if ( isdefined( target ) )
    {
        removelockedon( target );
        removeincoming( target );
    }
}

clearprojectilelockedon( projectile )
{
    projectile notify( "clearTargetLockedOntoByProjectile" );
}

dropweaponfordeathlaunch( item, _id_CF4209C200F8BBF4, damage, angles )
{
    if ( !isdefined( angles ) )
        angles = self.angles;

    if ( !isdefined( damage ) )
        damage = 0;

    _id_198B31BBA82C76D5 = scripts\engine\math::normalize_value( 0, 200, damage );

    if ( isdefined( _id_CF4209C200F8BBF4 ) && _id_CF4209C200F8BBF4 == "weapon_melee2" )
    {
        _id_4148F5F633BFCF19 = randomfloatrange( 25, 100 );
        _id_5DE19BFA9BB86F0C = randomfloatrange( 75, 175 );
        _id_B8A13F3AF0CBE01B = scripts\engine\math::factor_value( 450, 800, _id_198B31BBA82C76D5 );
        _id_EAC2B0512D0B1C55 = scripts\engine\math::factor_value( -1.16667, -0.833333, _id_198B31BBA82C76D5 );
        _id_8282854EC42283A2 = scripts\engine\math::factor_value( 0.125, 0.183333, _id_198B31BBA82C76D5 );
    }
    else if ( isdefined( _id_CF4209C200F8BBF4 ) && _id_CF4209C200F8BBF4 == "weapon_pistol" )
    {
        _id_4148F5F633BFCF19 = randomfloatrange( 100, 200 );
        _id_5DE19BFA9BB86F0C = randomfloatrange( 150, 250 );
        _id_B8A13F3AF0CBE01B = scripts\engine\math::factor_value( 950, 1300, _id_198B31BBA82C76D5 );
        _id_EAC2B0512D0B1C55 = scripts\engine\math::factor_value( -1.75, -1.25, _id_198B31BBA82C76D5 );
        _id_8282854EC42283A2 = scripts\engine\math::factor_value( 0.5625, 0.825, _id_198B31BBA82C76D5 );
    }
    else
    {
        _id_4148F5F633BFCF19 = randomfloatrange( 150, 350 );
        _id_5DE19BFA9BB86F0C = randomfloatrange( 150, 250 );
        _id_B8A13F3AF0CBE01B = scripts\engine\math::factor_value( 950, 1300, _id_198B31BBA82C76D5 );
        _id_EAC2B0512D0B1C55 = scripts\engine\math::factor_value( -7.0, -5.0, _id_198B31BBA82C76D5 );
        _id_8282854EC42283A2 = scripts\engine\math::factor_value( 0.75, 1.1, _id_198B31BBA82C76D5 );
    }

    if ( scripts\engine\utility::cointoss() )
        _id_5DE19BFA9BB86F0C = _id_5DE19BFA9BB86F0C * -1;

    if ( !isdefined( item ) )
        return;

    _id_2E3A4C6FAF317522 = item physics_getentitycenterofmass();

    if ( isdefined( _id_2E3A4C6FAF317522 ) )
        _id_2E3A4C6FAF317522 = _id_2E3A4C6FAF317522["unscaled"];
    else
        _id_2E3A4C6FAF317522 = item.origin;

    _id_7331D469160F6A41 = ( 0, 0, 0 );
    _id_7331D469160F6A41 = _id_7331D469160F6A41 + anglestoforward( angles ) * _id_4148F5F633BFCF19;
    _id_7331D469160F6A41 = _id_7331D469160F6A41 + anglestoright( angles ) * _id_5DE19BFA9BB86F0C;
    _id_7331D469160F6A41 = _id_7331D469160F6A41 + anglestoup( angles ) * _id_B8A13F3AF0CBE01B;
    _id_9CBCD63169EBE6B9 = item gettagangles( "tag_flash", 1 );

    if ( !isdefined( _id_9CBCD63169EBE6B9 ) )
        _id_9CBCD63169EBE6B9 = item.angles;

    if ( scripts\engine\utility::cointoss() )
        _id_8282854EC42283A2 = _id_8282854EC42283A2 * -1;

    _id_51C1B45046E1647C = _id_2E3A4C6FAF317522;
    _id_51C1B45046E1647C = _id_51C1B45046E1647C + anglestoforward( _id_9CBCD63169EBE6B9 ) * _id_EAC2B0512D0B1C55;
    _id_51C1B45046E1647C = _id_51C1B45046E1647C + anglestoright( _id_9CBCD63169EBE6B9 ) * _id_8282854EC42283A2;
    logprint( "PhysicsLaunchServerItem" );
    logprint( "item.classname = " + item.classname );
    logprint( "launchOrigin   = " + _id_51C1B45046E1647C );
    logprint( "launchVelocity = " + _id_7331D469160F6A41 );
    item physicslaunchserveritem( _id_51C1B45046E1647C, _id_7331D469160F6A41 );
}

isbulletweapon( weapon )
{
    if ( !isdefined( weapon ) )
        return 0;

    if ( isweapon( weapon ) && isnullweapon( weapon ) )
        return 0;

    if ( isstring( weapon ) && weapon == "none" )
        return 0;

    if ( isriotshield( weapon ) || isknifeonly( weapon ) )
        return 0;

    if ( isdefined( weapon.inventorytype ) && weapon.inventorytype == "model_only" )
        return 0;

    switch ( weaponclass( weapon ) )
    {
        case "spread":
        case "sniper":
        case "rifle":
        case "pistol":
        case "mg":
        case "smg":
            return 1;
        default:
            return 0;
    }
}

_id_38642DB3C423BCDC( weapon )
{
    _id_1BAE199AE2509F57 = [ "riotshield", "iw9_la_juliet_mp", "iw9_la_gromeo_mp" ];

    if ( isweapon( weapon ) && isnullweapon( weapon ) )
        return 0;

    if ( isstring( weapon ) && weapon == "none" )
        return 0;

    _id_3F481EF57656312C = weapon.basename;

    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_1BAE199AE2509F57.size; _id_AC0E594AC96AA3A8++ )
    {
        if ( _id_1BAE199AE2509F57[_id_AC0E594AC96AA3A8] == _id_3F481EF57656312C )
            return 1;
    }

    return 0;
}

isriotshield( weapon )
{
    if ( isweapon( weapon ) && isnullweapon( weapon ) )
        return 0;

    if ( isstring( weapon ) && weapon == "none" )
        return 0;

    return weapontype( weapon ) == "riotshield";
}

isknifeonly( weapon )
{
    _id_C27E2A04BAB78C1F = getweaponbasename( weapon );
    return issubstr( _id_C27E2A04BAB78C1F, "knife" );
}

saveweaponstates()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "saveToggleScopeStates" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "saveToggleScopeStates" ) ]]();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "saveAltStates" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "saveAltStates" ) ]]();
}

restoreweaponstates( lastweaponobj )
{
    if ( self isalternatemode( lastweaponobj ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "updateSavedAltState" ) )
            lastweaponobj = self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "updateSavedAltState" ) ]]( lastweaponobj );
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "weapons", "updateToggleScopeState" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "weapons", "updateToggleScopeState" ) ]]( lastweaponobj );

    return lastweaponobj;
}

_id_C9E5C511B923A42F( idamage, attacker, victim, smeansofdeath, shitloc, inflictor, vpoint, _id_1DA1A66B5C6A06A7, _id_986B2E0350629522, _id_25359C8E0B5022A5 )
{
    if ( isdefined( level._id_B39EDA08D7912835 ) )
    {
        _id_78B43647BC863F62 = "";

        if ( isexplosivedamagemod( smeansofdeath ) && isdefined( victim.origin ) )
        {
            _id_DD2FC1BD72AF4B7D = vpoint;

            if ( isdefined( inflictor ) && isdefined( inflictor.origin ) )
                _id_DD2FC1BD72AF4B7D = inflictor.origin;

            _id_78B43647BC863F62 = " EXPL_DIST: " + int( distance( _id_DD2FC1BD72AF4B7D, victim.origin ) );
        }
        else if ( isdefined( vpoint ) )
            _id_78B43647BC863F62 = " DIST:" + int( distance( attacker.origin, vpoint ) );

        _id_FB25FF31E4E88929 = "";

        if ( isdefined( _id_1DA1A66B5C6A06A7 ) && _id_1DA1A66B5C6A06A7 > 0 )
            _id_FB25FF31E4E88929 = " ArmorDmg: " + _id_1DA1A66B5C6A06A7;
        else if ( isdefined( _id_986B2E0350629522 ) && _id_986B2E0350629522 > 0 )
            _id_FB25FF31E4E88929 = " ArmorDmg: " + _id_986B2E0350629522;

        _id_9EAEA3D379E435AD = "";

        if ( isdefined( _id_25359C8E0B5022A5 ) && _id_25359C8E0B5022A5 > 0 )
            _id_9EAEA3D379E435AD = " HelmetDmg: " + _id_25359C8E0B5022A5;

        _id_383D064ABE36A06A = scripts\engine\utility::ter_op( isai( victim ), "AI-", "Plyr-" );
        iprintln( _id_383D064ABE36A06A + "DMG:" + idamage + " LOC:" + shitloc + " HEALTH: " + victim.health + "/" + victim.maxhealth + _id_78B43647BC863F62 + _id_FB25FF31E4E88929 + _id_9EAEA3D379E435AD );
    }
}

_id_EEAA22F0CD1FF845( _id_C094DB262CE4DFA0 )
{
    attachments = _func_6527364C1ECCA6C6( _id_C094DB262CE4DFA0 );
    weaponobj = makeweapon( _id_C094DB262CE4DFA0, attachments );
    return weaponobj;
}

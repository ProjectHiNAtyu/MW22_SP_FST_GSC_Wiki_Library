// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

runnvg()
{
    _id_3B64EB40368C1450::nuke( "NVG" );

    if ( !scripts\mp\flags::gameflag( "prematch_done" ) && isdefined( self.infil ) )
    {
        _id_3B64EB40368C1450::set( "runNVG", "nvg", 0 );
        thread allownvgsatmatchstart();
    }
    else
        _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "runNVG" );

    if ( !isdefined( self.pers["useNVG"] ) )
        self.pers["useNVG"] = 0;

    if ( !isdefined( self.pers["killstreak_forcedNVGOff"] ) )
        self.pers["killstreak_forcedNVGOff"] = 0;

    thread nvg_monitor();
}

allownvgsatmatchstart()
{
    self notify( "allowNVGsAtMatchStart" );
    self endon( "allowNVGsAtMatchStart" );
    self endon( "disconnect" );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "runNVG" );
}

clearnvg( _id_D82B5FC6A04B17F3 )
{
    if ( isdefined( self.nvg3rdpersonmodel ) )
    {
        if ( _id_D82B5FC6A04B17F3 )
            self detach( self.nvg3rdpersonmodel, "j_head" );

        self.nvg3rdpersonmodel = undefined;
    }
}

savenvgstate()
{
    if ( self isnightvisionon() )
        self.pers["useNVG"] = 1;
    else if ( !self isnightvisionon() && !istrue( self.pers["killstreak_forcedNVGOff"] ) )
        self.pers["useNVG"] = 0;
}

nvg_monitor()
{
    self notify( "nvg_monitor" );
    self endon( "nvg_monitor" );
    self endon( "disconnect" );
    self endon( "death" );
    _id_941CDE8837521CFF = gettime();

    for (;;)
    {
        result = scripts\engine\utility::waittill_any_return_2( "night_vision_on", "night_vision_off" );

        if ( !isdefined( result ) )
            continue;

        savenvgstate();
        enabled = result == "night_vision_on";
        nvg_update3rdperson( enabled );

        if ( istrue( enabled ) )
            level notify( "player_enabled_nvgs" );

        _id_2A3902259F88E70E = gettime();
        duration = _id_2A3902259F88E70E - _id_941CDE8837521CFF;
        scripts\mp\analyticslog::logevent_nvgtoggled( gettime(), self.lifeid, self.origin, enabled, duration, "none" );
        _id_941CDE8837521CFF = _id_2A3902259F88E70E;
    }
}

nvg_get3rdpersonupmodel()
{
    _id_2626C56CE4ECC11B = undefined;

    if ( isdefined( level.nvgheadoverrides[self.operatorcustomization.head] ) )
        _id_2626C56CE4ECC11B = level.nvgheadoverrides[self.operatorcustomization.head]["up"];

    if ( !isdefined( _id_2626C56CE4ECC11B ) )
        _id_2626C56CE4ECC11B = "offhand_wm_nvgquad_mp_1_up";
    else if ( _id_2626C56CE4ECC11B == "nvg_2" )
        _id_2626C56CE4ECC11B = "offhand_wm_nvgquad_mp_2_up";
    else if ( _id_2626C56CE4ECC11B == "nvg_3" )
        _id_2626C56CE4ECC11B = "offhand_wm_nvgquad_mp_3_up";
    else if ( _id_2626C56CE4ECC11B == "nvg_4" )
        _id_2626C56CE4ECC11B = "offhand_wm_nvgquad_mp_3_up";
    else if ( _id_2626C56CE4ECC11B == "none" )
        _id_2626C56CE4ECC11B = undefined;
    else
        _id_2626C56CE4ECC11B = "offhand_wm_nvgquad_mp_1_up";

    return _id_2626C56CE4ECC11B;
}

nvg_get3rdpersondownmodel()
{
    _id_4E05BAF0BB66C66E = undefined;

    if ( isdefined( level.nvgheadoverrides[self.operatorcustomization.head] ) )
        _id_4E05BAF0BB66C66E = level.nvgheadoverrides[self.operatorcustomization.head]["down"];

    if ( !isdefined( _id_4E05BAF0BB66C66E ) )
        _id_4E05BAF0BB66C66E = "offhand_wm_nvgquad_mp_1";
    else if ( _id_4E05BAF0BB66C66E == "nvg_2" )
        _id_4E05BAF0BB66C66E = "offhand_wm_nvgquad_mp_2";
    else if ( _id_4E05BAF0BB66C66E == "nvg_3" )
        _id_4E05BAF0BB66C66E = "offhand_wm_nvgquad_mp_3";
    else if ( _id_4E05BAF0BB66C66E == "nvg_4" )
        _id_4E05BAF0BB66C66E = "offhand_wm_nvgquad_mp_4";
    else if ( _id_4E05BAF0BB66C66E == "none" )
        _id_4E05BAF0BB66C66E = undefined;
    else
        _id_4E05BAF0BB66C66E = "offhand_wm_nvgquad_mp_1";

    return _id_4E05BAF0BB66C66E;
}

nvg_update3rdperson( enabled )
{
    if ( isdefined( self.nvg3rdpersonmodel ) )
    {
        self detach( self.nvg3rdpersonmodel, "j_head" );
        self.nvg3rdpersonmodel = undefined;
    }

    if ( enabled )
    {
        _id_4E05BAF0BB66C66E = nvg_get3rdpersondownmodel();

        if ( isdefined( _id_4E05BAF0BB66C66E ) )
        {
            self.nvg3rdpersonmodel = _id_4E05BAF0BB66C66E;
            self attach( self.nvg3rdpersonmodel, "j_head" );
            return;
        }
    }
    else
    {
        _id_2626C56CE4ECC11B = nvg_get3rdpersonupmodel();

        if ( isdefined( _id_2626C56CE4ECC11B ) )
        {
            self.nvg3rdpersonmodel = _id_2626C56CE4ECC11B;
            self attach( self.nvg3rdpersonmodel, "j_head" );
        }
    }
}

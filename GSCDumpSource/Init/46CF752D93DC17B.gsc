// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level._id_5D2AF95280A3CF58 = getdvarint( "dvar_B2F1A70335C6A20B", 16000 );
    level._id_0F13B219A6CB9496 = [ "onFirstDrop", "generateFlightPath", "supplyDropFall", "planeDropRun", "spawnDropCrate", "onDropSpawned" ];
}

_id_69B2E5235BFB7998( name, cratemodel, _id_B55272982C57A2CE )
{
    if ( !isdefined( level._id_EF63E063E320ACFC ) )
        level._id_EF63E063E320ACFC = [];

    level._id_EF63E063E320ACFC[name] = spawnstruct();
    level._id_EF63E063E320ACFC[name].cratemodel = cratemodel;
    level._id_EF63E063E320ACFC[name].funcs = [];
    level._id_EF63E063E320ACFC[name].planemodel = "veh9_mil_air_cargo_plane_wm";
    level._id_EF63E063E320ACFC[name]._id_F01F4AB1D5D21F9C = getdvarint( "dvar_C5003AF4E1EC5349", 0.3 );
    level._id_EF63E063E320ACFC[name]._id_62BA925DF2F38D68 = getdvarint( "dvar_B35F53A26ED16372", 5 );
    level._id_EF63E063E320ACFC[name]._id_2E0D8BA0A46CE1B1 = getdvarint( "dvar_9604835948DA8A54", 3 );
    level._id_EF63E063E320ACFC[name].userate = getdvarint( "dvar_B995FD166E3EC5B0", 1 );
    level._id_EF63E063E320ACFC[name].usetime = getdvarint( "dvar_B663C9A86F4CA8E3", 4 );
    level._id_EF63E063E320ACFC[name].name = name;

    if ( !istrue( _id_B55272982C57A2CE ) )
    {
        level._id_EF63E063E320ACFC[name].funcs["generateFlightPath"] = ::_id_4A7C28606A956F8D;
        level._id_EF63E063E320ACFC[name].funcs["supplyDropFall"] = ::_id_7DEC3B199D2E73B8;
        level._id_EF63E063E320ACFC[name].funcs["planeDropRun"] = ::_id_8862805D448B58D4;
        level._id_EF63E063E320ACFC[name].funcs["spawnDropCrate"] = ::_id_52F17E5FBEC318A6;
    }

    return level._id_EF63E063E320ACFC[name];
}

_id_80E49E34FC8D70B8( name, _id_EA847593E957F2B0, func )
{
    level._id_EF63E063E320ACFC[name].funcs[_id_EA847593E957F2B0] = func;
}

_id_5691429FC16CDDC2()
{
    for (;;)
    {
        wait 2;

        if ( getdvar( "dvar_26EFC86D59CBD50E", "" ) != "" )
        {
            _id_1241AFBFB2CFED35( level.players[0].origin, getdvar( "dvar_26EFC86D59CBD50E", "" ) );
            setdvar( "dvar_26EFC86D59CBD50E", "" );
        }

        if ( getdvar( "dvar_C3236A6C15B391D3", "" ) != "" )
        {
            _id_1A01863A6EC2AD05( level.players[0].origin, getdvar( "dvar_C3236A6C15B391D3", "" ) );
            setdvar( "dvar_C3236A6C15B391D3", "" );
        }
    }
}

_id_1A01863A6EC2AD05( pos, droptype )
{
    _id_A82277E7547CF269 = level._id_EF63E063E320ACFC[droptype];
    planemodel = _id_A82277E7547CF269.planemodel;
    pathstruct = [[ _id_A82277E7547CF269.funcs["generateFlightPath"] ]]( pos );
    dist = distance( pathstruct.startpt, pathstruct.endpt );
    travelspeed = 3044;
    time = dist / travelspeed;
    plane = _id_2496CDD7BABAED39( pathstruct, dist, travelspeed, time, planemodel );
    plane setscriptablepartstate( "audio_lp_dmz", "on", 0 );
    plane moveto( plane.endpt, plane.lifetime );
    plane thread [[ _id_A82277E7547CF269.funcs["planeDropRun"] ]]( _id_A82277E7547CF269 );
    plane thread _id_6CC331348E2FAA9A();
}

_id_1241AFBFB2CFED35( pos, droptype )
{
    dropstruct = level._id_EF63E063E320ACFC[droptype];
    crate = _id_98E40BECF6AAE51F( pos, dropstruct );
    return crate;
}

_id_8862805D448B58D4( dropstruct )
{
    self endon( "death" );
    _id_BD693DCF6BECE704 = self.lifetime;
    _id_11F20C6978F7D6A6 = _id_BD693DCF6BECE704 * dropstruct._id_F01F4AB1D5D21F9C;
    numcrates = 0;
    wait( _id_11F20C6978F7D6A6 );

    while ( numcrates < dropstruct._id_2E0D8BA0A46CE1B1 )
    {
        if ( dropstruct._id_62BA925DF2F38D68 < _id_BD693DCF6BECE704 - _id_11F20C6978F7D6A6 )
            wait( dropstruct._id_62BA925DF2F38D68 );
        else
            waitframe();

        _id_76A22C18960F72AF = _id_95A507DC67864770( self.origin + anglestoforward( self.angles ) * 500 );

        if ( !isdefined( _id_76A22C18960F72AF ) )
            continue;

        crate = _id_98E40BECF6AAE51F( _id_76A22C18960F72AF, dropstruct );

        if ( !isdefined( crate ) )
            continue;

        if ( numcrates == 0 && isdefined( dropstruct.funcs["onFirstDrop"] ) )
            [[ dropstruct.funcs["onFirstDrop"] ]]();

        numcrates++;
    }
}

_id_C28362A9638E7931( dropstruct )
{
    level endon( "game_ended" );
    self endon( "death" );
    _id_BD693DCF6BECE704 = self.lifetime;
    _id_11F20C6978F7D6A6 = _id_BD693DCF6BECE704 * dropstruct._id_F01F4AB1D5D21F9C;
    _id_00D4DAE76EAC378B = ( self.centerpt[0], self.centerpt[1], level._id_5D2AF95280A3CF58 );
    _id_F8AAE4B48DFCCACE = _id_95A507DC67864770( _id_00D4DAE76EAC378B );
    _id_6060A1273859D593 = ( _id_F8AAE4B48DFCCACE[0], _id_F8AAE4B48DFCCACE[1], level._id_5D2AF95280A3CF58 );
    _id_CFF400C8A67610F7 = distance( self.origin, _id_6060A1273859D593 );

    for (;;)
    {
        _id_B0732CE0DDE34A1F = distance( self.origin, self.startpt );

        if ( _id_B0732CE0DDE34A1F >= _id_CFF400C8A67610F7 )
            break;

        waitframe();
    }

    crate = _id_98E40BECF6AAE51F( _id_F8AAE4B48DFCCACE, dropstruct );

    if ( isdefined( dropstruct.funcs["onFirstDrop"] ) )
        [[ dropstruct.funcs["onFirstDrop"] ]]();
}

_id_95A507DC67864770( _id_22C4300CE1D248E8, _id_5CE47DE2B275EEC8 )
{
    _id_76A22C18960F72AF = undefined;
    _id_98C6610C2907BA2B = _id_22C4300CE1D248E8 - ( 0, 0, 30000 );
    ignorelist = [ self ];
    contents = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 0, 1, 1, 1 );
    trace = scripts\engine\trace::ray_trace( _id_22C4300CE1D248E8, _id_98C6610C2907BA2B, ignorelist, contents );

    if ( isdefined( trace ) && trace["hittype"] != "hittype_none" )
    {
        pos = trace["position"];
        _id_76A22C18960F72AF = getclosestpointonnavmesh( pos );
        _id_8391900D9D61FE30 = _id_76A22C18960F72AF - pos;
        _id_8391900D9D61FE30 = ( _id_8391900D9D61FE30[0], _id_8391900D9D61FE30[1], 0 );
        _id_8391900D9D61FE30 = _id_8391900D9D61FE30 + vectornormalize( _id_8391900D9D61FE30 ) * getdvarint( "dvar_ADA223FD974A9D0B", 100 );
        _id_76A22C18960F72AF = getclosestpointonnavmesh( scripts\engine\utility::drop_to_ground( _id_76A22C18960F72AF + _id_8391900D9D61FE30, 10500 ) );
    }

    if ( isdefined( _id_76A22C18960F72AF ) && !istrue( _id_5CE47DE2B275EEC8 ) )
    {
        _id_5F1F32386B2BA829 = _id_45B2B4A889E633FA::ispointinbounds( _id_76A22C18960F72AF );

        if ( !istrue( _id_5F1F32386B2BA829 ) )
            _id_76A22C18960F72AF = undefined;
    }

    return _id_76A22C18960F72AF;
}

_id_4A7C28606A956F8D( _id_FC60036BA7BF253A )
{
    r = level.br_level.br_circleradii[0];

    if ( level.mapname == "mp_br_mechanics" )
        r = 2048;

    randomangle = randomfloatrange( 0, 360 );
    _id_7D0D99F1231F6085 = ( r * cos( randomangle ), r * sin( randomangle ), level._id_5D2AF95280A3CF58 );
    startpt = _id_7D0D99F1231F6085 + _id_FC60036BA7BF253A;
    startpt = ( startpt[0], startpt[1], level._id_5D2AF95280A3CF58 );
    endpt = _id_FC60036BA7BF253A - _id_7D0D99F1231F6085;
    endpt = ( endpt[0], endpt[1], level._id_5D2AF95280A3CF58 );
    pathdir = vectornormalize( endpt - startpt );
    pathstruct = spawnstruct();
    pathstruct.startpt = startpt;
    pathstruct.endpt = endpt;
    pathstruct.angle = vectortoangles( pathdir );
    pathstruct.centerpt = _id_FC60036BA7BF253A;
    return pathstruct;
}

_id_6CC331348E2FAA9A()
{
    self endon( "death" );
    level endon( "game_ended" );
    wait( self.lifetime - 1 );
    _id_B23A5BA733C5935D = spawn( "script_model", self.origin );
    _id_B23A5BA733C5935D setmodel( "veh8_mil_air_acharlie130_magma_scriptable" );
    _id_B23A5BA733C5935D setscriptablepartstate( "audio_exit_dmz", "on", 0 );
    _id_B23A5BA733C5935D thread scripts\mp\utility\script::delayentdelete( 10 );
    wait 1;
    self setscriptablepartstate( "audio_lp_dmz", "off", 0 );

    if ( isdefined( self.minimapid ) )
        scripts\mp\objidpoolmanager::returnobjectiveid( self.minimapid );

    if ( isdefined( self.chassis ) )
        self.chassis delete();

    if ( isdefined( self ) )
        self delete();
}

_id_2496CDD7BABAED39( _id_41C8BB9AFB483172, pathdist, _id_F0192932004DCE8D, _id_5B16491505732B2B, model )
{
    if ( !isdefined( model ) )
        model = "veh9_mil_air_cargo_plane_wm";

    plane = spawn( "script_model", _id_41C8BB9AFB483172.startpt );
    plane setmodel( model );
    plane setcandamage( 0 );
    plane.maxhealth = 100000;
    plane.health = plane.maxhealth;
    plane.startpt = _id_41C8BB9AFB483172.startpt;
    plane.endpt = _id_41C8BB9AFB483172.endpt;
    plane.centerpt = _id_41C8BB9AFB483172.centerpt;
    plane.dir = vectornormalize( plane.endpt - plane.startpt );
    plane.angles = vectortoangles( plane.dir );
    plane.pathdist = pathdist;
    plane.speed = _id_F0192932004DCE8D;
    plane.lifetime = _id_5B16491505732B2B;
    return plane;
}

_id_52F17E5FBEC318A6( _id_8EE83E2CBD3D747D, dropstruct, _id_D4858C7C75F6AB04 )
{
    _id_FDFE2D4AAF8EC33D = level._id_5D2AF95280A3CF58;

    if ( !isdefined( _id_D4858C7C75F6AB04 ) )
        _id_D4858C7C75F6AB04 = ( _id_8EE83E2CBD3D747D[0], _id_8EE83E2CBD3D747D[1], _id_FDFE2D4AAF8EC33D );

    crate = spawn( "script_model", _id_D4858C7C75F6AB04 );
    crate setmodel( dropstruct.cratemodel );
    crate.physicsactivated = 0;
    crate.isdestroyed = 0;
    crate.id = "care_package";
    crate.userate = dropstruct.userate;
    crate.curprogress = 0;
    crate.usetime = dropstruct.usetime;
    return crate;
}

_id_98E40BECF6AAE51F( _id_8EE83E2CBD3D747D, dropstruct )
{
    _id_FDFE2D4AAF8EC33D = level._id_5D2AF95280A3CF58;
    _id_D4858C7C75F6AB04 = ( _id_8EE83E2CBD3D747D[0], _id_8EE83E2CBD3D747D[1], _id_FDFE2D4AAF8EC33D + -1000 );
    crate = undefined;

    if ( isdefined( dropstruct.funcs["spawnDropCrate"] ) )
        crate = [[ dropstruct.funcs["spawnDropCrate"] ]]( _id_8EE83E2CBD3D747D, dropstruct );

    if ( isdefined( crate ) )
    {
        crate.skipminimapicon = 1;
        chute = spawn( "script_model", crate.origin );
        chute.angles = crate.angles;
        chute setmodel( "veh9_mil_lnd_parachute_carepackage_br" );
        crate.chute = chute;
        chute linkto( crate );

        if ( isdefined( dropstruct.funcs["onDropSpawned"] ) )
            crate thread [[ dropstruct.funcs["onDropSpawned"] ]]( _id_8EE83E2CBD3D747D );

        if ( isdefined( dropstruct.funcs["supplyDropFall"] ) )
            crate thread [[ dropstruct.funcs["supplyDropFall"] ]]( _id_8EE83E2CBD3D747D, dropstruct );
    }

    return crate;
}

_id_7DEC3B199D2E73B8( point, dropstruct )
{
    self endon( "death" );
    _id_81986B2D8E843970 = scripts\engine\utility::ter_op( isdefined( dropstruct._id_81986B2D8E843970 ), dropstruct._id_81986B2D8E843970, 10000000 );
    _id_EB4187DD85E05B36 = scripts\engine\utility::ter_op( isdefined( dropstruct._id_EB4187DD85E05B36 ), dropstruct._id_EB4187DD85E05B36, 1000 );
    _id_623DB0CC7C389A05 = scripts\engine\utility::ter_op( isdefined( dropstruct._id_623DB0CC7C389A05 ), dropstruct._id_623DB0CC7C389A05, 1 );

    if ( _id_EB4187DD85E05B36 > 0 )
    {
        _id_A8708D55FBEA7FC2 = scripts\engine\utility::randomvector( 1 ) * _id_EB4187DD85E05B36;
        point = scripts\engine\utility::drop_to_ground( point + _id_A8708D55FBEA7FC2 );
    }

    for ( _id_4D7F0C602124BB0A = distancesquared( scripts\engine\utility::drop_to_ground( self.origin, -100 ), self.origin ); _id_4D7F0C602124BB0A > _id_81986B2D8E843970; _id_4D7F0C602124BB0A = distancesquared( scripts\engine\utility::drop_to_ground( self.origin, -100 ), self.origin ) )
    {
        thread _id_3A64EC0C7632F6CC( point, dropstruct );
        waitframe();
    }

    self notify( "crate_drift_end" );
    self._id_661D71D55253757D = undefined;

    if ( isdefined( self.chute ) )
        self.chute delete();

    self unlink();
    self physicslaunchserver( ( 0, 0, 0 ), ( 0, 0, 0 ) );
    _id_212A44A5393C3B34 = self physics_getbodyid( 0 );
    physics_setbodycenterofmassnormal( _id_212A44A5393C3B34, ( 0, 0, -1 ) );
    self.physicsactivated = 1;
    endpos = scripts\engine\utility::drop_to_ground( self.origin, 25, -5000 );

    if ( istrue( _id_623DB0CC7C389A05 ) )
    {
        self.smokesignal = spawn( "script_model", endpos );
        self.smokesignal setmodel( "ks_airdrop_crate_dmz" );
        self.smokesignal setscriptablepartstate( "smoke_signal", "on", 0 );
    }

    wait 3;
    self setscriptablepartstate( "dmz_supply_drop", "usable" );
}

_id_3A64EC0C7632F6CC( point, dropstruct )
{
    self endon( "death" );
    self endon( "crate_drift_end" );

    if ( isdefined( self._id_661D71D55253757D ) )
        return;

    self._id_661D71D55253757D = 1;
    _id_CD743003D3F4F0CA = scripts\engine\utility::ter_op( isdefined( dropstruct._id_CD743003D3F4F0CA ), dropstruct._id_CD743003D3F4F0CA, 3 );
    _id_3077F6D3D97BB34B = scripts\engine\utility::ter_op( isdefined( dropstruct._id_3077F6D3D97BB34B ), dropstruct._id_3077F6D3D97BB34B, 400 );
    _id_3C3ED534C61A56E4 = scripts\engine\utility::ter_op( isdefined( dropstruct._id_3C3ED534C61A56E4 ), dropstruct._id_3C3ED534C61A56E4, 100 );
    _id_94AE57FE158C3C29 = scripts\engine\utility::ter_op( isdefined( dropstruct._id_94AE57FE158C3C29 ), dropstruct._id_94AE57FE158C3C29, 100 );
    _id_9612B650D147F458 = scripts\engine\utility::ter_op( isdefined( dropstruct._id_9612B650D147F458 ), dropstruct._id_9612B650D147F458, 500 );
    _id_191EBD2DD0D5F975 = randomfloat( _id_94AE57FE158C3C29 ) + _id_3077F6D3D97BB34B;
    _id_67A81E668B8A7DBD = randomfloat( _id_9612B650D147F458 ) + _id_3C3ED534C61A56E4;
    dir = point - self.origin;
    _id_6EF6398383AE0CF6 = vectornormalize( ( dir[0], dir[1], 0 ) );
    _id_EA13048AE45874C6 = ( _id_6EF6398383AE0CF6[0] * _id_67A81E668B8A7DBD, _id_6EF6398383AE0CF6[1] * _id_67A81E668B8A7DBD, 0 - _id_191EBD2DD0D5F975 );
    startpoint = self.origin;
    timer = 0;

    while ( timer < _id_CD743003D3F4F0CA )
    {
        _id_CE254178F5785581 = level.framedurationseconds;
        t = timer / _id_CD743003D3F4F0CA;
        _id_531E349AD5675163 = t * t * ( 3 - 2 * t );
        _id_E3E0425BF610E7B4 = t * t * 0.5 + 0.5 * t;

        if ( !isdefined( _id_EA13048AE45874C6 ) || !isdefined( _id_531E349AD5675163 ) || !isdefined( _id_E3E0425BF610E7B4 ) )
            break;

        _id_868FBF655BD5E977 = ( _id_EA13048AE45874C6[0] * _id_531E349AD5675163, _id_EA13048AE45874C6[1] * _id_531E349AD5675163, _id_EA13048AE45874C6[2] * _id_E3E0425BF610E7B4 );
        self.origin = startpoint + _id_868FBF655BD5E977;
        timer = timer + _id_CE254178F5785581;
        waitframe();
    }

    self._id_661D71D55253757D = undefined;
}

_id_94FF06D2DB58E807( instance, part, state, player, _id_A5B2C541413AA895, _id_CC38472E36BE1B61 )
{
    if ( !istrue( instance.entity.open ) )
    {
        if ( instance.entity _id_6B3BFD072D1FAAFB( player ) )
            instance.entity.open = 1;
        else
            return;
    }

    instance setscriptablepartstate( "dmz_supply_drop", "partially_open_in_use_unusable" );

    if ( isdefined( level._id_2FF67632074BC957 ) )
        [[ level._id_2FF67632074BC957 ]]( player );

    items = getscriptablelootcachecontents( instance );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "pmc_missions", "onOpenSupplyDrop" ) )
        items = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "pmc_missions", "onOpenSupplyDrop" ) ]]( player, instance, items );

    if ( !isdefined( instance.contents ) )
    {
        instance._id_46A3A8565AC0C17C = 3;
        instance _id_552B8E4EA5FF7DF1::lootcachespawncontents( items, 1, player, instance.contents );
    }
    else
        instance _id_552B8E4EA5FF7DF1::lootcachespawncontents( undefined, 1, player, instance.contents );

    if ( !isdefined( player.lootcachesopened ) )
        player.lootcachesopened = 1;
    else
        player.lootcachesopened++;
}

_id_6B3BFD072D1FAAFB( player )
{
    player endon( "disconnect" );
    player endon( "joined_team" );
    player endon( "joined_spectators" );

    while ( isdefined( player ) && player scripts\cp_mp\utility\player_utility::_isalive() && cankeepusingcrate( player ) && player usebuttonpressed() )
    {
        self.curprogress = self.curprogress + level.framedurationseconds * self.userate;

        if ( self.curprogress >= self.usetime )
        {
            self.curprogress = 0.0;
            stopusingcrate( player );
            return 1;
        }

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airdrop", "updateUIProgress" ) )
            player [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airdrop", "updateUIProgress" ) ]]( self, 1 );

        waitframe();
    }

    stopusingcrate( player );
    self.curprogress = 0.0;
    return 0;
}

stopusingcrate( player )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airdrop", "updateUIProgress" ) )
        player [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airdrop", "updateUIProgress" ) ]]( self, 0 );
}

cankeepusingcrate( player )
{
    if ( !player scripts\cp_mp\utility\player_utility::_isalive() )
        return 0;

    if ( player meleebuttonpressed() )
        return 0;

    if ( player isinexecutionvictim() )
        return 0;

    if ( istrue( player.inlaststand ) )
        return 0;

    if ( distancesquared( player.origin, self.origin ) >= 10000 )
        return 0;

    return 1;
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( !getdvarint( "dvar_EB0811EAD28C4F53", 0 ) )
        return;

    _id_C592E91FC6604AD0();
    scripts\engine\scriptable::scriptable_adddamagedcallback( ::_id_D01754FC00A031F4 );
    scripts\engine\scriptable::scriptable_addusedcallbackbypart( "redeploy_drone_interact", ::_id_F0567CDA220A6F7D );
    level thread _id_023F7ACAAB482446();
}

_id_C592E91FC6604AD0()
{
    level._id_FC4BB27A820F54DD = spawnstruct();
    level._id_FC4BB27A820F54DD._id_1131F855E49656BF = getdvarint( "dvar_2AF4EFAAFAE6489B", 2000 );
    level._id_FC4BB27A820F54DD._id_4B2CDACF483DCCC4 = getdvarfloat( "dvar_0590A91E3623C94D", 4.0 );
    level._id_FC4BB27A820F54DD._id_71BA1DDBE86CAB15 = getdvarint( "dvar_6F1790CA04925016", 200 );
    level._id_FC4BB27A820F54DD._id_87972F659142BCAD = loadfx( "vfx/iw8_br/island/barrage_balloon/vfx_barrage_balloon_explosion" );
    level._id_FC4BB27A820F54DD._id_AB77BCFBF6EC9587 = getdvarint( "dvar_3CD8F7500C4CFFCB", 30 );
    level._id_FC4BB27A820F54DD._id_73E374CE21FB4FB5 = getdvarint( "dvar_0E0052F554FB1D69", 50 );
    _id_13780A1242F4ADF5 = getdvarint( "dvar_D0D518FA494F738D", 5000 );
    level._id_FC4BB27A820F54DD._id_CFBD39A74E99D5D6 = squared( _id_13780A1242F4ADF5 );
    level._id_FC4BB27A820F54DD._id_F06709293DD563E6 = getdvarint( "dvar_898325E4EE88D57F", 2000 );
    level._id_FC4BB27A820F54DD._id_9A279E924352BE3B = getdvarint( "dvar_019F16B7BFEA9D46", 3000 );
    level._id_FC4BB27A820F54DD._id_B24B7A96D6C8E3C8 = getdvarint( "dvar_BA0B665C109648FD", 45000 );
    level._id_FC4BB27A820F54DD._id_1C9F02381DCB3A4C = [];
    level._id_FC4BB27A820F54DD._id_CD2DE8814A52F22C = getentitylessscriptablearray( "scriptable_scriptable_redeploy_drone", "classname" );
    level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E = getentitylessscriptablearray( "redeploy_drone_spawn", "script_noteworthy" );
    level._id_FC4BB27A820F54DD._id_F92270E010A8D104 = getentitylessscriptablearray( "redeploy_drone_relocate", "script_noteworthy" );
}

_id_023F7ACAAB482446()
{
    waitframe();
    _id_22627CFD727F11C3();
    scripts\mp\flags::gameflagwait( "prematch_fade_done" );
    level notify( "respawn_redeploy_drones" );
    _id_4418403E6587197C();
}

_id_22627CFD727F11C3()
{
    if ( !level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E.size )
        return;

    _id_803FCD430C64F5FA();
    level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E = scripts\engine\utility::array_randomize( level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E );
    _id_6122B6DDE9CAAD43 = 0;

    if ( getdvarint( "dvar_C8BF033D68E5E87E", 0 ) )
        _id_6122B6DDE9CAAD43 = randomintrange( 1, level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E.size + 1 );
    else if ( getdvarfloat( "dvar_F95EE5FF0B021461", 1.0 ) )
        _id_6122B6DDE9CAAD43 = getdvarfloat( "dvar_F95EE5FF0B021461", 1.0 ) * level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E.size;

    if ( _id_6122B6DDE9CAAD43 > 0 )
    {
        level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E = scripts\engine\utility::array_randomize( level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E );

        for ( _id_AC0E594AC96AA3A8 = level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E.size - 1; _id_AC0E594AC96AA3A8 >= _id_6122B6DDE9CAAD43; _id_AC0E594AC96AA3A8-- )
            level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E = scripts\engine\utility::array_remove_index( level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E, _id_AC0E594AC96AA3A8 );
    }

    foreach ( scriptable in level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E )
    {
        scriptable _id_CA6EA48C877CD367();
        scriptable _id_81ACD562E1D05436();
        scriptable thread _id_304011733DEC70F6();
    }

    _id_7B4E0A43082EF81B();

    foreach ( scriptable in level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E )
        scriptable thread _id_7F00C76550370A80();
}

_id_4418403E6587197C()
{
    foreach ( scriptable in level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E )
    {
        scriptable _id_CA6EA48C877CD367();
        scriptable _id_81ACD562E1D05436();
        scriptable thread _id_304011733DEC70F6();
    }
}

_id_803FCD430C64F5FA()
{
    _id_EDF14926136FF201 = [];

    switch ( level.mapname )
    {
        case "mp_sealion":
            _id_EDF14926136FF201[_id_EDF14926136FF201.size] = _id_BC7ACC24994B90CE( ( 700, -1800, 0 ), 5000 );
            _id_EDF14926136FF201[_id_EDF14926136FF201.size] = _id_BC7ACC24994B90CE( ( 7600, 9300, 0 ), 5000 );
            _id_EDF14926136FF201[_id_EDF14926136FF201.size] = _id_BC7ACC24994B90CE( ( -13800, -100, 0 ), 5000 );
            _id_EDF14926136FF201[_id_EDF14926136FF201.size] = _id_BC7ACC24994B90CE( ( 4400, -13500, 0 ), 5000 );
            break;
    }

    if ( _id_EDF14926136FF201.size )
    {
        foreach ( _id_4DA560F30470DB78 in _id_EDF14926136FF201 )
        {
            _id_A1F7C12ACE815836 = [];

            foreach ( _id_9AC92D74937870BE in level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E )
            {
                if ( distance2dsquared( _id_9AC92D74937870BE.origin, _id_4DA560F30470DB78._id_4633B19515EDF5C9 ) < squared( _id_4DA560F30470DB78._id_AE2730E7EECF1623 ) )
                    _id_A1F7C12ACE815836[_id_A1F7C12ACE815836.size] = _id_9AC92D74937870BE;
            }

            _id_A1F7C12ACE815836 = scripts\engine\utility::array_randomize( _id_A1F7C12ACE815836 );

            for ( _id_AC0E594AC96AA3A8 = 1; _id_AC0E594AC96AA3A8 < _id_A1F7C12ACE815836.size; _id_AC0E594AC96AA3A8++ )
                level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E = scripts\engine\utility::array_remove( level._id_FC4BB27A820F54DD._id_5715BE6CA445D02E, _id_A1F7C12ACE815836[_id_AC0E594AC96AA3A8] );
        }
    }
}

_id_BC7ACC24994B90CE( _id_4633B19515EDF5C9, _id_AE2730E7EECF1623 )
{
    _id_7B0ECE04A03E430A = spawnstruct();
    _id_7B0ECE04A03E430A._id_4633B19515EDF5C9 = _id_4633B19515EDF5C9;
    _id_7B0ECE04A03E430A._id_AE2730E7EECF1623 = _id_AE2730E7EECF1623;
    return _id_7B0ECE04A03E430A;
}

_id_7B4E0A43082EF81B()
{
    level waittill( "br_circle_set" );

    foreach ( scriptable in level._id_FC4BB27A820F54DD._id_CD2DE8814A52F22C )
    {
        _id_3F69BE4080274AC5 = _id_58F20490049AF6AC::_id_60951B84C58915AB( scriptable.origin );
        scriptable._id_91D32F70A51031F9 = gettime() + 1000 * _id_58F20490049AF6AC::_id_7D8550B9A2C52852( _id_3F69BE4080274AC5 );
    }
}

_id_CA6EA48C877CD367()
{
    self setscriptablepartstate( "redeploy_drone", "available" );
    self._id_264EFAAD635372B2 = 1;

    if ( !isdefined( self._id_6731B975A168829F ) )
    {
        self._id_6731B975A168829F = spawn( "script_model", self.origin - ( 0, 0, 3500 ) );
        self._id_6731B975A168829F setmodel( "lm_military_skyhook_extraction_01_ch3" );
    }
}

_id_91CD32B49CCFF0F3()
{
    self setscriptablepartstate( "redeploy_drone", "unavailable" );
    self._id_264EFAAD635372B2 = 0;

    if ( isdefined( self._id_6731B975A168829F ) )
        self._id_6731B975A168829F delete();
}

_id_7FA5478ED150D979()
{
    self setscriptablepartstate( "redeploy_drone", "unavailable" );
    self._id_264EFAAD635372B2 = 0;

    if ( isdefined( self._id_6731B975A168829F ) )
        self._id_6731B975A168829F delete();
}

_id_81ACD562E1D05436()
{
    self.health = level._id_FC4BB27A820F54DD._id_1131F855E49656BF;
    self.maxhealth = level._id_FC4BB27A820F54DD._id_1131F855E49656BF;
}

_id_304011733DEC70F6()
{
    level endon( "respawn_redeploy_drones" );
    self waittill( "redeploy_drone_destroyed" );
}

_id_D01754FC00A031F4( einflictor, eattacker, instance, idamage, idflags, smeansofdeath, objweapon, vdir, shitloc, modelindex, partname )
{
    if ( !isdefined( instance ) || !isdefined( instance.classname ) || instance.classname != "scriptable_scriptable_redeploy_drone" )
        return;

    if ( idamage < 2 )
        return;

    if ( shitloc[2] < instance.origin[2] - 100 )
        return;

    if ( isplayer( eattacker ) )
        eattacker _id_5762AC2F22202BA2::updatehitmarker( "standard", instance.health == 0, 0, 1, "hitequip" );
    else if ( isdefined( eattacker.owner ) && isplayer( eattacker.owner ) )
        eattacker.owner _id_5762AC2F22202BA2::updatehitmarker( "standard", instance.health == 0, 0, 1, "hitequip" );

    if ( isdefined( eattacker.model ) && eattacker.model == "veh8_mil_air_lbravo_mp_flyable" || eattacker.model == "veh8_mil_air_lbravo_mp_flyable_mg" )
        level thread _id_CF65FBC1C077FADB( eattacker, instance.origin );

    if ( isdefined( smeansofdeath ) && smeansofdeath == 3 || smeansofdeath == 4 || smeansofdeath == 5 || smeansofdeath == 6 || smeansofdeath == 7 || smeansofdeath == 16 )
        idamage = int( idamage * level._id_FC4BB27A820F54DD._id_4B2CDACF483DCCC4 );

    if ( isdefined( einflictor ) && isdefined( einflictor.model ) && einflictor.model == "ks_airstrike_target_br_ch3" )
        idamage = level._id_FC4BB27A820F54DD._id_71BA1DDBE86CAB15;

    instance.health = instance.health - idamage;

    if ( isdefined( objweapon ) && isdefined( objweapon.basename ) && objweapon.basename == "toma_proj_mp" )
        instance.health = 0;

    if ( instance.health <= 0 )
        instance _id_492FA39D6A4DF6DE( einflictor, eattacker );
}

_id_492FA39D6A4DF6DE( einflictor, eattacker )
{
    self setscriptablepartstate( "redeploy_drone", "unavailable" );
    playfx( level._id_FC4BB27A820F54DD._id_87972F659142BCAD, self.origin + ( 0, 0, 4500 ) );
    self notify( "redeploy_drone_destroyed" );

    if ( isdefined( einflictor ) && isdefined( einflictor.model ) && einflictor.model == "ks_airstrike_target_br_ch3" )
        eattacker._id_9A5AED1448C04687++;

    waitframe();
    radiusdamage( self.origin + ( 0, 0, 4500 ), 512, 100, 100, undefined, "MOD_EXPLOSIVE", "claymore_radial_mp" );
}

_id_CF65FBC1C077FADB( attacker, _id_254F9C6C23AD6894 )
{
    wait 0.15;

    if ( scripts\mp\utility\player::isreallyalive( attacker ) )
        attacker dodamage( 9999, _id_254F9C6C23AD6894 );
}

_id_D52AE9FC3100CECF()
{
    self endon( "death_or_disconnect" );

    while ( !self isonground() )
    {
        _id_78122E18403A8DC4 = scripts\common\utility::playersincylinder( self.origin, level._id_FC4BB27A820F54DD._id_F06709293DD563E6, undefined, level._id_FC4BB27A820F54DD._id_9A279E924352BE3B );
        _id_55B4FA124C5108FF = self.team;

        foreach ( targetplayer in _id_78122E18403A8DC4 )
        {
            _id_8B1B7044E27E6A56 = _id_55B4FA124C5108FF == targetplayer.team;

            if ( _id_8B1B7044E27E6A56 )
                continue;

            _id_CDA71AEC07AAB082 = !scripts\mp\utility\player::isreallyalive( targetplayer ) || istrue( targetplayer.inlaststand );

            if ( _id_CDA71AEC07AAB082 )
                continue;

            _id_744496CCCBBFCB78 = targetplayer isparachuting() || targetplayer isinfreefall();

            if ( _id_744496CCCBBFCB78 )
                continue;

            time = gettime();
            _id_008EDFF54C680323 = isdefined( targetplayer.heardparachuteoverheadtime ) && time - targetplayer.heardparachuteoverheadtime < level._id_FC4BB27A820F54DD._id_B24B7A96D6C8E3C8;

            if ( _id_008EDFF54C680323 )
                continue;

            targetplayer.heardparachuteoverheadtime = time;
            _id_95CE4F91D0F58568 = _id_2CEDCC356F1B9FC8::brgetoperatorteam( targetplayer );
            _id_7570AFA45D86040F = game["voice"][_id_95CE4F91D0F58568];
            targetplayer queuedialogforplayer( level.activeparachutersfactionvo[_id_7570AFA45D86040F], "respawning_enemy_in_area", 2 );
        }

        waitframe();
    }
}

_id_F62DDB987F477858()
{
    self setclientomnvar( "ui_br_altimeter_state", 2 );

    while ( isalive( self ) )
    {
        if ( self isonground() )
        {
            self setclientomnvar( "ui_br_altimeter_state", 0 );
            return;
        }

        waitframe();
    }

    if ( isdefined( self ) )
        self setclientomnvar( "ui_br_altimeter_state", 0 );
}

_id_2AD170B9D70C7062()
{

}

_id_7F00C76550370A80()
{
    level endon( "game_ended" );

    if ( self._id_91D32F70A51031F9 - gettime() > 0 )
    {
        wait( ( self._id_91D32F70A51031F9 - gettime() ) / 1000 );

        if ( self getscriptablepartstate( "redeploy_drone" ) == "unavailable" )
            return;
    }

    thread _id_B49EC1763C49A840();
}

_id_B49EC1763C49A840()
{
    level endon( "game_ended" );
    wait( level._id_FC4BB27A820F54DD._id_AB77BCFBF6EC9587 );

    if ( self getscriptablepartstate( "redeploy_drone" ) == "unavailable" )
        return;

    _id_DAAD7D20D7A17C02 = undefined;
    _id_9225DFDB20269B5A = undefined;

    foreach ( scriptable in level._id_FC4BB27A820F54DD._id_CD2DE8814A52F22C )
    {
        if ( istrue( scriptable._id_264EFAAD635372B2 ) )
            continue;

        if ( scriptable getscriptablepartstate( "redeploy_drone" ) == "available" )
            continue;

        if ( isdefined( scriptable._id_91D32F70A51031F9 ) && scriptable._id_91D32F70A51031F9 - gettime() <= 0 )
            continue;

        if ( scriptable _id_77E61741CC59C806() )
            continue;

        _id_7319DF2BD443C913 = distance2dsquared( self.origin, scriptable.origin );

        if ( !isdefined( _id_9225DFDB20269B5A ) || _id_7319DF2BD443C913 < _id_9225DFDB20269B5A )
        {
            _id_9225DFDB20269B5A = _id_7319DF2BD443C913;
            _id_DAAD7D20D7A17C02 = scriptable;
        }
    }

    if ( !isdefined( _id_DAAD7D20D7A17C02 ) )
    {
        thread _id_BFA2960787851BA9();
        return;
    }

    _id_DAAD7D20D7A17C02._id_264EFAAD635372B2 = 1;
    _id_7FA5478ED150D979();
    drone = spawn( "script_model", self.origin );
    drone setmodel( "veh9_mil_air_drone_redeploy" );
    drone.angles = self.angles;
    drone.speed = 0;
    drone thread _id_6D9358D777958A1B( _id_DAAD7D20D7A17C02 );
    drone thread _id_53A07930F4FC0E08( _id_DAAD7D20D7A17C02 );

    while ( !isdefined( drone._id_3B4FEE20D214BD9B ) || !isdefined( drone._id_F44262DAAB1A384A ) )
        wait 0.05;

    drone delete();
    _id_DAAD7D20D7A17C02 _id_CA6EA48C877CD367();
    _id_DAAD7D20D7A17C02 thread _id_7F00C76550370A80();
}

_id_BFA2960787851BA9()
{
    level endon( "game_ended" );
    wait( level._id_FC4BB27A820F54DD._id_AB77BCFBF6EC9587 );

    if ( self getscriptablepartstate( "redeploy_drone" ) == "unavailable" )
        return;

    _id_10B874AA4BB07A07 = spawnstruct();
    _id_9602B340166DCDD7 = _id_2695A20D4011076D::getsafecircleorigin();
    _id_10B874AA4BB07A07.origin = self.origin + vectornormalize( self.origin - ( _id_9602B340166DCDD7[0], _id_9602B340166DCDD7[1], self.origin[2] ) ) * 20000;
    _id_10B874AA4BB07A07.angles = vectortoangles( self.origin - ( _id_9602B340166DCDD7[0], _id_9602B340166DCDD7[1], self.origin[2] ) );
    _id_7FA5478ED150D979();
    drone = spawn( "script_model", self.origin );
    drone setmodel( "veh9_mil_air_drone_redeploy" );
    drone.angles = self.angles;
    drone.speed = 0;
    drone thread _id_6D9358D777958A1B( _id_10B874AA4BB07A07 );
    drone thread _id_53A07930F4FC0E08( _id_10B874AA4BB07A07 );

    while ( !isdefined( drone._id_3B4FEE20D214BD9B ) || !isdefined( drone._id_F44262DAAB1A384A ) )
        wait 0.05;

    drone delete();
}

_id_77E61741CC59C806()
{
    foreach ( scriptable in level._id_FC4BB27A820F54DD._id_CD2DE8814A52F22C )
    {
        if ( scriptable == self )
            continue;

        if ( istrue( scriptable._id_264EFAAD635372B2 ) )
        {
            if ( distance2dsquared( self.origin, scriptable.origin ) < level._id_FC4BB27A820F54DD._id_CFBD39A74E99D5D6 )
                return 1;
        }
    }

    return 0;
}

_id_6D9358D777958A1B( _id_DAAD7D20D7A17C02 )
{
    level endon( "game_ended" );

    while ( self.speed < level._id_FC4BB27A820F54DD._id_73E374CE21FB4FB5 )
    {
        self.speed = self.speed + 1;

        if ( self.speed > level._id_FC4BB27A820F54DD._id_73E374CE21FB4FB5 )
            self.speed = level._id_FC4BB27A820F54DD._id_73E374CE21FB4FB5;

        self moveto( self.origin + self.speed * vectornormalize( _id_DAAD7D20D7A17C02.origin - self.origin ), 0.05, 0, 0 );
        wait 0.05;
    }

    while ( distance2dsquared( self.origin, _id_DAAD7D20D7A17C02.origin ) > 250000 )
    {
        self moveto( self.origin + self.speed * vectornormalize( _id_DAAD7D20D7A17C02.origin - self.origin ), 0.05, 0, 0 );
        wait 0.05;
    }

    self notify( "redeploy_drone_arrive" );

    while ( distance2dsquared( self.origin, _id_DAAD7D20D7A17C02.origin ) > 0.01 )
    {
        self moveto( self.origin + ( _id_DAAD7D20D7A17C02.origin - self.origin ) * 0.1, 0.05, 0, 0 );
        wait 0.05;
    }

    self moveto( _id_DAAD7D20D7A17C02.origin, 0.05, 0, 0 );
    wait 0.05;
    self._id_3B4FEE20D214BD9B = 1;
}

_id_53A07930F4FC0E08( _id_DAAD7D20D7A17C02 )
{
    level endon( "game_ended" );
    _id_B082D9FE8938E33D = vectornormalize( _id_DAAD7D20D7A17C02.origin - self.origin );
    _id_0DA83F385E7E33E1 = vectortoangles( _id_B082D9FE8938E33D )[1] - self.angles[1];

    if ( _id_0DA83F385E7E33E1 < -180 )
        _id_0DA83F385E7E33E1 = _id_0DA83F385E7E33E1 + 360;

    if ( _id_0DA83F385E7E33E1 > 180 )
        _id_0DA83F385E7E33E1 = _id_0DA83F385E7E33E1 - 360;

    _id_3B7468ECD13AD07B = vectordot( _id_B082D9FE8938E33D, anglestoforward( self.angles ) );
    _id_BCEF23E599E4CC3C = vectordot( _id_B082D9FE8938E33D, anglestoright( self.angles ) );
    _id_4D03BEB0293B1B14 = abs( _id_0DA83F385E7E33E1 );
    _id_0BE553A9CE54D449 = _id_4D03BEB0293B1B14 - 90;

    if ( _id_0BE553A9CE54D449 > 0 )
    {
        _id_039FB5D4CA8578C6 = _id_0BE553A9CE54D449 / _id_4D03BEB0293B1B14;
        self rotateby( ( 30 * _id_3B7468ECD13AD07B + 15, _id_0DA83F385E7E33E1 * _id_039FB5D4CA8578C6, 30 * _id_BCEF23E599E4CC3C ), _id_0BE553A9CE54D449 * 0.025, _id_0BE553A9CE54D449 / 2 * 0.025, 0 );
        wait( _id_0BE553A9CE54D449 * 0.025 );
        _id_452972B9D736DFD6 = _id_4D03BEB0293B1B14 - _id_0BE553A9CE54D449;
        self rotateto( ( 30, vectortoangles( _id_B082D9FE8938E33D )[1], 0 ), _id_452972B9D736DFD6 * 0.025, 0, _id_452972B9D736DFD6 / 2 * 0.025 );
        wait( _id_452972B9D736DFD6 * 0.025 );
    }
    else
    {
        _id_3B290CB32F6FC162 = _id_4D03BEB0293B1B14 / 2 * 0.025;

        if ( _id_3B290CB32F6FC162 < 1 )
            _id_3B290CB32F6FC162 = 1;

        self rotateby( ( 15.0 * _id_3B7468ECD13AD07B, _id_0DA83F385E7E33E1 / 2, 15.0 * _id_BCEF23E599E4CC3C ), _id_3B290CB32F6FC162, _id_3B290CB32F6FC162 / 2, 0 );
        wait( _id_3B290CB32F6FC162 );
        self rotateto( ( 30, vectortoangles( _id_B082D9FE8938E33D )[1], 0 ), _id_3B290CB32F6FC162, 0, _id_3B290CB32F6FC162 / 2 );
        wait( _id_3B290CB32F6FC162 );
    }

    self waittill( "redeploy_drone_arrive" );
    _id_0DA83F385E7E33E1 = _id_DAAD7D20D7A17C02.angles[1] - self.angles[1];

    if ( _id_0DA83F385E7E33E1 < -180 )
        _id_0DA83F385E7E33E1 = _id_0DA83F385E7E33E1 + 360;

    if ( _id_0DA83F385E7E33E1 > 180 )
        _id_0DA83F385E7E33E1 = _id_0DA83F385E7E33E1 - 360;

    _id_3B7468ECD13AD07B = vectordot( anglestoforward( self.angles ), anglestoforward( _id_DAAD7D20D7A17C02.angles ) );
    _id_BCEF23E599E4CC3C = vectordot( anglestoright( self.angles ), anglestoforward( _id_DAAD7D20D7A17C02.angles ) );
    _id_3B290CB32F6FC162 = 1.0;
    self rotateby( ( -30 * _id_3B7468ECD13AD07B - 30, _id_0DA83F385E7E33E1 / 2, 30 * _id_BCEF23E599E4CC3C ), _id_3B290CB32F6FC162, _id_3B290CB32F6FC162 / 2, 0 );
    wait( _id_3B290CB32F6FC162 );
    self rotateto( ( 0, _id_DAAD7D20D7A17C02.angles[1], 0 ), _id_3B290CB32F6FC162, 0, _id_3B290CB32F6FC162 / 2 );
    wait( _id_3B290CB32F6FC162 );
    self._id_F44262DAAB1A384A = 1;
}

_id_F0567CDA220A6F7D( instance, part, state, player, _id_A5B2C541413AA895, _id_CC38472E36BE1B61 )
{

}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( scripts\common\utility::ismp() )
    {
        if ( getdvar( "dvar_7611A2790A0BF7FE", "br" ) != "dmz" )
            return;
    }

    level._id_07F5DBF6CA6A4468 = spawnstruct();
    level._id_07F5DBF6CA6A4468.events = [];
    level._id_60FC087BC7DEAADC = ::_id_60FC087BC7DEAADC;
    level thread _id_2B7B925F1037E020();

    if ( getdvarint( "dvar_B1DBB741DA6AA657", 0 ) == 1 )
        level thread _id_96E4F7AC9D0F56E4();

    if ( getdvarint( "dvar_859FB74D1557C0B1", 1 ) && scripts\common\utility::ismp() )
        level thread _id_B0C21EABFFCE3FD4();
}

_id_2B7B925F1037E020()
{
    _id_A4F08903B38D314B = getdvar( "dvar_97EFDE55DF4BCCCD", "mp_cp/overlord_dmz.csv" );
    scripts\mp\flags::levelflaginit( "overlord_csv_init", 0 );
    _id_CB89110314447B2F = 0;

    for (;;)
    {
        ref = tablelookupbyrow( _id_A4F08903B38D314B, _id_CB89110314447B2F, 0 );

        if ( ref == "" )
            break;

        alias = tablelookupbyrow( _id_A4F08903B38D314B, _id_CB89110314447B2F, 1 );
        priority = int( tablelookupbyrow( _id_A4F08903B38D314B, _id_CB89110314447B2F, 2 ) );
        cooldown = int( tablelookupbyrow( _id_A4F08903B38D314B, _id_CB89110314447B2F, 3 ) );
        timeout = lookupsoundlength( alias, 1 ) / 1000 + 2;
        _id_780B7B802E71FD94( ref, alias, priority, cooldown, timeout );
        _id_CB89110314447B2F++;
    }

    scripts\mp\flags::levelflagset( "overlord_csv_init" );
}

_id_96E4F7AC9D0F56E4()
{
    scripts\mp\flags::levelflagwait( "overlord_csv_init" );

    for (;;)
    {
        _id_D87D5DEB069BF8E5( "player_civ_kill_third_warning", [ level.players[0] ] );
        wait 1.0;
        _id_D87D5DEB069BF8E5( "player_civ_kill_frst_warning", [ level.players[0] ] );
        wait 1.0;
        _id_D87D5DEB069BF8E5( "player_civ_kill_second_warning", [ level.players[0] ] );
        wait 5.0;
    }
}

_id_780B7B802E71FD94( ref, alias, priority, cooldown, timeout )
{
    event = spawnstruct();
    event.ref = ref;
    event.alias = alias;
    event.priority = priority;
    event.cooldown = cooldown * 1000;
    event.timeout = timeout;
    level._id_07F5DBF6CA6A4468.events[ref] = event;
}

_id_D87D5DEB069BF8E5( eventref, players, delay )
{
    if ( !isdefined( level._id_07F5DBF6CA6A4468 ) )
        return 0;

    if ( isdefined( delay ) )
        wait( delay );

    event = level._id_07F5DBF6CA6A4468.events[eventref];

    if ( !isdefined( event ) )
        return 0;

    if ( !soundexists( event.alias ) )
        return 0;

    foreach ( player in players )
    {
        if ( !isalive( player ) )
            continue;

        player _id_D453707F6B8F2C6D();

        if ( !player _id_8C3011DCCACE47C4( eventref ) )
            continue;

        _id_A98FC745A78358C9 = player _id_17C324959B47A339( event );
        player queuedialogforplayer( event.alias, event.alias, event.timeout, "overlord", _id_A98FC745A78358C9 );
        player._id_5A2916F745D4389A[eventref] = gettime();
    }

    return 1;
}

_id_9793A81BC3BC19E9( eventref, team, delay )
{
    if ( isdefined( delay ) )
        wait( delay );

    players = level.players;

    if ( isdefined( team ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getTeamData" ) )
            players = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getTeamData" ) ]]( team, "players" );
    }

    _id_D87D5DEB069BF8E5( eventref, players );
}

_id_8C3011DCCACE47C4( eventref )
{
    if ( isdefined( self._id_36C21C8D1AE71882 ) && level._id_07F5DBF6CA6A4468.events[eventref].priority < self._id_36C21C8D1AE71882 )
        return 0;

    return !scripts\engine\utility::array_contains_key( self._id_5A2916F745D4389A, eventref );
}

_id_D453707F6B8F2C6D()
{
    if ( !isdefined( self._id_5A2916F745D4389A ) )
    {
        self._id_5A2916F745D4389A = [];
        return;
    }

    _id_BF0609730FEBA76C = [];
    currenttime = gettime();

    foreach ( eventref, time in self._id_5A2916F745D4389A )
    {
        if ( time + level._id_07F5DBF6CA6A4468.events[eventref].cooldown < currenttime )
            _id_BF0609730FEBA76C[eventref] = time;
    }

    foreach ( eventref, time in _id_BF0609730FEBA76C )
        self._id_5A2916F745D4389A[eventref] = undefined;
}

_id_17C324959B47A339( event )
{
    foreach ( eventref, time in self._id_5A2916F745D4389A )
    {
        _id_E0CF0C68C0BFFA13 = time + level._id_07F5DBF6CA6A4468.events[eventref].timeout * 1000 + lookupsoundlength( level._id_07F5DBF6CA6A4468.events[eventref].alias, 1 );

        if ( _id_E0CF0C68C0BFFA13 && event.priority <= level._id_07F5DBF6CA6A4468.events[eventref].priority )
            return 0;
    }

    return 1;
}

isvalidplayer( player )
{
    return isdefined( player ) && isdefined( player.team ) && isdefined( player.origin ) && isalive( player ) && !isdefined( player.fauxdead ) && !istrue( player.delayedspawnedplayernotify );
}

_id_B0C21EABFFCE3FD4()
{
    _id_DEB4634FF3CFF859 = getdvarint( "dvar_57797986A6D60476", 4096 );
    _id_DEB4634FF3CFF859 = _id_DEB4634FF3CFF859 * _id_DEB4634FF3CFF859;
    _id_5CC086A792B04FCE = getdvarfloat( "dvar_32244D6ACF101808", 60.0 );
    _id_A93508890D2545D1 = [];

    foreach ( team in level.teamnamelist )
        _id_A93508890D2545D1[team] = [];

    for (;;)
    {
        validplayers = [];

        foreach ( player in level.players )
        {
            if ( isvalidplayer( player ) )
                validplayers[validplayers.size] = player;
        }

        _id_2B6807C7DF9A2B2D = scripts\engine\utility::_id_21A6A1C613B50A28( validplayers, 2500 );

        foreach ( player in validplayers )
        {
            if ( !isvalidplayer( player ) )
                continue;

            foreach ( _id_BAB0D10E51188531 in _id_2B6807C7DF9A2B2D scripts\engine\utility::_id_0DF633F460888A47( player.origin ) )
            {
                foreach ( _id_F7632B4589B2BED4 in _id_BAB0D10E51188531 )
                {
                    if ( !isvalidplayer( _id_F7632B4589B2BED4 ) )
                        continue;

                    if ( player.team != _id_F7632B4589B2BED4.team && distancesquared( player.origin, _id_F7632B4589B2BED4.origin ) < _id_DEB4634FF3CFF859 )
                    {
                        if ( !isdefined( _id_A93508890D2545D1[player.team][_id_F7632B4589B2BED4.team] ) )
                        {
                            _id_9793A81BC3BC19E9( "player_enemy_player_nearby", player.team );
                            _id_A93508890D2545D1[player.team][_id_F7632B4589B2BED4.team] = gettime();
                            continue;
                        }

                        timeelapsed = ( gettime() - _id_A93508890D2545D1[player.team][_id_F7632B4589B2BED4.team] ) / 1000;

                        if ( timeelapsed > _id_5CC086A792B04FCE )
                        {
                            _id_9793A81BC3BC19E9( "player_enemy_player_nearby", player.team );
                            _id_A93508890D2545D1[player.team][_id_F7632B4589B2BED4.team] = gettime();
                        }
                    }
                }
            }

            waitframe();
        }

        wait 3;
    }
}

_id_60FC087BC7DEAADC( val )
{
    self._id_36C21C8D1AE71882 = val;
}

_id_2C722A2EF9574E87( players, tag, priority )
{
    foreach ( player in players )
        player _id_3B64EB40368C1450::set( tag, "overlord_locked_priority", priority );
}

_id_70979C1EABF04180( players, tag )
{
    foreach ( player in players )
        player _id_3B64EB40368C1450::_id_462E6336A0DC84A8( tag, "overlord_locked_priority" );
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.laststand = scripts\mp\tweakables::gettweakablevalue( "player", "laststand" );
    setomnvar( "ui_last_stand_type", level.laststand );

    if ( !scripts\mp\utility\game::isteamreviveenabled() )
        return;

    level._id_1A52552BE0B92C9B = getdvarint( "dvar_CAAA48448A7F3558", 0 ) == 1;
    level._id_76F92A587185677C = getdvarint( "dvar_AA7DBB144027705F", 0 ) == 1;
    level.onteamchangedeath = ::onteamchangedeath;
    level.revivetriggers = [];
    level.numlifelimited = scripts\mp\utility\game::getgametypenumlives();
    level.numrevives = getdvarint( _func_2EF675C13CA1C4AF( "dvar_D98C82B5A26DC973", scripts\mp\utility\game::getgametype(), "_numRevives" ), 0 );
    level.disablespawncamera = 1;
    level._id_B961DD6C88E9A008 = getdvarint( "dvar_E6C178413AF5A02E", 1 ) == 1;
    level._id_5ECF502DC8C87BBB = getdvarfloat( "dvar_D3C774C21F7F21F7", 30 );

    if ( isusingmatchrulesdata() )
    {
        setdynamicdvar( "dvar_A8543004B97470B5", getmatchrulesdata( "commonOption", "teamReviveHealth" ) );
        setdynamicdvar( "dvar_AF65C14C83826CFA", getmatchrulesdata( "commonOption", "teamReviveTime" ) );
        setdynamicdvar( "dvar_E47F7F1502E4292E", getmatchrulesdata( "commonOption", "teamReviveTimeout" ) );
    }
    else
    {
        scripts\mp\utility\game::_id_65C4CAE95D0C833B( 40 );
        scripts\mp\utility\game::_id_C2BD90FF953A0CE4( 3 );
        scripts\mp\utility\game::_id_2597B9CD72447CB6( 0 );
    }

    level._id_EF6D59592ED101F3 = scripts\mp\utility\dvars::getoverridedvarintexceptmatchrulesvalues( _func_2EF675C13CA1C4AF( "dvar_D98C82B5A26DC973", scripts\mp\utility\game::getgametype(), "_teamReviveHealth" ), "dvar_A8543004B97470B5" );

    if ( level._id_EF6D59592ED101F3 > scripts\mp\tweakables::gettweakablevalue( "player", "maxhealth" ) )
        level._id_EF6D59592ED101F3 = scripts\mp\tweakables::gettweakablevalue( "player", "maxhealth" );

    level._id_04B91C5DB6B16C58 = scripts\mp\utility\dvars::getoverridedvarfloatexceptmatchrulesvalues( _func_2EF675C13CA1C4AF( "dvar_D98C82B5A26DC973", scripts\mp\utility\game::getgametype(), "_teamReviveTime" ), "dvar_AF65C14C83826CFA" );
    level._id_D25ED114F4EC6F9C = scripts\mp\utility\dvars::getoverridedvarfloatexceptmatchrulesvalues( _func_2EF675C13CA1C4AF( "dvar_D98C82B5A26DC973", scripts\mp\utility\game::getgametype(), "_teamReviveTimeout" ), "dvar_E47F7F1502E4292E" );

    if ( _id_68AC13D2D66B844A() )
    {
        level._id_C7D5CDE0CEA88517 = 0;
        level._id_36A249F46F4464A8 = 0;
        setomnvar( "ui_num_reviving_allies", 0 );
        setomnvar( "ui_num_reviving_axis", 0 );
    }

    scripts\engine\scriptable::scriptable_addusedcallbackbypart( "cyber_revive_icon", ::_id_301C4EC489F9BD39 );
    level thread onplayerconnect();
}

_id_692CDF5F87A8667B()
{
    return "cyber_revive_icon";
}

onplayerconnect()
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "connected", player );
        player.numrevives = level.numrevives;
    }
}

onteamchangedeath( player )
{

}

_id_5343ECB486B66BF1( ref, _id_CE174178F5680DFC )
{
    if ( !isdefined( level._id_423C8D4F74C71873 ) )
        level._id_423C8D4F74C71873 = [];

    if ( !isdefined( level._id_423C8D4F74C71873[ref] ) )
        level._id_423C8D4F74C71873[ref] = _id_CE174178F5680DFC;
}

_id_34727D1CDC47572E( ref )
{
    if ( isdefined( level._id_423C8D4F74C71873 ) && isdefined( level._id_423C8D4F74C71873[ref] ) )
        level._id_423C8D4F74C71873[ref] = undefined;
}

updaterevivetriggerspawnposition()
{
    if ( istrue( level._id_B961DD6C88E9A008 ) )
        return;

    self endon( "death_or_disconnect" );
    level endon( "game_ended" );

    if ( scripts\mp\utility\game::getsubgametype() == "dmz" )
        self waittill( "spawned_player" );
    else if ( !istrue( scripts\mp\flags::gameflag( "prematch_done" ) ) )
    {
        if ( scripts\mp\flags::gameflag( "infil_will_run" ) )
        {
            level scripts\engine\utility::waittill_any_3( "prematch_done", "start_mode_setup", "infil_started" );
            time = int( max( level.prematchperiodend - 5, 5 ) );
            wait( time );
        }
        else
            level scripts\engine\utility::waittill_any_3( "prematch_done", "start_mode_setup", "match_start_real_countdown" );
    }

    while ( scripts\mp\utility\player::isreallyalive( self ) || istrue( self._id_C4C8B91E0B16AA5E ) )
    {
        if ( isvalidrevivetriggerspawnposition() )
            setvalidreviveposition();

        wait 1;
    }
}

setvalidreviveposition()
{
    if ( istrue( level._id_B961DD6C88E9A008 ) )
        return;

    revivepos = self.origin;
    _id_E6874E9B453D7005 = undefined;

    if ( scripts\mp\utility\game::getsubgametype() == "dmz" )
        revivepos = self.origin;
    else if ( isbot( self ) )
    {
        _id_E6874E9B453D7005 = self getnearestnode();

        if ( !isdefined( _id_E6874E9B453D7005 ) )
            revivepos = self.origin;
        else
            revivepos = _id_E6874E9B453D7005.origin;
    }
    else
    {
        _id_E6874E9B453D7005 = self getnearestnode();

        if ( !isdefined( _id_E6874E9B453D7005 ) )
            _id_E6874E9B453D7005 = self.origin;
        else
            _id_E6874E9B453D7005 = _id_E6874E9B453D7005.origin;
    }

    if ( !isdefined( self.revivetriggerspawnposition ) )
        self.prevrevivepos = revivepos;
    else
        self.prevrevivepos = self.revivetriggerspawnposition;

    self.revivetriggerspawnposition = revivepos;
    self.nearestrevivenodepos = _id_E6874E9B453D7005;
    self._id_EB67C9FA9E738FFC = self _meth_E40102956C887F7C();
    stance = self getstance();

    if ( stance == "prone" )
        self.faux_spawn_stance = stance;
    else
        self.faux_spawn_stance = "crouch";
}

isvalidrevivetriggerspawnposition()
{
    spawnpos = self.origin + ( 0, 0, 3 );

    if ( istrue( self._id_C4C8B91E0B16AA5E ) || istrue( level._id_B961DD6C88E9A008 ) )
        return 1;

    if ( scripts\mp\utility\game::getsubgametype() == "dmz" )
        _id_C9CA2508E55C330A = 1;
    else
        _id_C9CA2508E55C330A = canspawn( spawnpos );

    if ( _id_C9CA2508E55C330A && ( self isonground() || self _meth_E40102956C887F7C() ) && !scripts\mp\outofbounds::isoob( self ) )
        return 1;
    else
        return 0;
}

spawnrevivetrigger( victim, attacker, _id_1202C39784B176E2, meansofdeath )
{
    level endon( "game_ended" );
    victim endon( "spawned" );
    victim endon( "disconnect" );
    _id_58EBB947ACC56BF2 = victim.origin;

    if ( isdefined( victim.revivecount ) && isdefined( level._id_37BAAB13A0CF00E3 ) && victim.revivecount >= level._id_37BAAB13A0CF00E3 )
        return;

    victim.pers["useNVG"] = 0;

    if ( victim isnightvisionon() )
        victim.pers["useNVG"] = 1;

    _id_94EC982AECF9A63C = !isdefined( attacker ) || !isdefined( attacker.classname ) || attacker.classname != "trigger_hurt";

    if ( istrue( _id_94EC982AECF9A63C ) && istrue( level.numlifelimited ) )
    {
        waitframe();
        _id_94EC982AECF9A63C = !scripts\mp\utility\player::isreallyalive( victim ) && !istrue( victim.inlaststand ) && !istrue( victim.switching_teams );

        if ( scripts\mp\utility\game::getsubgametype() == "dmz" )
            level thread _id_2CEDCC356F1B9FC8::brleaderdialogteam( "mission_teammate_down", victim.team, 1 );
        else
            _id_94EC982AECF9A63C = _id_94EC982AECF9A63C && !victim scripts\mp\playerlogic::mayspawn();
    }

    _id_8DD9F2EB8215A139 = level._id_D25ED114F4EC6F9C;

    if ( _id_8DD9F2EB8215A139 != 0 )
        victim._id_D25ED114F4EC6F9C = _id_8DD9F2EB8215A139;

    if ( victim scripts\mp\utility\player::isusingremote() )
    {
        victim.revivetriggerblockedinremote = 1;
        victim waittill( "stopped_using_remote" );
        victim.revivetriggeravailable = 1;
    }
    else
    {
        victim.revivetriggeravailable = 1;
        wait 3;
    }

    if ( istrue( victim._id_D25ED114F4EC6F9C ) )
        victim thread revivetimeoutthink( _id_8DD9F2EB8215A139 );

    if ( !_id_94EC982AECF9A63C )
        return;

    if ( isagent( victim ) || !isdefined( victim ) )
        return;
    else
    {
        if ( !isdefined( victim.revive_chosenclass ) )
            victim.revive_chosenclass = victim.class;

        struct = victim scripts\mp\class::loadout_getorbuildclassstruct( victim.revive_chosenclass );
        _id_1583B947947AD005 = victim scripts\mp\playerlogic::getplayerassets( struct );
        victim scripts\mp\playerlogic::loadplayerassets( [ _id_1583B947947AD005 ], 1 );
    }

    if ( isdefined( attacker ) && isagent( attacker ) )
        attacker = attacker.owner;

    usetime = level._id_04B91C5DB6B16C58;

    if ( istrue( level._id_B961DD6C88E9A008 ) )
        _id_58EBB947ACC56BF2 = victim.origin + ( 0, 0, level._id_5ECF502DC8C87BBB );
    else
    {
        if ( isdefined( victim.attacker ) && isdefined( victim.attacker.classname ) && victim.attacker.classname == "trigger_hurt" && isdefined( victim.nearestrevivenodepos ) )
            _id_58EBB947ACC56BF2 = victim.nearestrevivenodepos;
        else if ( isdefined( victim.revivetriggerspawnposition ) )
        {
            if ( !istrue( victim._id_EB67C9FA9E738FFC ) )
                _id_58EBB947ACC56BF2 = scripts\engine\utility::drop_to_ground( victim.revivetriggerspawnposition, 50, undefined, undefined, scripts\engine\trace::create_world_contents() ) + ( 0, 0, 8 );
        }
        else
        {
            node = victim getnearestnode();

            if ( isdefined( node ) )
                _id_58EBB947ACC56BF2 = node.origin;
            else
                _id_58EBB947ACC56BF2 = victim.origin;
        }

        _id_C56207BDA09B3A36 = scripts\engine\trace::create_playerclip_contents();
        trace = scripts\engine\trace::sphere_trace( _id_58EBB947ACC56BF2 + ( 0, 0, 10 ), _id_58EBB947ACC56BF2 + ( 0, 0, 30 ), 2.0, undefined, _id_C56207BDA09B3A36, 1 );
        _id_58EBB947ACC56BF2 = trace["position"];
    }

    icon = spawnscriptable( "cyber_revive_icon", _id_58EBB947ACC56BF2 );
    victim thread addtriggerdeathicon( icon, victim, victim.team );
    icon.victim = victim;
    icon.curorigin = _id_58EBB947ACC56BF2;
    icon._id_F99D56BCB582A8BA = victim;
    icon.owner = victim;
    icon.ownerteam = victim.team;
    icon.curprogress = 0;
    icon.id = "laststand_reviver";
    icon._id_DBC472744080C5D7 = 1;
    icon.interactteam = "friendly";
    icon.resetprogress = 0;
    icon.defaultusetime = usetime;
    icon.userate = 1;
    icon.exclusiveuse = 0;
    icon.exclusiveclaim = 1;
    icon.skiptouching = 1;
    icon.skipminimapids = 1;
    icon.useweapon = makeweapon( "teammate_revive_stim_mp" );

    if ( istrue( level._id_B961DD6C88E9A008 ) )
        icon scriptablesetparententity( victim, ( 0, 0, level._id_5ECF502DC8C87BBB ) );

    icon scripts\mp\gameobjects::setusetime( usetime );
    icon _id_9CDCE27AF3D1224C( victim.team, istrue( level.numrevives ) );
    icon.onbeginuse = ::revivetriggerholdonusebegin;
    icon.onuse = ::revivetriggerholdonuse;
    icon.onenduse = ::revivetriggerholdonuseend;
    icon._id_A03A7B21F00EAE66 = ::revivetriggeroncantuse;

    if ( isdefined( attacker ) )
    {
        icon.attacker = attacker;
        icon.attackerteam = attacker.team;
    }

    level.revivetriggers[victim.guid] = icon;
    victim.forcespawnorigin = _id_58EBB947ACC56BF2;
    victim.forcespawnangles = victim.angles;
    victim thread revivetriggerteamupdater( level.revivetriggers[victim.guid] );
    victim thread revivetriggerspectateteamupdater( level.revivetriggers[victim.guid] );
    level notify( _id_1202C39784B176E2, icon );
    level notify( "player_last_stand" );
    victim scripts\mp\utility\player::setbeingrevivedinternal( 0 );

    if ( isdefined( level.numlifelimited ) && level.numlifelimited )
        victim.statusicon = "hud_status_revive_wh";

    if ( isdefined( level._id_423C8D4F74C71873 ) )
    {
        foreach ( _id_CE174178F5680DFC in level._id_423C8D4F74C71873 )
        {
            if ( isdefined( _id_CE174178F5680DFC ) )
                icon [[ _id_CE174178F5680DFC ]]();
        }
    }
}

makereviveteamusable( team, _id_E4E6FA072697205D )
{
    thread _id_9CDCE27AF3D1224C( team, _id_E4E6FA072697205D );
}

_id_9CDCE27AF3D1224C( team, _id_E4E6FA072697205D, _id_6B8279C8C2796CD4 )
{
    foreach ( player in level.players )
    {
        if ( !_id_E4E6FA072697205D )
            player.numrevives = 1;

        if ( player.team == team && player.numrevives )
        {
            if ( isdefined( _id_6B8279C8C2796CD4 ) && player == _id_6B8279C8C2796CD4 )
                thread _id_3679AE96CC4F6706( _id_6B8279C8C2796CD4 );
            else
                self enablescriptableplayeruse( player );

            continue;
        }

        self disablescriptableplayeruse( player );
    }
}

_id_3679AE96CC4F6706( player )
{
    if ( !isdefined( self._id_F99D56BCB582A8BA ) )
        return;

    self._id_F99D56BCB582A8BA endon( "trigger_removed" );
    player endon( "disconnect" );
    self endon( "death" );
    level endon( "game_ended" );
    self disablescriptableplayeruse( player );
    wait( getdvarfloat( "dvar_5562E729A78ADFC4", 0.5 ) );
    self enablescriptableplayeruse( player );
}

revivetimeoutthink( _id_8DD9F2EB8215A139 )
{
    self endon( "death_or_disconnect" );
    self endon( "last_stand_finished" );
    self endon( "trigger_removed" );
    self endon( "spawned" );
    level endon( "game_ended" );
    self endon( "team_eliminated" );

    if ( _id_8DD9F2EB8215A139 == 0 )
        return;

    _id_1F97A44D1761C919::_id_D87D5DEB069BF8E5( "squad_revive", scripts\mp\utility\teams::_id_3D0F2343793D709B( self.team, self._id_0FF97225579DE16A, 1 ) );
    _id_687528866D09EB2F = level.revivetriggers[self.guid];
    level waittill( "new_trigger_spawned", _id_687528866D09EB2F );
    _id_ED7A934B078BD477 = _id_8DD9F2EB8215A139;

    for (;;)
    {
        waitframe();
        _id_3495C59984396C4D = _id_8DD9F2EB8215A139;

        if ( !istrue( scripts\mp\utility\player::getbeingrevivedinternal() ) )
        {
            _id_8DD9F2EB8215A139 = _id_8DD9F2EB8215A139 - level.framedurationseconds;
            self.timelefttospawnaction = _id_8DD9F2EB8215A139;
            self setclientomnvar( "ui_securing_progress", min( _id_8DD9F2EB8215A139 / _id_3495C59984396C4D, 0.01 ) );
            self setclientomnvar( "ui_securing", 0 );
        }

        if ( level.teamdata[self.team]["aliveCount"] > 0 )
        {
            time = int( gettime() + _id_8DD9F2EB8215A139 * 1000 );
            scripts\mp\utility\lower_message::setlowermessageomnvar( "spawn_revive_wait", time );
            _id_FD4841A123583725( self, self.team, time );
        }

        if ( istrue( self.eliminated ) )
        {
            thread removetrigger( self.guid, 1 );
            self notify( "trigger_removed" );
            self notify( "task_endon_trigger_removed" );
            return;
        }

        if ( _id_8DD9F2EB8215A139 <= level.framedurationseconds )
        {
            self notify( "last_stand_bleedout" );
            thread removetrigger( self.guid, 1, 1 );

            if ( scripts\mp\utility\game::getgametype() == "arm" || scripts\mp\utility\game::getgametype() == "risk" || scripts\cp_mp\utility\game_utility::_id_0BEFF479639E6508() && scripts\mp\utility\game::getsubgametype() == "dmz" )
            {
                scripts\mp\utility\lower_message::setlowermessageomnvar( "player_eliminated" );
                thread scripts\mp\playerlogic::removespawnmessageshortly( 3.0 );
            }
            else
            {
                scripts\mp\utility\lower_message::setlowermessageomnvar( "spawn_next_round" );
                thread scripts\mp\playerlogic::removespawnmessageshortly( 3.0 );
            }

            self notify( "trigger_removed" );
            self notify( "task_endon_trigger_removed" );
            break;
        }
        else if ( istrue( self.beingrallyrespawned ) )
        {
            thread removetrigger( self.guid, 1 );
            scripts\mp\utility\lower_message::setlowermessageomnvar( "clear_lower_msg" );
            self notify( "trigger_removed" );
            break;
        }
    }

    _id_1F97A44D1761C919::_id_D87D5DEB069BF8E5( "squad_mate_eliminated", scripts\mp\utility\teams::_id_3D0F2343793D709B( self.team, self._id_0FF97225579DE16A, 1 ) );
}

_id_FD4841A123583725( player, team, time, squadmemberindex )
{
    if ( isdefined( player._id_3F78C6A0862F9E25 ) && isdefined( team ) )
    {
        foreach ( _id_B2810E8D06E0A042 in level.teamdata[team]["players"] )
            _id_B2810E8D06E0A042 setclientomnvar( "ui_cyber_revive_timeout_squad_index_" + player._id_3F78C6A0862F9E25, time );
    }
}

removetrigger( guid, _id_3737240CEFE2C793, _id_EFC3F7A85CDEDB9B, team, squadmemberindex )
{
    if ( !isdefined( team ) )
        team = self.team;

    if ( isdefined( self.statusicon ) )
        self.statusicon = "";

    _id_FD4841A123583725( self, team, 0, squadmemberindex );
    self.revivetriggeravailable = undefined;

    if ( isdefined( level.revivetriggers[guid] ) )
    {
        scriptable = level.revivetriggers[guid];

        if ( isdefined( scriptable.objidnum ) )
            scripts\mp\objidpoolmanager::returnobjectiveid( level.revivetriggers[guid].objidnum );

        if ( isdefined( scriptable.reviver ) )
        {
            scriptable notify( "disabled" );
            waitframe();
        }

        level.revivetriggers[guid] freescriptable();
        level.revivetriggers[guid] = undefined;

        if ( isdefined( _id_EFC3F7A85CDEDB9B ) )
        {
            self.forcespawnorigin = undefined;
            self.forcespawnangles = undefined;
        }
    }
}

relocatetrigger( pos )
{
    org = pos + ( 0, 0, 5 );
    icon = level.revivetriggers[self.guid];
    icon.destination = org;
    icon.curorigin = org;
    icon.origin = org;
    self.forcespawnorigin = org;
}

revivetriggerteamupdater( _id_B25CA392892D7A80 )
{
    level endon( "game_ended" );
    self endon( "trigger_removed" );
    _id_B25CA392892D7A80 endon( "death" );
    team = self.team;
    squadmemberindex = self._id_3F78C6A0862F9E25;
    guid = self.guid;

    for (;;)
    {
        scripts\engine\utility::waittill_any_3( "disconnect", "joined_team", "spawned" );
        thread removetrigger( guid, 1, 1, team, squadmemberindex );
    }
}

revivetriggerspectateteamupdater( _id_B25CA392892D7A80 )
{
    level endon( "game_ended" );
    self endon( "trigger_removed" );
    _id_B25CA392892D7A80 endon( "death" );

    for (;;)
    {
        self waittill( "joined_spectators" );

        if ( self.team == "spectator" )
            thread removetrigger( self.guid, 1, 1 );
    }
}

onrevivepickupevent( event, victim )
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    while ( !isdefined( self.pers ) )
        waitframe();

    points = scripts\mp\rank::getscoreinfovalue( event );

    if ( isdefined( victim ) && istrue( victim.suicidespawndelay ) )
        points = 0;

    thread scripts\mp\utility\points::_id_0366980B6A8796AE( event, undefined, points );
}

lifelimitedallyonuse( player )
{
    if ( istrue( level.numrevives ) )
        player.numrevives--;

    if ( isdefined( player.pers["rescues"] ) )
    {
        player.pers["rescues"]++;
        player scripts\mp\persistence::statsetchild( "round", "rescues", player.pers["rescues"] );

        switch ( scripts\mp\utility\game::getgametype() )
        {
            case "ko":
            case "cyber":
            case "siege":
            case "sr":
                player scripts\mp\utility\stats::setextrascore1( player.pers["rescues"] );
        }
    }

    _id_4725E52B7C3AA25C = [];
    _id_4725E52B7C3AA25C[_id_4725E52B7C3AA25C.size] = self.victim;

    if ( isdefined( self.victim ) )
    {
        level notify( "tr_player_respawned", self.victim );
        self.victim notify( "tr_respawned", player );
        self.victim thread scripts\mp\rank::scoreeventpopup( "stat_AB2FB342759B6ABC" );
        self.victim scripts\mp\utility\dialog::leaderdialogonplayer( "revived" );

        if ( !level.gameended )
        {
            self.victim scripts\mp\utility\player::_freezecontrols( 0, undefined, "teamRevive" );

            if ( istrue( self.laststanding ) )
                scripts\mp\utility\stats::incpersstat( "clutchRevives", 1 );

            _id_E95E29F24BF04C1B( self.victim );
        }

        self.victim.revivetriggeravailable = undefined;
        self.victim.statusicon = "";
        scripts\cp_mp\challenges::onplayerteamrevive( player, self.victim );
    }

    player thread onrevivepickupevent( "stat_AB2FA142759B4C26", self.victim );

    if ( !isdefined( player.rescuedplayers ) )
        player.rescuedplayers = [];

    player.rescuedplayers[self.victim.guid] = 1;
    scripts\mp\events::revivedplayer( player, self.victim );
    self.victim scripts\mp\killstreaks\killstreaks::_id_B7492842AAD6FE82();
}

_id_E95E29F24BF04C1B( player )
{
    if ( istrue( level._id_76F92A587185677C ) && player _id_556B8AEAA691317F::_id_F0D1C9C39359EFFF() )
    {
        player thread respawn();
        waittillframeend;
        player thread scripts\mp\laststand::laststandthink();
    }
    else
    {
        player scripts\mp\utility\player::setbeingrevivedinternal( 0 );
        player thread respawn();
    }
}

lifelimitedenemyonuse( player )
{
    if ( isdefined( self.victim ) )
    {
        self.victim thread scripts\mp\hud_message::showsplash( "sr_eliminated" );
        level notify( "sr_player_eliminated", self.victim );
    }

    _id_4725E52B7C3AA25C = [];
    _id_4725E52B7C3AA25C[_id_4725E52B7C3AA25C.size] = self.victim;
    scripts\mp\hud_message::notifyteam( "sr_ally_eliminated", "sr_enemy_eliminated", self.victim.team, _id_4725E52B7C3AA25C );

    if ( isdefined( self.victim ) )
    {
        if ( !level.gameended )
        {
            self.victim scripts\mp\utility\lower_message::setlowermessageomnvar( "spawn_next_round" );
            self.victim thread scripts\mp\playerlogic::removespawnmessageshortly( 3.0 );
        }

        self.victim.revivetriggeravailable = undefined;
        self.victim.statusicon = "hud_status_dead";
    }

    if ( self.attacker != player )
        self.attacker thread onrevivepickupevent( "stat_E24741BA71BBB56B" );

    player thread onrevivepickupevent( "stat_E24741BA71BBB56B" );
    player scripts\mp\utility\dialog::leaderdialogonplayer( "kill_confirmed" );
}

respawn()
{
    self.alreadyaddedtoalivecount = 1;
    scripts\mp\playerlogic::incrementalivecount( self.team, 1 );

    if ( scripts\cp_mp\utility\game_utility::_id_0BEFF479639E6508() )
        _id_0A34750D17473C49::unmarkplayeraseliminated( self );

    thread scripts\mp\playerlogic::waittillcanspawnclient( 1 );
}

revivetriggerholdonuse( player )
{
    if ( isdefined( player.owner ) )
        player = player.owner;

    if ( player.pers["team"] == self.ownerteam )
    {
        if ( isdefined( self.victim.body ) && !istrue( self.victim._id_C4C8B91E0B16AA5E ) )
            self.victim.body delete();

        player scripts\mp\utility\stats::incpersstat( "denied", 1 );
        player scripts\mp\persistence::statsetchild( "round", "denied", player.pers["denied"] );

        if ( istrue( level.numlifelimited ) )
            lifelimitedallyonuse( player );
        else
            lifelimitedallyonuse( player );
    }
    else if ( level.numlifelimited )
    {
        lifelimitedenemyonuse( player );
        player scripts\mp\utility\lower_message::setlowermessageomnvar( "spawn_next_round" );
    }

    player setclientomnvar( "ui_securing", 0 );
    player setclientomnvar( "ui_securing_progress", 0.01 );
    player.ui_securing = undefined;
    self.victim notify( "trigger_removed" );
    self.victim thread removetrigger( self.victim.guid );
}

_id_301C4EC489F9BD39( instance, part, state, player, _id_A5B2C541413AA895, _id_CC38472E36BE1B61 )
{
    if ( !isdefined( instance ) || !isdefined( instance._id_F99D56BCB582A8BA ) || !isdefined( player ) || part != "cyber_revive_icon" )
        return;

    while ( !player isonground() && ( !istrue( self._id_DBC472744080C5D7 ) && player _meth_E40102956C887F7C() ) )
        return;

    instance thread scripts\mp\gameobjects::useholdloop( player );
}

revivetriggerholdonusebegin( player, _id_F5A0530CE8D587B1 )
{
    thread _id_877AEE1F2CDAE81C( player );
    _id_F99D56BCB582A8BA = self._id_F99D56BCB582A8BA;

    if ( !_id_F99D56BCB582A8BA _id_556B8AEAA691317F::_id_F0D1C9C39359EFFF() )
        player thread _id_C86CF00D5859CE10( _id_F99D56BCB582A8BA.origin );

    if ( _id_68AC13D2D66B844A() )
    {
        if ( _id_F99D56BCB582A8BA.team == "allies" )
        {
            level._id_C7D5CDE0CEA88517++;
            setomnvar( "ui_num_reviving_allies", level._id_C7D5CDE0CEA88517 );
        }
        else if ( _id_F99D56BCB582A8BA.team == "axis" )
        {
            level._id_36A249F46F4464A8++;
            setomnvar( "ui_num_reviving_axis", level._id_36A249F46F4464A8 );
        }
    }

    if ( player scripts\mp\utility\perk::_hasperk( "specialty_medic" ) )
        level.revivetriggers[_id_F99D56BCB582A8BA.guid].usetime = level.revivetriggers[_id_F99D56BCB582A8BA.guid].usetime * getdvarfloat( "dvar_6F08A22FD52E004C" );

    self setscriptablepartstate( "cyber_revive_icon", "unusable" );
    _id_F99D56BCB582A8BA.reviver = player;
    self.reviver = player;
    _id_F99D56BCB582A8BA scripts\mp\utility\player::setbeingrevivedinternal( 1 );

    if ( !_id_F99D56BCB582A8BA _id_556B8AEAA691317F::_id_F0D1C9C39359EFFF() )
        self.reviver setlaststandreviving( 1, 0 );
    else
        self.reviver setlaststandreviving( 1, 1 );

    level thread scripts\mp\battlechatter_mp::trysaylocalsound( player, "stat_572347275DFB41AB" );

    if ( !istrue( _id_F5A0530CE8D587B1 ) )
        player thread allowedwhilereviving( 0 );

    _id_F99D56BCB582A8BA scripts\mp\utility\player::printspawnmessage( "teamrevive::reviveTriggerHoldOnUseBegin() Killcam SKIPPED" );
    _id_F99D56BCB582A8BA notify( "abort_killcam" );
    _id_F99D56BCB582A8BA.cancelkillcam = 1;
    _id_F99D56BCB582A8BA scripts\mp\utility\player::_freezecontrols( 1, undefined, "teamRevive" );
    objidnum = level.revivetriggers[_id_F99D56BCB582A8BA.guid].objidnum;

    if ( isdefined( objidnum ) )
        scripts\mp\objidpoolmanager::update_objective_icon( objidnum, "hud_icon_cyber_reviving" );

    _id_379DE5A38F0E582A = getrevivecameradata( _id_F99D56BCB582A8BA, player );
    camerapos = _id_379DE5A38F0E582A.origin;
    cameraang = _id_379DE5A38F0E582A.angles;
    _id_F99D56BCB582A8BA.forcespawnangles = ( 0, cameraang[1], 0 );
    waitframe();
    _id_F99D56BCB582A8BA.forcespectatorclient = _id_F99D56BCB582A8BA getentitynumber();
    waitframe();
    cameraent = spawn( "script_model", camerapos );
    cameraent setmodel( "tag_origin" );
    cameraent.angles = cameraang;
    _id_F99D56BCB582A8BA.revivecameraent = cameraent;
    _id_F99D56BCB582A8BA cameralinkto( cameraent, "tag_origin", 1 );
    _id_F99D56BCB582A8BA thread revivecamerapullin();

    if ( scripts\cp_mp\utility\game_utility::isnightmap() )
        _id_F99D56BCB582A8BA thread applynvgforrevive();

    _id_F99D56BCB582A8BA thread runslamzoomonspawn();
}

_id_C86CF00D5859CE10( target )
{
    if ( !isdefined( self ) || !isplayer( self ) || !isdefined( target ) )
        return;

    if ( getdvarint( "dvar_72771711644C3F78", 1 ) == 0 )
        return;

    if ( isdefined( self._id_88F59C89F67E4385 ) )
        self._id_88F59C89F67E4385 delete();

    startangles = self getplayerangles();
    _id_B98CF035C97EDEE9 = vectortoangles( vectornormalize( target - self geteye() ) );
    _id_B98CF035C97EDEE9 = _id_B98CF035C97EDEE9 * ( 0, 1, 0 );
    _id_88F59C89F67E4385 = spawn( "script_model", self.origin );
    _id_88F59C89F67E4385.angles = startangles * ( 0, 1, 1 );
    _id_88F59C89F67E4385 setmodel( "tag_origin" );
    _id_88F59C89F67E4385 rotateto( _id_B98CF035C97EDEE9, 0.4, 0.05 );
    _id_88F59C89F67E4385 thread _id_7F0AEBB7AD935939( self );
    self._id_88F59C89F67E4385 = _id_88F59C89F67E4385;
    _id_11153410E53783B6 = target - self geteye();
    _id_AE9D358478054782 = ( target - self geteye() ) * ( 1, 1, 0 );
    _id_0EF1F66CEBC32A99 = scripts\engine\math::anglebetweenvectors( _id_AE9D358478054782, _id_11153410E53783B6 );
    mover = self getmovingplatformparent();

    if ( isdefined( mover ) )
        _id_88F59C89F67E4385 linkto( mover );

    self playerlinktodelta( _id_88F59C89F67E4385, "", 1.0, 30, 30, -1 * _id_0EF1F66CEBC32A99 + 30, _id_0EF1F66CEBC32A99 + 30, 0, 0, 0, 1, 0.0, 0.3, 0.3 );
}

_id_7F0AEBB7AD935939( player )
{
    self endon( "death" );
    player waittill( "disconnect" );

    if ( isdefined( self ) )
        self delete();
}

_id_00A3FFE1D08888C2()
{
    if ( !isdefined( self ) || !isplayer( self ) )
        return;

    if ( !isdefined( self._id_88F59C89F67E4385 ) )
        return;

    if ( getdvarint( "dvar_72771711644C3F78", 1 ) == 0 )
        return;

    self unlink();
    self._id_88F59C89F67E4385 delete();
}

_id_849E441CB5BE1BDA()
{
    self endon( "death_or_disconnect" );

    while ( !scripts\mp\utility\player::isreallyalive( self ) )
        waitframe();

    self notify( "revivedAlive" );
}

_id_877AEE1F2CDAE81C( player )
{
    if ( !isdefined( player._id_D969D13F6BCD0830 ) )
    {
        player._id_D969D13F6BCD0830 = spawn( "script_origin", player.origin );
        player._id_D969D13F6BCD0830 linkto( player );
        player._id_D969D13F6BCD0830 playloopsound( "br_reviver_use_lp" );
        player scripts\engine\utility::waittill_any_3( "stop_revive_sfx", "enter_live_ragdoll", "death_or_disconnect" );
        player._id_D969D13F6BCD0830 stoploopsound( "br_reviver_use_lp", 1 );
        player._id_D969D13F6BCD0830 playsound( "br_reviver_use_end" );
        player._id_D969D13F6BCD0830 delete();
    }
}

revivetriggerholdonuseend( team, player, success, _id_F5A0530CE8D587B1 )
{
    player notify( "stop_revive_sfx" );
    self.reviver setlaststandreviving( 0 );
    self.reviver = undefined;
    player _id_00A3FFE1D08888C2();

    if ( isdefined( self._id_F99D56BCB582A8BA ) && isdefined( level.revivetriggers ) && isdefined( level.revivetriggers[self._id_F99D56BCB582A8BA.guid] ) )
    {
        _id_F99D56BCB582A8BA = self._id_F99D56BCB582A8BA;

        if ( _id_68AC13D2D66B844A() )
        {
            if ( _id_F99D56BCB582A8BA.team == "allies" )
            {
                level._id_C7D5CDE0CEA88517--;
                setomnvar( "ui_num_reviving_allies", level._id_C7D5CDE0CEA88517 );
            }
            else if ( _id_F99D56BCB582A8BA.team == "axis" )
            {
                level._id_36A249F46F4464A8--;
                setomnvar( "ui_num_reviving_axis", level._id_36A249F46F4464A8 );
            }
        }

        defaultusetime = level.revivetriggers[_id_F99D56BCB582A8BA.guid].defaultusetime;
        level.revivetriggers[_id_F99D56BCB582A8BA.guid] scripts\mp\gameobjects::setusetime( defaultusetime );
        _id_F99D56BCB582A8BA.forcespectatorclient = -1;

        if ( success )
        {
            if ( !isdefined( _id_F99D56BCB582A8BA.revivecount ) )
                _id_F99D56BCB582A8BA.revivecount = 1;
            else
                _id_F99D56BCB582A8BA.revivecount++;

            if ( isdefined( level._id_37BAAB13A0CF00E3 ) )
                _id_F99D56BCB582A8BA scripts\mp\hud_message::showerrormessage( "MP/NUM_REVIVES_LEFT", level._id_37BAAB13A0CF00E3 - _id_F99D56BCB582A8BA.revivecount );

            _id_A776F097EB36E500 = scripts\mp\utility\dvars::getwatcheddvar( "teamReviveHealth" );
            scripts\mp\analyticslog::logevent_playerhealed( _id_F99D56BCB582A8BA, _id_A776F097EB36E500, player );

            if ( isdefined( level._id_36827F5D10328424 ) && scripts\cp_mp\utility\game_utility::_id_0BEFF479639E6508() )
            {
                _id_F99D56BCB582A8BA thread _id_849E441CB5BE1BDA();
                _id_F99D56BCB582A8BA thread [[ level._id_36827F5D10328424 ]]();
            }

            _id_F99D56BCB582A8BA playsoundtoteam( "npc_breath_revive", _id_F99D56BCB582A8BA.team, _id_F99D56BCB582A8BA, _id_F99D56BCB582A8BA );
            _id_F99D56BCB582A8BA thread _id_7DCE7A3AF5B0CE26();
            _id_F99D56BCB582A8BA setclientomnvar( "ui_reviver_id", -1 );
            _id_F99D56BCB582A8BA setclientomnvar( "ui_securing", 0 );
        }
        else
        {
            _id_F99D56BCB582A8BA scripts\mp\utility\player::setbeingrevivedinternal( 0 );
            level.revivetriggers[_id_F99D56BCB582A8BA.guid] setscriptablepartstate( "cyber_revive_icon", "usable" );
            _id_9CDCE27AF3D1224C( _id_F99D56BCB582A8BA.team, istrue( level.numrevives ), player );
            objidnum = level.revivetriggers[_id_F99D56BCB582A8BA.guid].objidnum;

            if ( isdefined( objidnum ) )
            {
                scripts\mp\objidpoolmanager::objective_show_progress( objidnum, 0 );
                scripts\mp\objidpoolmanager::update_objective_icon( objidnum, "hud_icon_revive_cyber" );
            }

            _id_F99D56BCB582A8BA scripts\mp\utility\player::_freezecontrols( 0, undefined, "teamRevive" );
            _id_F99D56BCB582A8BA scripts\mp\utility\player::updatesessionstate( "spectator" );

            if ( isdefined( _id_F99D56BCB582A8BA.revivecameraent ) )
            {
                _id_F99D56BCB582A8BA cameraunlink();
                _id_F99D56BCB582A8BA.revivecameraent delete();
            }

            if ( isdefined( _id_F99D56BCB582A8BA.team ) && _id_F99D56BCB582A8BA.team != "spectator" )
            {
                _id_F99D56BCB582A8BA allowspectateteam( _id_F99D56BCB582A8BA.team, 1 );

                foreach ( _id_F90358454413407F in level.teamnamelist )
                {
                    if ( _id_F90358454413407F != _id_F99D56BCB582A8BA.team )
                        _id_F99D56BCB582A8BA allowspectateteam( _id_F90358454413407F, 0 );
                }

                _id_F99D56BCB582A8BA spectateclientnum( player getentitynumber() );
            }
        }
    }

    if ( !istrue( _id_F5A0530CE8D587B1 ) )
        player thread allowedwhilereviving( 1 );

    if ( isplayer( player ) )
    {
        player setclientomnvar( "ui_securing", 0 );
        player setclientomnvar( "ui_securing_progress", 0.01 );
        player.ui_securing = undefined;
    }

    if ( success )
    {
        player scripts\mp\utility\stats::incpersstat( "revives", 1 );
        player scripts\mp\codcasterclientmatchdata::_id_48544E365F4F5648( 17, 1 );

        if ( istrue( player.laststanding ) )
            player scripts\mp\utility\stats::incpersstat( "clutchRevives", 1 );
    }
}

revivetriggeroncantuse( player )
{
    player scripts\mp\hud_message::showerrormessage( "MP/PLAYER_ALREADY_BEING_REVIVED" );
}

getrevivecameradata( _id_F99D56BCB582A8BA, reviver )
{
    _id_7E773EA54FFA645F = level.revivetriggers[_id_F99D56BCB582A8BA.guid].curorigin;
    _id_530640BC408681DD = _id_7E773EA54FFA645F;
    fwd = vectornormalize( reviver.origin - _id_530640BC408681DD );
    radius = 2;
    _id_F03302C066639995 = 30;
    _id_519305604D8E28E4 = 360 / _id_F03302C066639995;
    _id_40088284FA4B02C0 = 1;
    _id_AD3FD9A25605F892 = 1;
    _id_C030A8A33647FEEE = 200;
    _id_D4EBDDC5067723C4 = generateaxisanglesfromforwardvector( fwd, ( 0, 0, 1 ) );
    _id_634E1A5FDA766CAA = 0;
    _id_E95D8B067BE88B21 = undefined;
    passed = 0;
    _id_12B614F64A9BA025 = _id_530640BC408681DD;
    _id_ABB06648E9DB3FFE = _id_D4EBDDC5067723C4;

    while ( _id_40088284FA4B02C0 < _id_519305604D8E28E4 )
    {
        if ( _id_634E1A5FDA766CAA )
        {
            _id_634E1A5FDA766CAA = 0;
            _id_E95D8B067BE88B21 = anglestoforward( _id_D4EBDDC5067723C4 );
        }
        else
        {
            _id_E95D8B067BE88B21 = anglestoforward( _id_D4EBDDC5067723C4 + ( 0, scripts\engine\utility::ter_op( _id_AD3FD9A25605F892, _id_F03302C066639995, _id_F03302C066639995 * -1 ) * _id_40088284FA4B02C0, 0 ) );
            _id_AD3FD9A25605F892 = !_id_AD3FD9A25605F892;

            if ( _id_AD3FD9A25605F892 == 1 )
                _id_40088284FA4B02C0++;
        }

        startpos = _id_530640BC408681DD + ( 0, 0, 12 );
        endpos = _id_530640BC408681DD + _id_E95D8B067BE88B21 * _id_C030A8A33647FEEE + ( 0, 0, 100 );
        _id_2FC7B90001702E5C = [];
        _id_2FC7B90001702E5C[0] = _id_F99D56BCB582A8BA;
        _id_2FC7B90001702E5C[1] = reviver;
        trace = scripts\engine\trace::sphere_trace( startpos, endpos, radius, _id_2FC7B90001702E5C );
        _id_47D735016BAE708E = 30;
        _id_41302AFFD456FCB3 = trace["position"];
        _id_9406FD672E3B3B43 = 0;

        if ( trace["fraction"] < 1 )
        {
            _id_41302AFFD456FCB3 = _id_41302AFFD456FCB3 + _id_E95D8B067BE88B21 * radius;
            _id_9406FD672E3B3B43 = 1;
        }

        if ( trace["fraction"] > 0.99 )
        {
            _id_12B614F64A9BA025 = _id_41302AFFD456FCB3;
            _id_ABB06648E9DB3FFE = vectortoangles( _id_E95D8B067BE88B21 );
            break;
        }
    }

    _id_379DE5A38F0E582A = spawnstruct();
    _id_379DE5A38F0E582A.origin = _id_12B614F64A9BA025;
    _id_3FE9488A68F80E54 = vectornormalize( _id_530640BC408681DD - _id_12B614F64A9BA025 );
    _id_379DE5A38F0E582A.angles = vectortoangles( _id_3FE9488A68F80E54 );
    return _id_379DE5A38F0E582A;
}

revivecamerapullin( cameraent )
{
    _id_522749E2B770767F = self.revivecameraent.origin + anglestoforward( self.revivecameraent.angles ) * 3.0;
    _id_8569CBED694EC300 = self.revivecameraent.origin + anglestoforward( self.revivecameraent.angles ) * 50.0;
    _id_BEAF249485A20BB7 = scripts\engine\trace::sphere_trace( _id_522749E2B770767F, _id_8569CBED694EC300, 2.0, undefined )["position"];
    duration = level.revivetriggers[self.guid].usetime / 1000;
    self.revivecameraent moveto( _id_BEAF249485A20BB7, duration, duration * 0.3, duration * 0.3 );
}

applynvgforrevive()
{
    self notify( "stopNVGOnRevive" );
    self endon( "stopNVGOnRevive" );
    wait 1;
    self nightvisionviewon( 1 );
}

deleteonspawn( cameraent )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self waittill( "spawned_player" );
    cameraent delete();
}

allowedwhilereviving( _id_BD138DE99B3B3507 )
{
    if ( !_id_BD138DE99B3B3507 )
    {
        _id_3B64EB40368C1450::set( "reviving", "melee", 0 );
        _id_3B64EB40368C1450::set( "reviving", "allow_jump", 0 );
        _id_3B64EB40368C1450::set( "reviving", "gesture", 0 );
        _id_3B64EB40368C1450::set( "reviving", "offhand_weapons", 0 );
    }
    else
        _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "reviving" );
}

movecameratorevivepos( _id_9813182985677B23, finalangles, player )
{
    movetime = 1.0;
    _id_CC5BC42930ABBC4F = 1.0;
    self moveto( _id_9813182985677B23, 1.0, 0.5, 0.5 );
    finalangles = ( -9.5111, player.angles[1], 0 );
    self rotateto( finalangles, 1.0, 0.5, 0.5 );
}

_id_7DCE7A3AF5B0CE26()
{
    self endon( "death_or_disconnect" );
    wait 0.15;
    self.deathsdoorsfx = 0;
    self stoplocalsound( "deaths_door_in" );
    self playlocalsound( "deaths_door_out" );
    self clearsoundsubmix( "deaths_door_mp" );
    self setentitysoundcontext( "atmosphere", "" );
    self playlocalsound( scripts\engine\utility::ter_op( scripts\mp\utility\player::isfemale(), "Fem_breathing_better", "breathing_better" ) );
    self enableplayerbreathsystem( 1 );
}

addtriggerdeathicon( icon, _id_FDF2150B2EE00667, team )
{
    if ( !level.teambased )
        return;

    _id_FDF2150B2EE00667 endon( "spawned_player" );
    _id_FDF2150B2EE00667 endon( "disconnect" );
    wait 0.05;
    scripts\mp\utility\script::waittillslowprocessallowed();

    if ( getdvar( "dvar_FCC82BC32588EFCE" ) == "0" )
        return;

    self notify( "revived_death_icon" );

    if ( !isdefined( team ) || team == "spectator" )
        return;

    objid = icon scripts\mp\objidpoolmanager::createobjective( "hud_icon_revive_cyber" );
    scripts\mp\objidpoolmanager::update_objective_position( objid, icon.origin );
    scripts\mp\objidpoolmanager::update_objective_state( objid, "current" );
    scripts\mp\objidpoolmanager::objective_playermask_hidefromall( objid );
    scripts\mp\objidpoolmanager::objective_teammask_single( objid, team );
    scripts\mp\objidpoolmanager::_id_D7E3C4A08682C1B9( objid, 1 );
    scripts\mp\objidpoolmanager::objective_set_play_intro( objid, 0 );
    scripts\mp\objidpoolmanager::objective_set_play_outro( objid, 0 );
    scripts\mp\objidpoolmanager::objective_show_progress( objid, 0 );
    scripts\mp\objidpoolmanager::_id_79A1A16DE6B22B2D( objid, 13 );
    objective_sethideelevation( objid, 1 );
    icon.objidnum = objid;

    if ( istrue( level._id_B961DD6C88E9A008 ) )
    {
        objective_onentity( objid, self );
        objective_setzoffset( objid, level._id_5ECF502DC8C87BBB );
    }
}

runslamzoomonspawn()
{
    self notify( "end_spawn_zoom" );
    self endon( "end_spawn_zoom" );
    self endon( "disconnect" );
    level endon( "game_ended" );
    self waittill( "spawned_player" );
    targetpos = self geteye();
    targetangles = self.angles;
    self cameralinkto( self.revivecameraent, "tag_origin", 1 );
    self.revivecameraent moveto( targetpos, 0.25, 0.1, 0.1 );
    self.revivecameraent rotateto( targetangles, 0.25, 0.1, 0.1 );
    wait 0.25;
    self visionsetnakedforplayer( "", 0.1 );
    self cameraunlink();
    self.revivecameraent delete();
    wait 0.5;
    level thread scripts\mp\battlechatter_mp::trysaylocalsound( self, "stat_1F1F4FE800E03B33", undefined, 1.25 );
}

playslamzoomflash()
{
    overlay = newclienthudelem( self );
    overlay.x = 0;
    overlay.y = 0;
    overlay.alignx = "left";
    overlay.aligny = "top";
    overlay.sort = 1;
    overlay.horzalign = "fullscreen";
    overlay.vertalign = "fullscreen";
    overlay.alpha = 1;
    overlay.foreground = 1;
    overlay setshader( "white", 640, 480 );
    overlay fadeovertime( 0.4 );
    overlay.alpha = 0.0;
    wait 0.4;
    overlay destroy();
}

cleanuprevivetriggericons()
{
    foreach ( trigger in level.revivetriggers )
        trigger freescriptable();

    level.revivetriggers = undefined;
}

updatetimerwaitforjoined()
{

}

assigntimervisibleteam( teams )
{
    self.interactteams = teams;

    foreach ( player in level.players )
        applytimervisibleteam( player );
}

applytimervisibleteam( player )
{
    if ( player.team == self.ownerteam )
        self.visuals[0] showtoplayer( player );
    else
        self.visuals[0] hidefromplayer( player );
}

waitrespawnbutton()
{
    self endon( "disconnect" );
    self endon( "started_spawnPlayer" );
    self endon( "team_eliminated" );
    _id_DDF8E09B2A81DD37 = 0;

    for (;;)
    {
        if ( self usebuttonpressed() )
        {
            while ( self usebuttonpressed() )
            {
                _id_DDF8E09B2A81DD37 = _id_DDF8E09B2A81DD37 + 0.05;

                if ( _id_DDF8E09B2A81DD37 >= 1.0 )
                    break;

                wait 0.05;
            }

            if ( _id_DDF8E09B2A81DD37 >= 0.5 )
                _id_DDF8E09B2A81DD37 = _id_DDF8E09B2A81DD37 + 0.05;
        }

        _id_DDF8E09B2A81DD37 = 0;
        wait 0.05;
    }
}

_id_68AC13D2D66B844A()
{
    switch ( scripts\mp\utility\game::getgametype() )
    {
        case "rescue":
        case "ko":
        case "cyber":
        case "sd":
            return 1;
        default:
            return 0;
    }

    return 0;
}

_id_855B084A3F053964( pos, _id_7136191B4291791A )
{
    _id_114AB88507847C50 = undefined;
    _id_42CA41C7DADAE0C0 = undefined;

    if ( !isdefined( level.revivetriggers ) )
        return undefined;

    foreach ( _id_B25CA392892D7A80 in level.revivetriggers )
    {
        if ( !isdefined( _id_B25CA392892D7A80._id_F99D56BCB582A8BA ) )
            continue;

        if ( _id_B25CA392892D7A80._id_F99D56BCB582A8BA.team != self.team )
            continue;

        if ( !_id_B25CA392892D7A80 _id_BB57ED6218A82D1C() )
            continue;

        dist = distance2d( pos, _id_B25CA392892D7A80.origin );

        if ( isdefined( _id_7136191B4291791A ) && dist > _id_7136191B4291791A )
            continue;

        if ( !isdefined( _id_114AB88507847C50 ) )
        {
            _id_114AB88507847C50 = _id_B25CA392892D7A80;
            _id_42CA41C7DADAE0C0 = dist;
            continue;
        }

        if ( dist < _id_42CA41C7DADAE0C0 )
        {
            _id_114AB88507847C50 = _id_B25CA392892D7A80;
            _id_42CA41C7DADAE0C0 = dist;
        }
    }

    return _id_114AB88507847C50;
}

_id_15933E1583288208()
{
    if ( !isdefined( level.revivetriggers ) )
        return undefined;

    foreach ( _id_B25CA392892D7A80 in level.revivetriggers )
    {
        if ( _id_B25CA392892D7A80.owner.team != self.team )
            continue;

        if ( _id_B25CA392892D7A80.owner == self )
            return _id_B25CA392892D7A80;
    }

    return undefined;
}

_id_BB57ED6218A82D1C()
{
    return self getscriptablepartstate( "cyber_revive_icon" ) == "usable";
}

_id_9341574D596E9D36( player, contents, _id_46A3A8565AC0C17C, _id_846A20D8E6F30B8E, _id_04F6CDE716E0C3D7, _id_6FB67C8525B1D79E, _id_3EF503345DC57957, _id_86B32AFF94B5714E, _id_275F4441AB7920C8, _id_094333580DC2B96B, _id_BF23A60678978C19, _id_C299C08E4B8A8E56, _id_A0E9FEF038504BD0 )
{
    corpse = spawnscriptable( "cyber_revive_pillage", player.origin + ( 0, 0, level._id_5ECF502DC8C87BBB ) );
    corpse scriptablesetparententity( player, ( 0, 0, level._id_5ECF502DC8C87BBB ) );
    _id_7E52B56769FA7774::registerscriptableinstance( corpse );
    corpse.contents = contents;
    corpse._id_46A3A8565AC0C17C = _id_46A3A8565AC0C17C;
    corpse._id_846A20D8E6F30B8E = _id_846A20D8E6F30B8E;
    corpse.owner = player;
    corpse._id_04F6CDE716E0C3D7 = _id_04F6CDE716E0C3D7;
    corpse._id_6FB67C8525B1D79E = _id_6FB67C8525B1D79E;
    corpse._id_3EF503345DC57957 = _id_3EF503345DC57957;
    corpse._id_275F4441AB7920C8 = _id_275F4441AB7920C8;
    corpse._id_86B32AFF94B5714E = _id_86B32AFF94B5714E;
    corpse._id_342175A1B9F9067E = _id_2D9D24F7C63AC143::_id_B13E35608B336D65( player );

    if ( isdefined( _id_BF23A60678978C19 ) )
        corpse._id_BF23A60678978C19 = _id_BF23A60678978C19;

    if ( isdefined( _id_C299C08E4B8A8E56 ) && isdefined( _id_A0E9FEF038504BD0 ) )
    {
        corpse._id_A06E7128C001851D = _id_C299C08E4B8A8E56;
        corpse._id_A0E9FEF038504BD0 = _id_A0E9FEF038504BD0;
    }

    if ( istrue( _id_094333580DC2B96B ) )
        _id_4480C6CE37B2BDF3::_id_22E6CB66CCB56285( corpse, player );

    foreach ( _id_B2810E8D06E0A042 in scripts\mp\utility\teams::getteamdata( player.team, "players" ) )
        corpse disablescriptableplayeruse( _id_B2810E8D06E0A042 );

    player._id_6A4360DCF2A8F3D4 = corpse;
    level thread _id_D5C44AF2144B00B3( player, player.attached_bag, corpse );
}

_id_D5C44AF2144B00B3( _id_F99D56BCB582A8BA, model, corpse )
{
    _id_F99D56BCB582A8BA endon( "revivedAlive" );
    corpse endon( "death" );
    _id_F99D56BCB582A8BA scripts\engine\utility::waittill_any_2( "disconnect", "trigger_removed" );

    if ( !isdefined( corpse ) )
        return;

    corpse scriptableclearparententity();
    corpse.origin = scripts\engine\utility::drop_to_ground( corpse.origin );
    _id_45253047E760F6A6 = corpse getscriptablepartstate( "body" );
    corpse setscriptablepartstate( "body", scripts\engine\utility::_id_53C4C53197386572( model, "parts_backpack_inventory_small" ) );

    foreach ( player in level.players )
        corpse enablescriptableplayeruse( player );

    waitframe();
    corpse setscriptablepartstate( "body", _id_45253047E760F6A6 );
}

_id_5B55070C02328EA7( corpse )
{
    return isdefined( corpse ) && isdefined( corpse.type ) && corpse.type == "cyber_revive_pillage";
}

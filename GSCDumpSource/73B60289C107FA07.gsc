// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\common\anim::initanim();

    if ( !isdefined( level.scr_viewmodelanim ) )
        level.scr_viewmodelanim = [];

    if ( !isdefined( level.scr_eventanim ) )
        level.scr_eventanim = [];

    anim.callbacks["PlaySoundAtViewHeight"] = ::play_sound_at_viewheight;
    anim.callbacks["TeleportEnt"] = ::teleport_entity;
    anim.callbacks["ShouldDoAnim"] = ::should_do_anim;
    anim.callbacks["DoAnimation"] = ::do_animation;
    anim.callbacks["DoFacialAnim"] = ::do_facial_anim;
    anim.callbacks["AnimHandleNotetrack"] = ::mp_anim_handle_notetrack;
    anim.callbacks["EntityHandleNotetrack"] = ::mp_entity_handle_notetrack;
    anim.callbacks["AIAnimFirstFrame"] = undefined;
}

play_sound_at_viewheight( aliasname, _id_B1A4E9FA39B3858A, _id_A68ADBD3EEFE9282 )
{
    self playsound( aliasname );
}

should_do_anim()
{
    return 1;
}

teleport_entity( origin, angles )
{
    if ( self.code_classname == "script_vehicle" )
    {
        self vehicle_teleport( origin, angles );
        self dontinterpolate();
    }
    else if ( isplayer( self ) )
    {
        self setorigin( origin );
        self setplayerangles( angles );
    }
    else
    {
        self.origin = origin;
        self.angles = angles;
        self dontinterpolate();
    }
}

do_facial_anim( _id_63A1F320F9C2DDF5, _id_09AC73A1996D2DAE, _id_83D9EFDEA230AF8E, anime, animname, dialogue )
{
    return 0;
}

do_animation( org, angles, animname, anime, _id_314C4455B996B224, idleanim, _id_43E50904D011917E )
{
    animation = undefined;

    if ( isdefined( idleanim ) && !isagent( self ) )
        animation = level.scr_anim[animname][anime][idleanim];
    else
        animation = level.scr_anim[animname][anime];

    goaltime = scripts\common\anim::anim_get_goal_time( animname, anime );
    scripts\common\anim::last_anim_time_check();

    if ( !isdefined( idleanim ) )
        self._lastanime = anime;

    if ( self.code_classname == "misc_turret" && !isdefined( idleanim ) )
        self setflaggedanim( _id_314C4455B996B224, animation, 1, goaltime );
    else
    {
        if ( self.code_classname == "script_vehicle" )
            self vehicleplayanim( animation );

        root = undefined;

        if ( isdefined( self.anim_getrootfunc ) )
            root = [[ self.anim_getrootfunc ]]();

        if ( isagent( self ) )
            thread scripts\asm\shared\mp\utility::_id_577D8ABFF6067C23( anime, _id_314C4455B996B224, org, angles );
        else
            self animscripted( _id_314C4455B996B224, org, angles, animation, undefined, root, goaltime );
    }

    thread scripts\common\notetrack::start_notetrack_wait( self, _id_314C4455B996B224, anime, animname, animation );
    return getanimlength( animation );
}

mp_anim_handle_notetrack( scr_notetrack, guy, _id_966821FC90C3CA9D, _id_F20E2B3859E05E9F )
{
    scripts\common\notetrack::anim_handle_notetrack( scr_notetrack, guy, _id_966821FC90C3CA9D, _id_F20E2B3859E05E9F );

    if ( isdefined( scr_notetrack["flag"] ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "gameflagSet" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "gameflagSet" ) ]]( scr_notetrack["flag"] );
    }

    if ( isdefined( scr_notetrack["flag_clear"] ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "gameflagClear" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "gameflagClear" ) ]]( scr_notetrack["flag_clear"] );
    }

    if ( isdefined( scr_notetrack["sound"] ) )
    {
        _id_A38DC1947E93B08D = undefined;

        if ( !isdefined( scr_notetrack["sound_stays_death"] ) )
            _id_A38DC1947E93B08D = 1;

        tag = undefined;

        if ( isdefined( scr_notetrack["sound_on_tag"] ) )
            tag = scr_notetrack["sound_on_tag"];

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "gameflagClear" ) )
            guy thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "sound", "playSoundOnTag" ) ]]( scr_notetrack["sound"], tag );
    }
}

mp_entity_handle_notetrack( guy, notetrack )
{
    if ( guy mp_notetrack_prefix_handler( notetrack ) )
        return;
}

mp_notetrack_prefix_handler( notetrack )
{
    _id_DEC9BCCE93873125 = getsubstr( notetrack, 0, 3 );

    if ( _id_DEC9BCCE93873125 == "as_" )
    {
        alias = getsubstr( notetrack, 3 );

        if ( isdefined( self.anim_playsound_func ) )
            self thread [[ self.anim_playsound_func ]]( alias );

        return 1;
    }

    if ( _id_DEC9BCCE93873125 == "vm_" )
    {
        animation = getsubstr( notetrack, 3 );

        if ( isdefined( self.anim_playvm_func ) )
            self thread [[ self.anim_playvm_func ]]( animation );

        return 1;
    }

    if ( _id_DEC9BCCE93873125 == "ws_" )
    {
        state = getsubstr( notetrack, 3 );

        if ( isdefined( self.weapon_state_func ) )
            self thread [[ self.weapon_state_func ]]( state );

        return 1;
    }

    if ( _id_DEC9BCCE93873125 == "cm_" )
    {
        _id_D8958445ED7AB829 = getsubstr( notetrack, 3 );

        if ( isdefined( self.cinematic_motion_override ) )
            self thread [[ self.cinematic_motion_override ]]( _id_D8958445ED7AB829 );

        return 1;
    }

    if ( _id_DEC9BCCE93873125 == "df_" )
    {
        _id_02C300A0C859AA22 = getsubstr( notetrack, 3 );

        if ( isdefined( self.dof_func ) )
            self thread [[ self.dof_func ]]( _id_02C300A0C859AA22 );

        return 1;
    }

    return 0;
}

anim_player_solo( player, player_rig, anime, tag, _id_9E8A16D47A03007A, _id_8E3B87ACAAD3DE58 )
{
    self endon( "death" );
    players[0] = player;
    player_rigs[0] = player_rig;

    if ( !isdefined( _id_9E8A16D47A03007A ) )
        _id_9E8A16D47A03007A = 0;

    anim_player( players, player_rigs, anime, tag, _id_9E8A16D47A03007A, _id_8E3B87ACAAD3DE58 );
}

anim_player( players, player_rigs, anime, tag, _id_9E8A16D47A03007A, _id_8E3B87ACAAD3DE58 )
{
    if ( !isdefined( _id_9E8A16D47A03007A ) )
        _id_9E8A16D47A03007A = 0;

    anim_player_internal( players, player_rigs, anime, tag, _id_9E8A16D47A03007A, _id_8E3B87ACAAD3DE58 );
}

anim_player_internal( players, player_rigs, anime, tag, _id_9E8A16D47A03007A, _id_8E3B87ACAAD3DE58 )
{
    duration = 0;

    foreach ( player in players )
    {
        animname = undefined;

        if ( isdefined( _id_8E3B87ACAAD3DE58 ) )
            animname = _id_8E3B87ACAAD3DE58;
        else
            animname = player.animname;

        if ( isdefined( level.scr_eventanim[animname] ) && isdefined( level.scr_eventanim[animname][anime] ) )
            duration = player playanimscriptsceneevent( "scripted_scene", level.scr_eventanim[animname][anime] );

        if ( isdefined( level.scr_viewmodelanim[animname] ) && isdefined( level.scr_viewmodelanim[animname][anime] ) && !istrue( player.blockviewmodelanim ) )
            player playviewmodelanim( level.scr_viewmodelanim[animname][anime] );
    }

    if ( isdefined( player_rigs ) )
        scripts\common\anim::anim_single( player_rigs, anime, tag, _id_9E8A16D47A03007A, _id_8E3B87ACAAD3DE58 );
}

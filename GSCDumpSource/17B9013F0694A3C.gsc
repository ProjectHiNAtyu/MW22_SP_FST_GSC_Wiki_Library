// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    enabled = _id_3ACF1C0EBAF602F2::registerquestcategory( "smokinggun", 1 );

    if ( !enabled )
        return;

    _id_3ACF1C0EBAF602F2::getquestdata( "smokinggun" ).missionbasetimer = getdvarint( "dvar_22138D644E7B4EB1", 180 );
    _id_3ACF1C0EBAF602F2::getquestdata( "smokinggun" ).questbasetimer = getdvarint( "dvar_CE4577394943C115", 240 );
    _id_3ACF1C0EBAF602F2::registerremovequestinstance( "smokinggun", ::sg_removequestinstance );
    _id_3ACF1C0EBAF602F2::registeronplayerdisconnect( "smokinggun", ::sg_playerdisconnect );
    _id_3ACF1C0EBAF602F2::registerquestthink( "smokinggun", ::sg_think, 0.25 );
    _id_3ACF1C0EBAF602F2::registeronrespawn( "smokinggun", ::sg_respawn );
    _id_3ACF1C0EBAF602F2::questtimerinit( "smokinggun", 0 );
    _id_3ACF1C0EBAF602F2::registerontimerexpired( "smokinggun", ::sg_ontimerexpired );
    level._effect["mapgloweffect"] = loadfx( "vfx/iw8_br/gameplay/vfx_br_intel_glow" );
}

sg_respawn( player )
{
    if ( !checkforcorrectinstance( player ) )
        return;

    player _id_3ACF1C0EBAF602F2::uiobjectiveshow( "smokinggun" );
    scripts\cp_mp\utility\game_utility::_id_CFD53C8F6878014F( player );
    player _id_7E52B56769FA7774::resetsuper();
    player _id_7E52B56769FA7774::forcegivesuper( "super_ammo_drop", 0 );
}

sg_ontimerexpired()
{
    _id_3ACF1C0EBAF602F2::displayteamsplash( self.team, "br_smokinggun_quest_timer_expired" );
    level thread _id_2CEDCC356F1B9FC8::brleaderdialogteam( "mission_gen_fail", self.team, 1 );
}

sg_removequestinstance()
{
    _id_3ACF1C0EBAF602F2::releaseteamonquest( self.team );
}

sg_playerdisconnect( _id_345221032955C106 )
{
    if ( _id_345221032955C106.team == self.team )
    {
        playerlist = scripts\mp\utility\teams::getteamdata( self.team, "players" );
        _id_3ACF1C0EBAF602F2::getquestinstancedata( "smokinggun", self.team ).playerlist = playerlist;

        if ( isdefined( self ) && isdefined( self.cacheentity ) && playerlist.size )
            self.cacheentity setotherent( playerlist[0] );

        if ( !_id_3ACF1C0EBAF602F2::isteamvalid( _id_345221032955C106.team ) )
        {
            self.result = "fail";
            _id_3ACF1C0EBAF602F2::removequestinstance();
        }
    }
}

checkforcorrectinstance( player )
{
    if ( player.team == self.team )
        return 1;
    else
        return 0;
}

givequest( team, id, player, modifier, rewardscriptable )
{
    instance = _id_3ACF1C0EBAF602F2::createquestinstance( "smokinggun", team, id, rewardscriptable );
    instance.modifier = modifier;

    if ( !isdefined( instance.modifier ) )
        instance.modifier = "";

    instance _id_3ACF1C0EBAF602F2::registerteamonquest( team, player );
    instance.team = team;
    instance.kills = 0;
    instance.playerlist = level.teamdata[team]["players"];

    if ( instance.modifier != "_all" )
        instance _id_3ACF1C0EBAF602F2::questtimerset( _id_3ACF1C0EBAF602F2::getquestdata( "smokinggun" ).questbasetimer, 4 );

    if ( instance.modifier == "_all_timed" )
        level.teamdata[team]["hasFailed"] = 0;

    _id_3ACF1C0EBAF602F2::addquestinstance( "smokinggun", instance );
    _id_3ACF1C0EBAF602F2::startteamcontractchallenge( "smokinggun", player, instance.team );
    params = spawnstruct();
    params.excludedplayers = [];
    params.excludedplayers[0] = player;
    _id_3ACF1C0EBAF602F2::displayteamsplash( player.team, "br_smokinggun_quest_start_team_notify", params );
    _id_3ACF1C0EBAF602F2::displayplayersplash( player, "br_smokinggun_quest_start_tablet_finder", params );
    instance thread updatesmokinggunhud();
    _id_3ACF1C0EBAF602F2::uiobjectiveshowtoteam( "smokinggun", instance.team );
    setteamradar( instance.team, 1 );
    setteamradarstrength( instance.team, 1 );

    foreach ( player in level.teamdata[team]["players"] )
        player.smokinggunprogress = 0;

    return instance;
}

applyquest()
{
    player = self;

    if ( isdefined( level.questinfo.quests["smokinggun"].instances[player.team] ) )
        return;

    instance = givequest( player.team, "", player, "_all_timed" );

    if ( isdefined( instance ) )
        instance thread oninstanceremoved();

    return instance;
}

oninstanceremoved()
{
    instance = self;
    instance waittill( "removed" );

    foreach ( player in instance.playerlist )
        player.issmokinggun = undefined;

    setteamradar( instance.team, 0 );
    setteamradarstrength( instance.team, 0 );
    instance notify( "update" );
}

updatesmokinggunhud()
{
    foreach ( player in self.playerlist )
    {
        progress = 0;

        if ( isdefined( self.progress ) )
            progress = self.progress;

        player _id_3ACF1C0EBAF602F2::uiobjectiveshow( "smokinggun" );
        player _id_3ACF1C0EBAF602F2::uiobjectivesetparameter( progress );
    }
}

hidesmokinggunhudfromplayer( player )
{
    player _id_3ACF1C0EBAF602F2::uiobjectivehide();
}

deletesmokinggunhud()
{
    foreach ( player in self.playerlist )
        hidesmokinggunhudfromplayer( player );

    _id_3ACF1C0EBAF602F2::uiobjectivehidefromteam( self.team );
}

completesmokinggunquest()
{
    foreach ( player in level.teamdata[self.team]["players"] )
    {
        player.smokinggunprogress = undefined;
        player _id_6DE14DAC59E69E69();
        player playervisibilityrespawntags();
        player scripts\cp_mp\calloutmarkerping::calloutmarkerping_removecallout( 7 );
    }

    params = spawnstruct();
    rewardtier = _id_3ACF1C0EBAF602F2::getquestrewardtier( self.team );
    missionid = _id_3ACF1C0EBAF602F2::getquestindex( "smokinggun" );
    _id_11D65784F0B6AFA2 = _id_3ACF1C0EBAF602F2::getquestrewardgroupindex( _id_3ACF1C0EBAF602F2::getquestrewardbuildgroupref( "smokinggun" ) );
    params.packedbits = _id_3ACF1C0EBAF602F2::packsplashparambits( missionid, rewardtier, _id_11D65784F0B6AFA2 );

    if ( getdvarint( "dvar_4B7D23AD6FCA65D8", 1 ) )
    {
        players = level.teamdata[self.team]["alivePlayers"];
        _id_3ACF1C0EBAF602F2::displaysplashtoplayers( players, "br_smokinggun_quest_complete" );
    }
    else
        _id_3ACF1C0EBAF602F2::displayteamsplash( self.team, "br_smokinggun_quest_complete" );

    deletesmokinggunhud();
    self.rewardorigin = self.playerlist[0].origin;
    self.rewardangles = self.playerlist[0].angles;
    self.result = "success";
    _id_3ACF1C0EBAF602F2::removequestinstance();
}

_id_6DE14DAC59E69E69()
{
    foreach ( tag in level.brgametype.respawntags )
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( tag.objidnum, self );
}

failsmokinggunquest()
{
    self.result = "fail";
    _id_3ACF1C0EBAF602F2::removequestinstance();
}

sg_think()
{
    _id_A51A45C698BA273B = self;

    if ( istrue( _id_A51A45C698BA273B.forcefail ) )
    {
        _id_A51A45C698BA273B failsmokinggunquest();
        return;
    }

    if ( !isdefined( _id_A51A45C698BA273B.progress ) )
    {
        _id_A51A45C698BA273B.progress = 0;
        _id_A51A45C698BA273B.goal = getdvarint( "dvar_0CB318B95553C1ED", 5 );
    }

    _id_DB6B50D4CC9FC1E5 = 0;

    foreach ( player in level.teamdata[_id_A51A45C698BA273B.team]["players"] )
    {
        player _id_9C1478BB1C068119();

        if ( player.smokinggunprogress > 0 )
        {
            _id_DB6B50D4CC9FC1E5 = 1;
            _id_A51A45C698BA273B.progress = _id_A51A45C698BA273B.progress + player.smokinggunprogress;
            player.smokinggunprogress = 0;
        }
    }

    if ( _id_DB6B50D4CC9FC1E5 )
    {
        if ( _id_A51A45C698BA273B.progress >= _id_A51A45C698BA273B.goal )
            _id_A51A45C698BA273B completesmokinggunquest();
        else
            _id_A51A45C698BA273B updatesmokinggunhud();
    }
}

laststandgiveloadoutonrevive( instance, skipfirstraise )
{
    player = self;
    player endon( "death_or_disconnect" );
    instance endon( "removed" );
    player waittill( "laststand_revived" );
    player scripts\mp\class::giveloadout( instance.team, player.class, undefined, 0, 0 );
    player _id_724736FCF0FB6604::br_ammo_player_max_out();
    player _id_7E52B56769FA7774::resetsuper();
    player _id_7E52B56769FA7774::forcegivesuper( "super_ammo_drop", 0 );
    player _id_1E4A61DB11011446::givelaststandifneeded( player );

    if ( instance.progress >= instance.goal )
        player.smokinggunclassindex = undefined;
}

shouldspawndropscommon( attacker )
{
    if ( isdefined( attacker ) && attacker == self )
        return 0;

    if ( level.teambased && isdefined( attacker ) && isdefined( attacker.team ) && attacker.team == self.team )
        return 0;

    if ( isdefined( attacker ) && !isdefined( attacker.team ) && ( attacker.classname == "trigger_hurt" || attacker.classname == "worldspawn" ) )
        return 0;

    if ( isagent( self ) || isagent( attacker ) )
        return 0;

    return 1;
}

_id_DDEA12F2946F0281( attacker )
{
    if ( !shouldspawndropscommon( attacker ) )
        return 0;

    if ( !isdefined( attacker.smokinggunprogress ) )
        return 0;

    return 1;
}

_id_E02BA050071A7193()
{
    _id_49EF0477FD847C7D = undefined;

    foreach ( _id_365929041E4386ED in level.brgametype.respawntags )
    {
        if ( !isdefined( _id_49EF0477FD847C7D ) || _id_365929041E4386ED.lastusedtime < _id_49EF0477FD847C7D.lastusedtime )
            _id_49EF0477FD847C7D = _id_365929041E4386ED;
    }

    return _id_49EF0477FD847C7D;
}

_id_BA993D1F2AD87113()
{
    _id_365929041E4386ED = undefined;

    if ( level.brgametype.respawntagsfreed.size > 0 )
    {
        lastindex = level.brgametype.respawntagsfreed.size - 1;
        _id_365929041E4386ED = level.brgametype.respawntagsfreed[lastindex];
        level.brgametype.respawntagsfreed[lastindex] = undefined;
        _id_365929041E4386ED.trigger triggerenable();
        _id_365929041E4386ED.visuals[0] dontinterpolate();
        _id_365929041E4386ED scripts\mp\gameobjects::requestid( 1, 1 );
    }
    else if ( level.brgametype.respawntags.size >= level.brgametype._id_E2FFB7EE26B080B6 )
        _id_365929041E4386ED = _id_E02BA050071A7193();
    else
    {
        _id_77CD411079EEFC7F = "ee_book_office_folder_02_intel_br";
        _id_EFFF9C2576FE4EF0 = 16;
        visuals[0] = spawn( "script_model", ( 0, 0, 0 ) );
        visuals[0] setmodel( _id_77CD411079EEFC7F );
        visuals[0] hudoutlineenable( "outlinefill_depth_white" );
        visuals[0] setasgametypeobjective();
        visuals[0].usetype = 1;
        visuals[0].isuseobject = 1;
        useteam = "any";
        usetime = 0;
        trigger = visuals[0];

        if ( level.brgametype._id_F29EAE31F81C88BA )
        {
            trigger = spawn( "trigger_radius", ( 0, 0, 0 ), 0, 32, 32 );
            trigger.isuseobject = 1;
            visuals[0].isuseobject = undefined;
        }

        _id_365929041E4386ED = scripts\mp\gameobjects::createuseobject( useteam, trigger, visuals, ( 0, 0, _id_EFFF9C2576FE4EF0 ) );
        _id_365929041E4386ED.onuse = ::onuse;
        _id_365929041E4386ED scripts\mp\gameobjects::setusetime( usetime );
        _id_365929041E4386ED _id_2CEDCC356F1B9FC8::_id_199ED650E3E5B30C();
    }

    _id_365929041E4386ED.inuse = 1;
    _id_365929041E4386ED.lastusedtime = gettime();
    _id_9E72179BF85188D2 = "" + _id_365929041E4386ED getentitynumber();
    level.brgametype.respawntags[_id_9E72179BF85188D2] = _id_365929041E4386ED;
    return _id_365929041E4386ED;
}

_id_ABA33702951D6F4D( _id_365929041E4386ED, origin )
{
    _id_365929041E4386ED endon( "death" );
    _id_C0A5049A49AD5FC7 = 14;
    _id_67A8341466780B48 = ( 0, 0, 36 );
    _id_01230EA36A300368 = _id_2CEDCC356F1B9FC8::droptogroundmultitrace( origin, 30 );
    pos = _id_01230EA36A300368 + ( 0, 0, _id_C0A5049A49AD5FC7 );
    _id_365929041E4386ED.curorigin = pos;

    if ( level.brgametype._id_F29EAE31F81C88BA )
        _id_365929041E4386ED.trigger.origin = pos;

    _id_365929041E4386ED.visuals[0].origin = pos;
    _id_365929041E4386ED scripts\mp\gameobjects::initializetagpathvariables();
    _id_365929041E4386ED.interactteam = "any";
    _id_365929041E4386ED.visuals[0] _id_BE4E32B47AD61C7D();
    _id_365929041E4386ED.ownerteam = "neutral";

    if ( isdefined( _id_365929041E4386ED.objidnum ) )
    {
        if ( _id_365929041E4386ED.objidnum != -1 )
        {
            objid = _id_365929041E4386ED.objidnum;
            scripts\mp\objidpoolmanager::objective_add_objective( objid, "active", _id_01230EA36A300368 + _id_67A8341466780B48, "ui_mp_br_pinned_minimap_icon_x1_01" );
            scripts\mp\objidpoolmanager::update_objective_setbackground( objid, 1 );
            scripts\mp\objidpoolmanager::objective_set_play_intro( objid, 0 );
            scripts\mp\objidpoolmanager::objective_set_play_outro( objid, 0 );
            scripts\mp\objidpoolmanager::objective_playermask_hidefromall( objid );
        }
    }

    playsoundatpos( pos, "mp_killconfirm_tags_drop" );
    _id_365929041E4386ED.visuals[0] scriptmodelplayanim( "mp_dogtag_spin" );
    wait 0.2;
    playfxontag( scripts\engine\utility::getfx( "mapgloweffect" ), _id_365929041E4386ED.visuals[0], "j_dogtag" );
}

_id_0840F9008293B5D2( victim, attacker )
{
    if ( isdefined( level.x1ops ) && level.x1ops >= 6 )
        return;

    _id_C99BD20E8E810D7A = _id_BA993D1F2AD87113();
    thread _id_ABA33702951D6F4D( _id_C99BD20E8E810D7A, victim.origin );
}

_id_65D169AA88C4436A( _id_365929041E4386ED, attacker )
{
    _id_365929041E4386ED scripts\mp\gameobjects::allowuse( "none" );
    _id_365929041E4386ED.inuse = 0;
    _id_9E72179BF85188D2 = "" + _id_365929041E4386ED getentitynumber();
    level.brgametype.respawntags[_id_9E72179BF85188D2] = undefined;
    level.brgametype.respawntagsfreed[level.brgametype.respawntagsfreed.size] = _id_365929041E4386ED;
    playfx( level.conf_fx["vanish"], _id_365929041E4386ED.curorigin );
    attacker _id_5762AC2F22202BA2::hudicontype( "intel_folder" );
    _id_365929041E4386ED scripts\mp\gameobjects::releaseid();
    attacker scripts\cp_mp\calloutmarkerping::calloutmarkerping_removecallout( 7 );
    _id_365929041E4386ED.visuals[0] hide();
    _id_365929041E4386ED.trigger triggerdisable();
}

_id_53824610B0B33587()
{
    level endon( "game_ended" );

    foreach ( _id_365929041E4386ED in level.brgametype.respawntags )
    {
        _id_365929041E4386ED scripts\mp\gameobjects::releaseid();
        _id_365929041E4386ED notify( "deleted" );
        _id_365929041E4386ED.visuals[0] hide();
    }

    foreach ( _id_365929041E4386ED in level.brgametype.respawntagsfreed )
    {
        _id_365929041E4386ED scripts\mp\gameobjects::releaseid();
        _id_365929041E4386ED notify( "deleted" );
        _id_365929041E4386ED.visuals[0] hide();
    }

    wait 1;

    foreach ( _id_365929041E4386ED in level.brgametype.respawntags )
    {
        _id_365929041E4386ED.visuals[0] delete();
        _id_365929041E4386ED delete();
    }

    foreach ( _id_365929041E4386ED in level.brgametype.respawntagsfreed )
    {
        _id_365929041E4386ED.visuals[0] delete();
        _id_365929041E4386ED delete();
    }

    level.brgametype.respawntagsfreed = [];
    level.brgametype.respawntags = [];
}

playervisibilityrespawntags( _id_7551427E1BE613F1 )
{
    foreach ( tag in level.brgametype.respawntags )
    {
        if ( isdefined( tag.visuals[0] ) )
            tag.visuals[0] _id_50AEB4CB742DC82D( self );
    }
}

_id_50AEB4CB742DC82D( player )
{
    if ( isdefined( player.smokinggunprogress ) )
    {
        self showtoplayer( player );

        if ( !level.brgametype._id_F29EAE31F81C88BA )
            self enableplayeruse( player );
    }
    else
    {
        self hidefromplayer( player );

        if ( !level.brgametype._id_F29EAE31F81C88BA )
            self disableplayeruse( player );
    }
}

_id_BE4E32B47AD61C7D()
{
    self hide();

    if ( !level.brgametype._id_F29EAE31F81C88BA )
    {
        self makeusable();
        self setcursorhint( "HINT_NOICON" );
        self sethintstring( &"MP_ZXP/PICKUP" );
        self setuseprioritymax();
    }

    foreach ( player in level.players )
        _id_50AEB4CB742DC82D( player );
}

playercanusetags( player )
{
    return isdefined( player.smokinggunprogress ) && player.smokinggunprogress >= 0;
}

onuse( player )
{
    if ( !playercanusetags( player ) )
        return;

    self.trigger playsound( "mp_killconfirm_tags_pickup" );
    player.smokinggunprogress++;
    thread _id_65D169AA88C4436A( self, player );
}

_id_9C1478BB1C068119()
{
    self endon( "death_or_disconnect" );
    _id_B83277038678746D = sortbydistance( level.brgametype.respawntags, self.origin );
    _id_7A6C7CF5CD5103A4 = self calloutmarkerping_getgscobjectiveindex( 7 );
    _id_C1B3D6B48E668752 = 0;

    foreach ( tag in _id_B83277038678746D )
    {
        distsq = undefined;

        if ( _id_C1B3D6B48E668752 < level.brgametype._id_E46CF5267BD6DC28 && level.brgametype._id_F4F30AF2777795EF > 0 )
            distsq = distance2dsquared( self.origin, tag.origin );

        if ( _id_C1B3D6B48E668752 < level.brgametype._id_E46CF5267BD6DC28 && ( level.brgametype._id_F4F30AF2777795EF == 0 || distsq < level.brgametype._id_F4F30AF2777795EF ) )
        {
            _id_C1B3D6B48E668752++;
            scripts\mp\objidpoolmanager::objective_playermask_addshowplayer( tag.objidnum, self );
            continue;
        }

        _id_C1B3D6B48E668752 = level.brgametype._id_E46CF5267BD6DC28;
        scripts\mp\objidpoolmanager::objective_playermask_hidefrom( tag.objidnum, self );

        if ( _id_7A6C7CF5CD5103A4 != -1 && _id_7A6C7CF5CD5103A4 == tag.objidnum )
            scripts\cp_mp\calloutmarkerping::calloutmarkerping_removecallout( 7 );
    }
}

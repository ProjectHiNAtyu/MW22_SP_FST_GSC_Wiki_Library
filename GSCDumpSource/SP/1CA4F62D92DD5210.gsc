// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    init_settings();
    init_flags();
    scripts\stealth\group::addtogroup( self.script_stealthgroup, self );

    if ( !istrue( self._id_B19BEFC7A8BFC30F ) )
        self _meth_4DB6FC194702D153();

    scripts\stealth\event::event_init_entity();
    thread monitor_damage_thread( level.stealth.damage_auto_range, level.stealth.damage_sight_range );
    self _meth_1AFF80C5FC5A3EEA( "noncombat" );
    bt_set_stealth_state( "idle" );
    stealth_init_goal_radius();

    if ( isdefined( self.fnstealthflashlighton ) )
        self.stealth.funcs["flashlight_on"] = self.fnstealthflashlighton;

    if ( isdefined( self.fnstealthflashlightoff ) )
        self.stealth.funcs["flashlight_off"] = self.fnstealthflashlightoff;

    if ( isdefined( self._id_5221CB0637CD44E7 ) )
        self.stealth.funcs["flashlight_attach"] = self._id_5221CB0637CD44E7;

    if ( isdefined( self.fnstealthflashlightdetach ) )
        self.stealth.funcs["flashlight_detach"] = self.fnstealthflashlightdetach;

    self.stealth.funcs["on_state_change"] = ::_id_482904A05ECB1101;

    if ( getdvarint( "dvar_3DD93292C69A9D62", 0 ) == 0 )
        self._id_D7F4A1B60F84E53F = self.script_stealthgroup;

    if ( getdvarint( "dvar_6109644D57E1122E", 0 ) )
        thread _id_26265E158B27BDDA::_id_22C3DC642B82A544();

    if ( isdefined( level._id_4FA3C4EB77C24130 ) )
        self [[ level._id_4FA3C4EB77C24130 ]]();

    if ( isdefined( level.stealth.fninitenemygame ) )
        self thread [[ level.stealth.fninitenemygame ]]();
}

init_flags()
{
    scripts\engine\utility::ent_flag_init( "stealth_enabled" );
    scripts\engine\utility::ent_flag_set( "stealth_enabled" );
    scripts\stealth\utility::group_flag_init( "stealth_spotted" );
}

stealth_init_goal_radius()
{
    if ( isdefined( self.goalradius ) )
        return;

    if ( isdefined( self.script_radius ) )
    {
        self.goalradius = self.script_radius;
        return;
    }

    if ( isdefined( self._id_9FF99CFC426066A2 ) )
    {
        self.goalradius = self._id_9FF99CFC426066A2;
        return;
    }

    if ( !isdefined( self getgoalvolume() ) )
        self.goalradius = level.default_goalradius;
}

init_settings()
{
    self.stealth = spawnstruct();
    self.stealth_enabled = 1;
    self._id_FE5EBEFA740C7106 = 4;
    self.stealth.funcs = [];
    self.stealth.max_warnings = 2;
    self.newenemyreactiondistsq = squared( _func_61B03C8C194A6733( "hidden", "footstep_sprint" ) );
    scripts\stealth\corpse::corpse_init_entity();
    self.event_escalation_scalar = 0.0;

    if ( !isdefined( level.stealth.damage_auto_range ) )
        level.stealth.damage_auto_range = 240;

    if ( !isdefined( level.stealth.damage_sight_range ) )
        level.stealth.damage_sight_range = 750;

    self.grenadeawareness = 0.0;
    self.canacquirenearbytacvisenemies = 0;
}

death_cleanup()
{
    if ( isdefined( self ) )
        self _meth_24CB3B5E0D4216B1( "death" );

    if ( isdefined( self.stealth_vo_ent ) )
        self.stealth_vo_ent thread death_vo_cleanup();
}

death_vo_cleanup()
{
    self stopsounds();
    waitframe();
    self delete();
}

add_active_sense_function( function )
{
    if ( !isdefined( self.stealth.active_sense_funcs ) )
        self.stealth.active_sense_funcs = [];

    self.stealth.active_sense_funcs[self.stealth.active_sense_funcs.size] = function;
}

set_blind( blind, _id_F8048727716242B0 )
{
    if ( !isdefined( self.stealth ) )
        return;

    if ( !blind && !istrue( self._id_5AE62F5DB161CCAF ) )
        return;

    _id_238C192F07833950 = isdefined( self.fnisinstealthcombat ) && self [[ self.fnisinstealthcombat ]]();
    _id_2E660C634AE5407D = isdefined( self.fnisinstealthhunt ) && self [[ self.fnisinstealthhunt ]]();
    _id_11D82B3F1DCB2EB5 = _id_238C192F07833950 || _id_2E660C634AE5407D;

    if ( blind && ( !_id_11D82B3F1DCB2EB5 || istrue( _id_F8048727716242B0 ) ) )
    {
        self._id_5AE62F5DB161CCAF = 1;
        self _meth_EA50442798FCA4C1( "blind" );
    }
    else
    {
        self._id_5AE62F5DB161CCAF = 0;

        if ( _id_11D82B3F1DCB2EB5 )
            self _meth_EA50442798FCA4C1( "spotted" );
        else
            self _meth_EA50442798FCA4C1( "hidden" );
    }
}

alertlevel_normal( param )
{
    thread scripts\stealth\utility::addeventplaybcs( "stealth", "announce5", "alertreset" );
    self _meth_1AFF80C5FC5A3EEA( "noncombat" );
    bt_set_stealth_state( "idle" );
    scripts\stealth\utility::goto_last_goal();
}

set_default_stealth_funcs()
{
    level scripts\stealth\utility::set_stealth_func( "go_to_node_wait", ::go_to_node_wait );
    level scripts\stealth\utility::set_stealth_func( "go_to_node_arrive", ::go_to_node_arrived );
    level scripts\stealth\utility::set_stealth_func( "go_to_node_post_wait", ::go_to_node_post_wait );
    level scripts\stealth\utility::set_stealth_func( "reset", ::alertlevel_normal );
    level scripts\stealth\utility::set_stealth_func( "set_patrol_style", scripts\stealth\utility::set_patrol_style );
    level scripts\stealth\utility::set_stealth_func( "trigger_cover_blown", ::trigger_cover_blown );
    level scripts\stealth\utility::set_stealth_func( "set_blind", ::set_blind );
    level scripts\stealth\utility::set_stealth_func( "investigate", ::bt_event_handler_severity );
    level scripts\stealth\utility::set_stealth_func( "cover_blown", ::bt_event_handler_severity );
    level scripts\stealth\utility::set_stealth_func( "combat", ::bt_event_handler_severity );
    level scripts\stealth\utility::set_stealth_func( "finish", ::_id_DFDEC2FF9BA6B863 );
    level scripts\stealth\utility::set_stealth_func( "override_should_ignore", ::_id_D83F0E5272E07D8C );
}

monitor_damage_thread( _id_448A418E975E9B01, _id_6A01DAAB475B44AB )
{
    team = self.team;

    while ( isalive( self ) )
    {
        other = undefined;

        for (;;)
        {
            if ( !isalive( self ) )
                return;

            self waittill( "damage", dmg, attacker, _id_DDD80F5D1DA23C60, point, type );
            check_kill_damage( dmg, attacker, point );
            _id_98782A2D2A5DBCB4 = self.origin;

            if ( isalive( self ) && !scripts\engine\utility::ent_flag( "stealth_enabled" ) )
                continue;

            if ( isalive( attacker ) )
                other = attacker;

            if ( !isdefined( other ) )
                continue;

            if ( istrue( scripts\stealth\callbacks::stealth_call( "damage", dmg, attacker, type ) ) )
                continue;

            self aieventlistenerevent( "damage", other, other.origin );

            if ( isplayer( other ) || isdefined( other.team ) && other.team != team )
                break;

            if ( isdefined( other.classname ) && other.classname == "script_model" )
            {
                if ( other.isbarrel )
                    break;
            }
        }

        if ( !isdefined( self ) )
            return;

        if ( isdefined( self.stealth.override_damage_auto_range ) )
            _id_448A418E975E9B01 = self.stealth.override_damage_auto_range;
        else if ( isdefined( level.stealth.override_damage_auto_range ) )
            _id_448A418E975E9B01 = level.stealth.override_damage_auto_range;

        if ( isdefined( self.stealth.override_damage_sight_range ) )
            _id_6A01DAAB475B44AB = self.stealth.override_damage_sight_range;
        else if ( isdefined( level.stealth.override_damage_sight_range ) )
            _id_6A01DAAB475B44AB = level.stealth.override_damage_sight_range;

        if ( isalive( self ) )
        {
            _func_AAD7A0EA8AC4CA23( "ally_damaged", self, other, _id_448A418E975E9B01, _id_6A01DAAB475B44AB, type );
            continue;
        }

        _func_AAD7A0EA8AC4CA23( "ally_killed", self, other, _id_448A418E975E9B01, _id_6A01DAAB475B44AB, type );
    }
}

check_kill_damage( damage, attacker, origin )
{
    if ( isdefined( self.disableeasystealthheadshot ) )
        return;

    if ( damage > 0 && self.damagemod != "MOD_MELEE" && self.damagemod != "MOD_IMPACT" && self.alertlevel != "combat" )
    {
        _id_52241BCC3A205EF4 = self geteye();

        if ( distancesquared( origin, _id_52241BCC3A205EF4 ) < squared( level.stealth.head_shot_dist ) )
        {
            self dodamage( self.health, origin, attacker, attacker, "MOD_HEAD_SHOT" );
            self.stealth.override_damage_auto_range = 128;
        }
    }
}

shotisreasonablysafe( target )
{
    guys = getaiunittypearray( "bad_guys", "all" );
    _id_F1E0B8658014350D = [];
    _id_61337B0B147086D7 = squared( level.stealth.damage_auto_range );
    _id_6B29DCEDA0F0AFAF = squared( level.stealth.damage_sight_range );

    foreach ( guy in guys )
    {
        if ( guy == target )
            continue;

        _id_EC59B0D4C5CF7B28 = distancesquared( target.origin, guy.origin );

        if ( _id_EC59B0D4C5CF7B28 < _id_61337B0B147086D7 )
            return 0;

        if ( _id_EC59B0D4C5CF7B28 < _id_6B29DCEDA0F0AFAF )
        {
            if ( guy getthreatsight( self ) > 0 )
                return 0;

            if ( guy scripts\engine\math::point_in_fov( target.origin, 0 ) && guy hastacvis( target ) )
                return 0;

            _id_F1E0B8658014350D[_id_F1E0B8658014350D.size] = guy;
        }
    }

    foreach ( guy in _id_F1E0B8658014350D )
    {
        if ( guy cansee( target ) )
            return 0;
    }

    return 1;
}

shotisbadidea( target )
{
    guys = getaiunittypearray( "bad_guys", "all" );
    _id_F1E0B8658014350D = [];
    _id_61337B0B147086D7 = squared( level.stealth.damage_auto_range );
    _id_6B29DCEDA0F0AFAF = squared( level.stealth.damage_sight_range );

    foreach ( guy in guys )
    {
        if ( guy == target )
            continue;

        _id_EC59B0D4C5CF7B28 = distancesquared( target.origin, guy.origin );

        if ( _id_EC59B0D4C5CF7B28 < _id_61337B0B147086D7 )
            return 1;

        if ( _id_EC59B0D4C5CF7B28 < _id_6B29DCEDA0F0AFAF )
        {
            if ( guy getthreatsight( self ) > 0 )
                return 1;

            if ( guy scripts\engine\math::point_in_fov( target.origin, 0 ) )
            {
                if ( guy hastacvis( target ) )
                    return 1;

                _id_F1E0B8658014350D[_id_F1E0B8658014350D.size] = guy;
            }
        }
    }

    foreach ( guy in _id_F1E0B8658014350D )
    {
        if ( guy cansee( target ) )
            return 1;
    }

    return 0;
}

headtrack_player_toggle( _id_E3108E412AFB3811 )
{
    if ( _id_E3108E412AFB3811 )
    {
        if ( !isdefined( self.stealth.allowplayerheadtracking ) )
            self.stealth.allowplayerheadtracking = 1;
        else if ( !self.stealth.allowplayerheadtracking )
            return;

        if ( !isdefined( self.stealth.looking_at_entity ) )
            self.stealth.looking_at_entity = level.player;

        scripts\common\utility::lookatentity( level.player );
    }
    else if ( isdefined( self.stealth.looking_at_entity ) )
    {
        self.stealth.looking_at_entity = undefined;
        scripts\common\utility::lookatentity();
    }
}

lock_player_headtracking_off( duration )
{
    self endon( "death" );
    self notify( "lock_headtracking_off" );
    self endon( "lock_headtracking_off" );
    disable_player_headtracking();
    wait( duration );
    enable_player_headtracking();
}

disable_player_headtracking()
{
    self.stealth.allowplayerheadtracking = 0;
    headtrack_player_toggle( 0 );
}

enable_player_headtracking()
{
    self.stealth.allowplayerheadtracking = 1;
}

event_handler_should_ignore( event )
{
    event_severity_min = self.stealth.event_severity_min;

    if ( !isdefined( event_severity_min ) )
        event_severity_min = level.stealth.event_severity_min;

    if ( isdefined( event_severity_min ) )
    {
        _id_4573A8725DD3748E = scripts\stealth\event::event_severity_compare( event_severity_min, event.type );

        if ( _id_4573A8725DD3748E > 0 )
            return 1;
    }

    if ( _func_054AC2394A29B65F() && event_override_disguise( event ) )
        return 1;

    if ( event.typeorig == "explosion" )
    {
        if ( isdefined( event.entity ) && isdefined( event.entity.team ) && event.entity.team == self.team )
            return 1;
    }

    if ( event.typeorig == "footstep" || event.typeorig == "footstep_walk" )
    {
        if ( _id_44F457C9D6A9D038( event ) )
            return 1;
    }

    if ( event.typeorig == "footstep_sprint" )
    {
        if ( should_ignore_sprint_footstep( event ) )
            return 1;
    }

    if ( event.typeorig == "silenced_shot" )
    {
        if ( isplayer( event.entity ) && distancesquared( event.entity geteye(), event.origin ) > 1296 )
            return 1;
    }

    if ( event.typeorig == "gunshot" || event.typeorig == "gunshot_impact" || event.typeorig == "gunshot_teammate" || event.typeorig == "bulletwhizby" )
    {
        if ( isagent( event.entity ) && event.entity isinscriptedstate() )
            return 1;
    }

    return _id_D83F0E5272E07D8C( event );
}

_id_D83F0E5272E07D8C( event )
{
    if ( istrue( scripts\stealth\callbacks::stealth_call( "event_should_ignore", event ) ) )
        return 1;

    _id_3D816D7A91186FBB = scripts\stealth\callbacks::stealth_get_func( "event_" + event.type );

    if ( isdefined( _id_3D816D7A91186FBB ) )
    {
        _id_CD3E60A015731C6A = event.type;
        _id_1298BA38E89F0611 = event.typeorig;
        _id_B74B63836F4D0607 = scripts\stealth\callbacks::stealth_call( "event_" + event.type, event );

        if ( isdefined( event.typeorig ) )
            _func_6EB2235636D28921( event.typeorig, event.entity, event.type, event.origin, event.investigate_pos );
        else
        {

        }

        return _id_B74B63836F4D0607;
    }

    return 0;
}

_id_44F457C9D6A9D038( event )
{
    if ( !isplayer( event.entity ) )
        return 1;

    if ( event.entity getstance() != "stand" )
        return 1;

    return 0;
}

should_ignore_sprint_footstep( event )
{
    if ( isplayer( event.entity ) )
    {
        _id_ABD9EE4725B96FC2 = distancesquared( self.origin, event.origin );
        _id_5985D426AA39D205 = ( 0, 0, 18 );
        ignoreents = scripts\engine\utility::array_combine( _func_067E2B3DDA1BEE8A(), self _meth_E2FC2D773338E90F() );
        _id_4513D58533339DE5 = self _meth_BE2F606DBAA90A7D( event.entity, "footstep" );

        if ( _id_ABD9EE4725B96FC2 < _id_4513D58533339DE5 * _id_4513D58533339DE5 )
            return 0;
        else if ( scripts\engine\utility::can_trace_to_ai( event.origin + _id_5985D426AA39D205, self, ignoreents ) )
        {
            if ( isdefined( self.sprintfootstepradius ) )
            {
                sprintfootstepradius = self.sprintfootstepradius;

                if ( _id_ABD9EE4725B96FC2 < sprintfootstepradius * sprintfootstepradius )
                    return 0;
            }

            _id_5B5EC4358B49B47E = self cansee( event.entity );

            if ( !_id_5B5EC4358B49B47E && self _meth_89931185060D4D6F( event.entity ) )
                return 0;
        }
    }

    return 1;
}

event_override_disguise( event )
{
    if ( issentient( event.entity ) )
    {
        switch ( event.typeorig )
        {
            case "proximity":
            case "footstep":
            case "footstep_walk":
            case "footstep_sprint":
                thread scripts\stealth\threat_sight::threat_sight_force_visible( event.entity, 1.0 );
                return 1;
        }
    }

    return 0;
}

event_override_controlling_robot( event )
{
    if ( issentient( event.entity ) )
    {
        switch ( event.typeorig )
        {
            case "proximity":
                return 1;
            case "projectile_impact":
            case "silenced_shot_impact":
            case "gunshot_impact":
            case "silenced_shot":
            case "bulletwhizby":
            case "gunshot":
            case "grenade danger":
            case "explosion":
                event.type = "combat";
                return 0;
        }
    }

    if ( event.type != "combat" )
        return 1;

    return 0;
}

event_anyone_within_radius( _id_03A7C98511D1EC95, dist )
{
    distsq = dist * dist;
    _id_8BAB3203A26744B8 = getaiunittypearray( "bad_guys", "all" );

    foreach ( ai in _id_8BAB3203A26744B8 )
    {
        if ( distancesquared( _id_03A7C98511D1EC95, ai.origin ) <= distsq )
            return 1;
    }

    return 0;
}

event_handler_translate_severity( event )
{
    if ( !isdefined( event ) || !isdefined( event.typeorig ) )
        return;

    if ( self [[ self.fnisinstealthhunt ]]() )
    {
        if ( event.type == "investigate" )
            event.type = "cover_blown";
    }

    switch ( event.typeorig )
    {
        case "sight":
            if ( self.unittype == "dog" )
                event.type = "investigate";
            else
            {
                _id_926A11E24FF33AB5 = undefined;

                if ( isdefined( event.entity ) && issentient( event.entity ) )
                    _id_926A11E24FF33AB5 = event.entity getentitynumber();

                if ( isdefined( _id_926A11E24FF33AB5 ) && self _meth_F4D54A90334A7DEA( event.entity, 2 ) )
                {
                    _id_24B0344B8D70D598 = event.entity;

                    if ( isplayer( event.entity ) )
                    {
                        drone = event.entity scripts\stealth\utility::get_player_drone();

                        if ( isdefined( drone ) && !self cansee( event.entity ) )
                            _id_24B0344B8D70D598 = drone;
                    }

                    self getenemyinfo( _id_24B0344B8D70D598 );
                    event.type = "combat";
                }
            }

            break;
        case "grenade danger":
            if ( isdefined( event.entity ) && scripts\engine\utility::is_equal( event.entity.model, "offhand_1h_wm_bottle_v0" ) )
                event.type = "cover_blown";
            else if ( event_anyone_within_radius( event.origin, 128 ) )
                event.type = "combat";

            break;
        case "explosion":
            if ( event_anyone_within_radius( event.origin, 192 ) )
                event.type = "combat";
            else if ( distancesquared( event.origin, self.origin ) <= 1048576 )
                event.type = "combat";

            break;
        case "gunshot":
            if ( distancesquared( event.origin, self.origin ) < 640000 )
                event.type = "combat";

            break;
        case "glass_destroyed":
            if ( self hastacvis( event.origin, 0 ) && distance2dsquared( event.origin, self.origin ) < 36864 )
                event.type = "combat";

            break;
    }
}

trigger_cover_blown( event )
{
    if ( !isdefined( self.stealth ) )
        return;

    self._id_E31EE88092E41CC8 = 1;
}

react_announce( event )
{
    self endon( "death" );
    _id_74B5B12BB6514385 = randomfloatrange( 0.5, 1.1 );

    switch ( event.type )
    {
        case "investigate":
            thread scripts\stealth\utility::addeventplaybcs( "stealth", "announce5", "investigate", _id_74B5B12BB6514385, event );
            return 1;
        case "cover_blown":
            thread scripts\stealth\utility::addeventplaybcs( "stealth", "announce5", "coverblown", _id_74B5B12BB6514385, event );
            return 1;
        case "combat":
            thread scripts\stealth\utility::addeventplaybcs( "stealth", "announce2", "combat", 1, event );
            return 1;
    }

    return 0;
}

react_announce_specific( event )
{
    self endon( "death" );

    if ( isdefined( event.typeorig ) )
    {
        _id_74B5B12BB6514385 = randomfloatrange( 0.5, 1.0 );
        thread scripts\stealth\utility::addeventplaybcs( "stealth", "announce4", event.typeorig, _id_74B5B12BB6514385, event );
        return 1;
    }

    return 0;
}

go_to_node_wait_investigate( _id_E2A7566FB8A29355, node, _id_5297224E2A5333E6 )
{
    self endon( "death" );

    if ( !isdefined( _id_5297224E2A5333E6 ) )
        _id_5297224E2A5333E6 = 1;

    _id_9966D5C750DD965A = !_id_5297224E2A5333E6;

    while ( !_id_9966D5C750DD965A )
    {
        self [[ _id_E2A7566FB8A29355 ]]( node );
        _id_9966D5C750DD965A = 1;
        self waittill( "goal" );
    }
}

go_to_node_wait( _id_E2A7566FB8A29355, node )
{
    self endon( "death" );
    self _meth_0F7CFF9F6DAFB297();

    if ( !istrue( node._id_97C8A15D77788E5A ) )
    {
        if ( isdefined( node.target ) )
        {
            self._blackboard.idlenode = node;
            node._id_F8D4ED108521E632 = _func_5D6132045B29BAF5( node.target );
        }

        node._id_97C8A15D77788E5A = 1;
    }

    self [[ _id_E2A7566FB8A29355 ]]( node );

    if ( isdefined( node._id_F8D4ED108521E632 ) )
    {
        self _meth_76B3CFB91EF40B3B( node._id_F8D4ED108521E632 );
        self waittill( "bt_goal" );
    }
    else
        self waittill( "goal" );
}

go_to_node_post_wait( _id_E2A7566FB8A29355, node )
{
    self endon( "death" );
    self notify( "gotonode_post_wait" );

    if ( isdefined( self.stealth.idle ) && isdefined( node.target ) )
    {

    }

    id = self _meth_92435C7A6AE85C3C();

    if ( isdefined( id ) )
    {
        _func_AE368FAD1A1DC337( id, "state", "end" );
        self _meth_EA63241A4D3092C4();
    }

    if ( isdefined( node.target ) )
    {
        self _meth_0F7CFF9F6DAFB297();
        self._blackboard.idlenode = undefined;
    }
}

go_to_node_arrived( _id_E2A7566FB8A29355, node )
{
    go_to_node_wait_investigate( _id_E2A7566FB8A29355, node, 0 );

    if ( isdefined( node.script_moveplaybackrate ) )
        self.moveplaybackrate = node.script_moveplaybackrate;

    if ( ( istrue( node.script_delay ) || istrue( node.script_delay_min ) || istrue( node.script_wait ) || isdefined( node.script_idle ) || istrue( node.patrol_stop ) || !isdefined( node.target ) ) && isdefined( node.angles ) )
    {
        _id_82FDF4C0D6CA802C = undefined;

        if ( isdefined( node.script_idle ) )
            _id_82FDF4C0D6CA802C = node.script_idle;

        self _meth_E4B58A023E0DA030( node.origin, node.angles, _id_82FDF4C0D6CA802C );
        self._blackboard.idlenode = node;

        if ( !istrue( node.script_delay ) && !istrue( node.script_wait ) )
            waitframe();
    }

    if ( isdefined( node.script_animation ) )
    {
        anime = node.script_animation;
        scripts\stealth\utility::animgenericcustomanimmode( self, "gravity", anime );
    }
    else if ( isdefined( node.script_idle ) )
    {
        _id_82FDF4C0D6CA802C = undefined;

        if ( isdefined( node.script_idle ) )
            _id_82FDF4C0D6CA802C = node.script_idle;

        self _meth_E4B58A023E0DA030( node.origin, node.angles, _id_82FDF4C0D6CA802C );
        self._blackboard.idlenode = node;
    }

    if ( isdefined( node.script_animation_exit ) )
        scripts\stealth\utility::animgenericcustomanimmode( self, "gravity", node.script_animation_exit );
}

bt_set_stealth_state( statename, event )
{
    self [[ self.fnsetstealthstate ]]( statename, event );
}

bt_event_handler_severity( event )
{
    _id_A16E3D3C7CAFCD0E = undefined;

    if ( isplayer( event.entity ) && event.typeorig == "sight" )
    {
        drone = event.entity scripts\stealth\utility::get_player_drone();

        if ( isdefined( drone ) && !self cansee( event.entity ) )
            _id_A16E3D3C7CAFCD0E = drone;
    }

    event.investigate_pos = event.origin;

    if ( isdefined( self.enemy ) && isdefined( event.entity ) && event.entity == self.enemy )
        event.investigate_pos = self lastknownpos( self.enemy );
    else if ( isdefined( event.entity ) && ( event.typeorig == "bulletwhizby" || event.typeorig == "throwingknife_whizby" ) )
        event.investigate_pos = event.entity.origin;
    else if ( isdefined( event.entity ) && issentient( event.entity ) && self _meth_97BB81ACBB14C09C( event.entity ) && self cansee( event.entity ) )
        event.investigate_pos = event.entity.origin;
    else if ( isdefined( _id_A16E3D3C7CAFCD0E ) )
        event.investigate_pos = _id_A16E3D3C7CAFCD0E.origin;

    event_handler_translate_severity( event );

    if ( event_handler_should_ignore( event ) )
        return 0;

    if ( isdefined( _id_A16E3D3C7CAFCD0E ) )
        event.entity = _id_A16E3D3C7CAFCD0E;

    self.last_severity_time = gettime();
    _id_DFDEC2FF9BA6B863( event );
    return 1;
}

_id_DFDEC2FF9BA6B863( event )
{
    if ( !scripts\stealth\utility::bcisincombat() )
    {
        if ( !react_announce_specific( event ) )
            react_announce( event );
    }

    switch ( event.type )
    {
        case "investigate":
            thread bt_event_investigate( event );
            break;
        case "cover_blown":
            thread bt_event_cover_blown( event );
            break;
        case "combat":
            thread bt_event_combat( event );
            break;
    }

    level notify( "stealth_event", event, self );
    func = scripts\stealth\callbacks::stealth_get_func( event.typeorig );

    if ( isdefined( func ) && func != ::bt_event_handler_severity )
        self thread [[ func ]]( event );

    return 1;
}

bt_event_investigate( event )
{
    if ( self [[ self.fnisinstealthcombat ]]() )
        return;

    self _meth_1AFF80C5FC5A3EEA( "alert" );
    bt_set_stealth_state( "investigate", event );
}

bt_event_cover_blown( event )
{
    if ( self [[ self.fnisinstealthcombat ]]() )
        return;

    if ( isdefined( event.entity ) && isdefined( event.entity.classname ) && event.entity.classname == "script_vehicle_blackhornet" )
        return;

    if ( _func_054AC2394A29B65F() )
    {
        switch ( event.typeorig )
        {
            case "silenced_shot":
            case "gunshot":
            case "explosion":
                scripts\stealth\utility::set_disguised( 0 );
                level scripts\engine\utility::delaythread( 20, scripts\stealth\utility::set_disguised, 1 );
                break;
        }
    }

    if ( event.typeorig == "light_killed" )
    {
        event.look_pos = event.investigate_pos;
        event.investigate_pos = scripts\engine\utility::drop_to_ground( event.investigate_pos, 24, -256 );
    }

    if ( event.typeorig == "grenade danger" )
    {
        self.grenadeawareness = 1;
        self.grenadereturnthrowchance = 0;

        if ( self._id_FE5EBEFA740C7106 == 2 )
            return;
    }

    self _meth_1AFF80C5FC5A3EEA( "alert" );

    if ( self [[ self.fnisinstealthhunt ]]() )
    {
        if ( _func_CB5DC7BD04B05B04( event, self ) )
            return;
    }
    else
        bt_set_stealth_state( "investigate", event );
}

bt_event_combat( event )
{
    self notify( "stop_going_to_node" );
    bt_set_stealth_state( "combat", event );

    if ( isdefined( event ) && issentient( event.entity ) )
    {
        if ( !isdefined( self.enemy ) )
            self resetthreatupdate();

        thread set_provide_cover_fire();
    }
}

set_provide_cover_fire()
{
    self.providecoveringfire = 1;
    self endon( "death" );
    self endon( "stealth_investigate" );
    self endon( "stealth_hunt" );
    self endon( "stealth_combat" );
    wait 5;
    self.providecoveringfire = 0;
}

_id_482904A05ECB1101( _id_8F4EF4FDB5E7800A, _id_93279C66A2E49A45, _id_D24E406E7DEEFABC )
{
    switch ( _id_93279C66A2E49A45 )
    {
        case 0:
            thread scripts\stealth\utility::addeventplaybcs( "stealth", "state_change", "idle", undefined, undefined );
            break;
        case 1:
            if ( _id_8F4EF4FDB5E7800A == 1 )
                thread scripts\stealth\utility::addeventplaybcs( "stealth", "state_change", "update_investigate", undefined, undefined );
            else
            {
                self.script_forcegoal = 0;
                level thread scripts\stealth\group::_id_92F7DF07DF367143( self );

                if ( _id_D24E406E7DEEFABC )
                {

                }
            }

            break;
        case 2:
            self.last_set_goalnode = undefined;
            self.last_set_goalent = undefined;
            level thread scripts\stealth\group::pod_hunt_vo();

            if ( _id_D24E406E7DEEFABC )
            {
                squadid = _func_8D0E1F40856173F4( self );
                thread scripts\stealth\group::pod_hunt_update( squadid );
            }

            if ( isdefined( self.script_stealth_region_group ) )
                self _meth_9E200FD4120297E8( self.script_stealth_region_group );

            thread scripts\stealth\utility::addeventplaybcs( "stealth", "state_change", "hunt", undefined, undefined );
            break;
        case 3:
            scripts\stealth\event::event_escalation_clear();

            if ( isdefined( self.script_stealthgroup ) )
            {
                _id_448DCBC6F715EFDC = level.stealth.combat_volumes[self.script_stealthgroup];

                if ( isdefined( _id_448DCBC6F715EFDC ) )
                    self setbtgoalvolume( 0, _id_448DCBC6F715EFDC );
                else if ( isdefined( level.stealth.combat_goalradius ) && isdefined( level.stealth.combat_goalradius[self.script_stealthgroup] ) )
                {
                    self setbtgoalpos( 0, self.scriptgoalpos );
                    self setbtgoalradius( 0, level.stealth.combat_goalradius[self.script_stealthgroup] );
                }
            }

            scripts\common\gameskill::grenadeawareness();

            if ( _id_D24E406E7DEEFABC )
            {
                _id_B205CC0302DA1270 = _func_BC5DF124338CEFEA( self );

                if ( isdefined( _id_B205CC0302DA1270 ) )
                    _id_B205CC0302DA1270 thread scripts\stealth\group::pod_combat_update_checklosttarget();

                _id_F16E8CB356CB454D = scripts\engine\utility::ter_op( _id_8F4EF4FDB5E7800A < 2, "first_combat", "combat" );
            }
            else
                _id_F16E8CB356CB454D = "join_combat";

            if ( isdefined( self._id_1CE6CC13577E5C02 ) && isdefined( self._id_B53DBEA738760E5B ) )
            {
                self getenemyinfo( self._id_B53DBEA738760E5B );
                self._id_1CE6CC13577E5C02 = 0;
                self._id_B53DBEA738760E5B = undefined;
            }

            if ( _id_F16E8CB356CB454D == "first_combat" )
                _func_216C67AB6749137A( self, undefined, "initial_combat", undefined, 2 );

            if ( _id_F16E8CB356CB454D == "first_combat" && getdvarint( "dvar_0DF03D7AC5B31599" ) == 1 )
                return;
            else
                _func_216C67AB6749137A( self, undefined, _id_F16E8CB356CB454D, undefined, 2 );

            break;
        default:
            break;
    }
}

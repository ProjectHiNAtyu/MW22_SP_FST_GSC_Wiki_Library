// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

precache( offhand )
{
    scripts\sp\equipment\offhands::registeroffhandfirefunc( offhand, ::noisemakerfiremain );
}

noisemakerfiremain( _id_54A4A3210A79D76F, weapon )
{
    if ( !isdefined( _id_54A4A3210A79D76F ) )
        return;

    if ( !isdefined( level.currentthrowobject ) )
        level.currentthrowobject = "";

    _id_54A4A3210A79D76F setmodel( level.currentthrowobject );
    level.player notify( "noisemaker_thrown", _id_54A4A3210A79D76F );
    offhand = level.player _meth_51BB5F1539048C4C( "secondaryoffhand" );
    _id_54A4A3210A79D76F waittill( "missile_stuck", stuckto );

    foreach ( ai in getaiarray( "axis" ) )
    {
        if ( isdefined( ai ) )
        {
            _id_AEBCD718CC197D49 = distance( ai.origin, _id_54A4A3210A79D76F.origin );

            if ( _id_AEBCD718CC197D49 < 650 )
                ai aieventlistenerevent( "cover_blown", level.player, _id_54A4A3210A79D76F.origin );
        }
    }

    _id_BA9666BC2CED143F = spawn( "script_model", _id_54A4A3210A79D76F.origin );
    _id_BA9666BC2CED143F.angles = _id_54A4A3210A79D76F.angles;
    _id_BA9666BC2CED143F setmodel( level.currentthrowobject );
    _id_BA9666BC2CED143F thread noisemakerwaitpickup( weapon );
    _id_FEA3F55388EC308A = 1;

    if ( isdefined( level.allownoisemakerpickups ) && !level.allownoisemakerpickups )
        _id_FEA3F55388EC308A = 0;

    if ( _id_FEA3F55388EC308A )
        noisemakersenablecursors();

    _id_54A4A3210A79D76F delete();
}

noisemakersenablecursors()
{
    if ( !istrue( level.disablenoisemakers ) )
    {
        _id_45D83BD6CD63A324 = getentarray( "offhand_noisemaker", "targetname" );

        foreach ( _id_BA9666BC2CED143F in _id_45D83BD6CD63A324 )
        {
            if ( isdefined( _id_BA9666BC2CED143F.script_parameters ) )
                _id_BA9666BC2CED143F.zoffset = stringtofloat( _id_BA9666BC2CED143F.script_parameters );
            else
                _id_BA9666BC2CED143F.zoffset = 1.5;

            if ( !isdefined( _id_BA9666BC2CED143F.cursor_hint_ent ) )
            {
                _id_1E2F2224127D2990 = rotatevectorinverted( ( 0, 0, _id_BA9666BC2CED143F.zoffset ), _id_BA9666BC2CED143F.angles );
                _id_BA9666BC2CED143F scripts\sp\player\cursor_hint::create_cursor_hint( undefined, _id_1E2F2224127D2990, &"CAPTIVE/CURSOR_PICKUP", 360, 128, 64 );
            }
        }
    }
}

noisemakersdisablecursors()
{
    _id_45D83BD6CD63A324 = getentarray( "offhand_noisemaker", "targetname" );

    foreach ( _id_BA9666BC2CED143F in _id_45D83BD6CD63A324 )
        _id_BA9666BC2CED143F scripts\sp\player\cursor_hint::remove_cursor_hint();
}

noisemakerwaitpickup( _id_F71C752985AC24B1 )
{
    self endon( "death" );
    level.player notify( "noisemaker_settled", self );
    self.targetname = "offhand_noisemaker";

    for (;;)
    {
        self waittill( "trigger" );
        _id_3483795B0A68EB95 = level.player getammocount( _id_F71C752985AC24B1 );

        if ( _id_3483795B0A68EB95 == 0 )
        {
            level.currentthrowobject = self.model;
            level.player scripts\engine\sp\utility::give_offhand( "noisemaker" );
            level.player notify( "noisemaker_pickedup", self );
            noisemakersdisablecursors();
            self delete();
        }

        wait 0.5;
    }
}

stringtofloat( _id_E0C16711B32B5FE3 )
{
    _id_1B23D4BE061900E8 = strtok( _id_E0C16711B32B5FE3, "." );
    _id_26BAF6C49C8EDB98 = int( _id_1B23D4BE061900E8[0] );

    if ( isdefined( _id_1B23D4BE061900E8[1] ) )
    {
        modifier = 1;

        for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_1B23D4BE061900E8[1].size; _id_AC0E594AC96AA3A8++ )
            modifier = modifier * 0.1;

        _id_26BAF6C49C8EDB98 = _id_26BAF6C49C8EDB98 + int( _id_1B23D4BE061900E8[1] ) * modifier;
    }

    return _id_26BAF6C49C8EDB98;
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_D95667E1F430FEBD( _id_34F47F14C6E790E2, _id_4D911ECA2B018AF3, _id_0A4FDC656DCA8008, _id_DF3D3DF033385907, _id_9E7480CF70643465, _id_0C1D6E94F98D2793, _id_F428363B0493AB85, _id_20520E06DC84DF35, _id_7092F7455A51053C )
{
    level._id_F194617B9915F69D = spawnstruct();

    if ( isdefined( _id_DF3D3DF033385907 ) )
        _id_98347594501950EE( _id_DF3D3DF033385907 );
    else
        _id_98347594501950EE( 50 );

    if ( isdefined( _id_9E7480CF70643465 ) )
        _id_D50EA3EA79AA3904( _id_9E7480CF70643465 );
    else
        _id_D50EA3EA79AA3904( 600 );

    if ( isdefined( _id_0C1D6E94F98D2793 ) )
        _id_1A4B1D45CB84A1CA( _id_0C1D6E94F98D2793 );
    else
        _id_1A4B1D45CB84A1CA( 0.6 );

    if ( isdefined( _id_F428363B0493AB85 ) )
        _id_DA5957BB5E105E1C( _id_F428363B0493AB85 );
    else
        _id_DA5957BB5E105E1C( 7 );

    if ( isdefined( _id_20520E06DC84DF35 ) )
        _id_12B7794C48C124E4( _id_20520E06DC84DF35 );
    else
        _id_12B7794C48C124E4( 600 );

    if ( isdefined( _id_7092F7455A51053C ) )
        _id_09C3EEA918FD3D2F( _id_7092F7455A51053C );
    else
        _id_09C3EEA918FD3D2F( 0.5 );

    precacheshader( "cursor_hint_circle" );
    thread _id_809D91AC8143E1A6();

    if ( istrue( _id_34F47F14C6E790E2 ) )
        _id_D185EC5F9609DD11( _id_4D911ECA2B018AF3, _id_0A4FDC656DCA8008 );
}

_id_809D91AC8143E1A6()
{
    scripts\engine\utility::flag_init( "proximity_sensor_ready" );
    waitframe();
    scripts\engine\utility::flag_set( "proximity_sensor_ready" );
}

_id_D185EC5F9609DD11( _id_4D911ECA2B018AF3, _id_0A4FDC656DCA8008 )
{
    thread _id_7F98DA5FFC7830B0( _id_4D911ECA2B018AF3, _id_0A4FDC656DCA8008 );
}

_id_8DAA8ABA7D5392D3()
{
    level notify( "stop_proximity_detection" );
}

_id_7F98DA5FFC7830B0( _id_4D911ECA2B018AF3, _id_0A4FDC656DCA8008 )
{
    scripts\engine\utility::flag_wait( "proximity_sensor_ready" );
    _id_4EFE32558A7556C6 = newhudelem();
    _id_4EFE32558A7556C6.x = 400;
    _id_4EFE32558A7556C6.y = 360;
    _id_4EFE32558A7556C6.alignx = "center";
    _id_4EFE32558A7556C6.aligny = "middle";
    _id_4EFE32558A7556C6.sort = 1;
    _id_4EFE32558A7556C6.foreground = 1;
    _id_4EFE32558A7556C6.hidewhendead = 1;
    _id_4EFE32558A7556C6.hidewheninmenu = 1;
    _id_4EFE32558A7556C6.alpha = 0;
    _id_4EFE32558A7556C6.fontscale = 1;
    _id_4EFE32558A7556C6.font = "objective";
    _id_4EFE32558A7556C6 setshader( "cursor_hint_circle", 1, 1 );
    _id_CC3CC81B074B6622( _id_4EFE32558A7556C6, _id_4D911ECA2B018AF3, _id_0A4FDC656DCA8008 );
    _id_34717AB6792D27B5( _id_4EFE32558A7556C6, _id_4D911ECA2B018AF3 );
}

_id_CC3CC81B074B6622( _id_4EFE32558A7556C6, _id_4D911ECA2B018AF3, _id_0A4FDC656DCA8008 )
{
    level endon( "stop_proximity_detection" );

    if ( istrue( _id_4D911ECA2B018AF3 ) )
        childthread _id_4447945E071F9035();

    for (;;)
    {
        _id_6B1E1EEB77706EC6();
        thread _id_B78ACD9BD5C36381( _id_0A4FDC656DCA8008 );
    }
}

_id_4447945E071F9035()
{
    level.player notifyonplayercommand( "tag_enemy", "+actionslot 1" );

    for (;;)
    {
        level.player waittill( "tag_enemy" );
        start = level.player geteye();
        _id_70222FBC47330166 = anglestoforward( level.player getgunangles() );
        result = scripts\engine\trace::ray_trace( start, start + _id_70222FBC47330166 * 2000, level.player );

        if ( isdefined( result["entity"] ) && isdefined( result["entity"].team ) && result["entity"].team == "neutral" )
        {
            if ( !istrue( result["entity"]._id_1ECFF25D607A7651 ) )
                iprintlnbold( "TAGGED CIVILIAN" );

            result["entity"]._id_1ECFF25D607A7651 = 1;
        }
    }
}

_id_6B1E1EEB77706EC6()
{
    _id_B497E19421070AE9 = 0;

    for (;;)
    {
        dist = _id_6AE5CDDCCB732765( _id_8185E6789FCD7280(), _id_A3257413D5785298() );

        if ( isdefined( dist ) )
        {
            threshold = _id_0A8C7A844722DFE7( dist, _id_DA492569E9E63E72(), _id_8185E6789FCD7280(), _id_C12007FB94985006(), _id_7A3CDBE9DFFF6160(), 1.7 );

            if ( _id_B497E19421070AE9 > threshold )
                return;
        }

        waitframe();
        _id_B497E19421070AE9 = _id_B497E19421070AE9 + 0.05;
    }
}

_id_6AE5CDDCCB732765( _id_21B0311D64CADFA2, _id_20520E06DC84DF35 )
{
    ai_array = getaiarrayinradius( level.player.origin, _id_21B0311D64CADFA2, "axis" );
    _id_7B620C31D012C61B = getaiarrayinradius( level.player.origin, _id_21B0311D64CADFA2, "neutral" );

    foreach ( _id_A5638903B40C5A21 in _id_7B620C31D012C61B )
    {
        if ( !istrue( _id_A5638903B40C5A21._id_1ECFF25D607A7651 ) )
            ai_array[ai_array.size] = _id_A5638903B40C5A21;
    }

    if ( ai_array.size == 0 )
        return undefined;

    _id_42EFE883EC9B02A4 = undefined;
    _id_72B8B09480EB566B = undefined;

    foreach ( ai in ai_array )
    {
        if ( abs( level.player.origin[2] - ai.origin[2] ) > level._id_F194617B9915F69D._id_20520E06DC84DF35 )
            continue;

        dist = distance( level.player.origin, ai.origin );

        if ( !isdefined( _id_42EFE883EC9B02A4 ) || dist < _id_42EFE883EC9B02A4 )
        {
            _id_42EFE883EC9B02A4 = dist;
            _id_72B8B09480EB566B = ai;
        }
    }

    if ( isdefined( _id_42EFE883EC9B02A4 ) && _id_42EFE883EC9B02A4 <= _id_21B0311D64CADFA2 )
    {
        dot = scripts\engine\math::get_dot( level.player geteye(), level.player getgunangles(), _id_72B8B09480EB566B.origin + ( 0, 0, 45 ) );

        if ( dot >= 0.766044 )
        {
            _id_B79930868F410231 = _id_0A8C7A844722DFE7( 1 - dot, 0, 0.233956, _id_6BCA348B685237B3(), 1, 1.7 );
            _id_42EFE883EC9B02A4 = _id_42EFE883EC9B02A4 * _id_B79930868F410231;
        }
    }

    return _id_42EFE883EC9B02A4;
}

_id_B78ACD9BD5C36381( _id_0A4FDC656DCA8008 )
{
    level.player playsound( "motiontracker_pong" );

    if ( istrue( _id_0A4FDC656DCA8008 ) )
    {
        level.player setscriptablepartstate( "player_fx", "proximitysensor_blink" );
        wait 0.3;
        level.player setscriptablepartstate( "player_fx", "fx_off" );
    }
}

_id_11A1811A31F152AA( _id_4EFE32558A7556C6 )
{
    level.player playsound( "motiontracker_pong" );
    _id_4EFE32558A7556C6.alpha = 1;
    _id_4EFE32558A7556C6 scaleovertime( 0.4, 70, 70 );
    wait 0.2;
    _id_4EFE32558A7556C6 fadeovertime( 0.1 );
    _id_4EFE32558A7556C6.alpha = 0;
    wait 0.3;
    _id_4EFE32558A7556C6 scaleovertime( 0.1, 1, 1 );
}

_id_34717AB6792D27B5( _id_4EFE32558A7556C6, _id_4D911ECA2B018AF3 )
{
    if ( istrue( _id_4D911ECA2B018AF3 ) )
        level.player notifyonplayercommandremove( "tag_enemy", "+actionslot 1" );

    _id_4EFE32558A7556C6 destroy();
}

_id_98347594501950EE( _id_DF3D3DF033385907 )
{
    level._id_F194617B9915F69D._id_DF3D3DF033385907 = _id_DF3D3DF033385907;
}

_id_D50EA3EA79AA3904( _id_9E7480CF70643465 )
{
    level._id_F194617B9915F69D._id_9E7480CF70643465 = _id_9E7480CF70643465;
}

_id_1A4B1D45CB84A1CA( _id_0C1D6E94F98D2793 )
{
    level._id_F194617B9915F69D._id_0C1D6E94F98D2793 = _id_0C1D6E94F98D2793;
}

_id_DA5957BB5E105E1C( _id_F428363B0493AB85 )
{
    level._id_F194617B9915F69D._id_F428363B0493AB85 = _id_F428363B0493AB85;
}

_id_12B7794C48C124E4( _id_20520E06DC84DF35 )
{
    level._id_F194617B9915F69D._id_20520E06DC84DF35 = _id_20520E06DC84DF35;
}

_id_09C3EEA918FD3D2F( _id_B79930868F410231 )
{
    level._id_F194617B9915F69D._id_7092F7455A51053C = _id_B79930868F410231;
}

_id_DA492569E9E63E72()
{
    return level._id_F194617B9915F69D._id_DF3D3DF033385907;
}

_id_8185E6789FCD7280()
{
    return level._id_F194617B9915F69D._id_9E7480CF70643465;
}

_id_C12007FB94985006()
{
    return level._id_F194617B9915F69D._id_0C1D6E94F98D2793;
}

_id_7A3CDBE9DFFF6160()
{
    return level._id_F194617B9915F69D._id_F428363B0493AB85;
}

_id_A3257413D5785298()
{
    return level._id_F194617B9915F69D._id_20520E06DC84DF35;
}

_id_6BCA348B685237B3()
{
    return level._id_F194617B9915F69D._id_7092F7455A51053C;
}

_id_C79C0F5856D2403A()
{
    setdvarifuninitialized( "dvar_720160B832829829", 0 );

    for (;;)
    {
        if ( getdvarint( "dvar_720160B832829829" ) )
        {
            ai_array = getaiarrayinradius( level.player.origin, _id_8185E6789FCD7280(), "axis" );
            _id_7B620C31D012C61B = getaiarrayinradius( level.player.origin, _id_8185E6789FCD7280(), "neutral" );

            foreach ( _id_A5638903B40C5A21 in _id_7B620C31D012C61B )
            {
                if ( !istrue( _id_A5638903B40C5A21._id_1ECFF25D607A7651 ) )
                    ai_array[ai_array.size] = _id_A5638903B40C5A21;
            }

            _id_114AB88507847C50 = scripts\engine\utility::getclosest( level.player.origin, ai_array );

            foreach ( ai in ai_array )
            {
                dist = distance( level.player.origin, ai.origin );
                _id_477C1209E5432ABE = _id_1EB704CB6D755987( dist, _id_DA492569E9E63E72(), _id_8185E6789FCD7280(), 100, 0 );
            }
        }

        waitframe();
    }
}

_id_1EB704CB6D755987( value, _id_3C58D40EE22036AE, _id_C979000E8E5B2AEC, _id_3C58D30EE220347B, _id_C979030E8E5B3185 )
{
    value = _id_3C58D30EE220347B + ( value - _id_3C58D40EE22036AE ) * ( _id_C979030E8E5B3185 - _id_3C58D30EE220347B ) / ( _id_C979000E8E5B2AEC - _id_3C58D40EE22036AE );
    return clamp( value, min( _id_3C58D30EE220347B, _id_C979030E8E5B3185 ), max( _id_3C58D30EE220347B, _id_C979030E8E5B3185 ) );
}

_id_0A8C7A844722DFE7( value, _id_3C58D40EE22036AE, _id_C979000E8E5B2AEC, _id_3C58D30EE220347B, _id_C979030E8E5B3185, power )
{
    _id_6C8D21B2E54B2478 = clamp( ( value - _id_3C58D40EE22036AE ) / ( _id_C979000E8E5B2AEC - _id_3C58D40EE22036AE ), 0, 1 );
    value = _id_3C58D30EE220347B + ( value - _id_3C58D40EE22036AE ) * ( _id_C979030E8E5B3185 - _id_3C58D30EE220347B ) / ( _id_C979000E8E5B2AEC - _id_3C58D40EE22036AE ) * _func_A08FC4B9A02EB60C( _id_6C8D21B2E54B2478, power, 1, 0 );
    return clamp( value, _id_3C58D30EE220347B, _id_C979030E8E5B3185 );
}

_id_8F0EA262D0AB9BB4( value )
{
    _id_28F567F333ABE158 = floor( value );
    _id_A3EDD56137BB2540 = value - _id_28F567F333ABE158;

    if ( _id_A3EDD56137BB2540 < 0.5 )
        return _id_28F567F333ABE158;
    else
        return _id_28F567F333ABE158 + 1;
}

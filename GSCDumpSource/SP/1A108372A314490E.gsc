// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

interaction_manager_init()
{
    level.interaction_manager = spawnstruct();
    level.interaction_manager.data = [];
    level.interaction_manager.data["actors"] = [];
    level.interaction_manager.data["registered_interactions"] = [];
    level.interaction_manager.data["registered_state_interactions"] = [];
    reminder_vo_init();
    level.interaction_manager.allow_interactions = 1;
    level.interaction_manager.can_remind = 1;
    level.interaction_manager.pause_remind = 0;
    level.interaction_manager.data["reminder_queue"] = [];
}

stop_interactions()
{
    reconstruct_actor_array();

    foreach ( actor in level.interaction_manager.data["actors"] )
    {
        actor.allow_interactions = 0;
        actor.allow_gesture_reactions = 0;
    }
}

stop_interaction()
{
    if ( scripts\engine\utility::array_contains( level.interaction_manager.data["actors"], self ) )
    {
        self.allow_interactions = 0;
        self.allow_gesture_reactions = 0;
    }
}

continue_interactions()
{
    reconstruct_actor_array();

    foreach ( actor in level.interaction_manager.data["actors"] )
    {
        actor.allow_interactions = 1;
        actor.allow_gesture_reactions = 1;
    }
}

continue_interaction()
{
    if ( scripts\engine\utility::array_contains( level.interaction_manager.data["actors"], self ) )
    {
        self.allow_interactions = 1;
        self.allow_gesture_reactions = 1;
    }
}

trigger_interaction()
{
    self endon( "death" );

    if ( isdefined( self.lookat_anims ) )
        self.lookat_anims["interaction_trigger_override"] = 1;
}

trigger_interaction_multiple( ai_array )
{
    self endon( "death" );

    foreach ( ai in ai_array )
    {
        if ( isdefined( ai.lookat_anims ) )
            ai.lookat_anims["interaction_trigger_override"] = 1;
    }
}

trigger_interaction_common()
{
    self endon( "death" );
    _id_DB82CA1442BF0B68 = self.lookat_anims["common_name"];
    _id_8DE2E21A05FE85A6 = level.interaction_manager.data["actors"];

    foreach ( actor in _id_8DE2E21A05FE85A6 )
    {
        if ( isdefined( actor.lookat_anims["common_name"] ) )
        {
            if ( actor.lookat_anims["common_name"] == _id_DB82CA1442BF0B68 )
                actor.lookat_anims["interaction_trigger_override"] = 1;
        }
    }
}

reconstruct_actor_array()
{
    foreach ( guy in level.interaction_manager.data["actors"] )
    {
        if ( !isdefined( guy ) )
            level.interaction_manager.data["actors"] = scripts\engine\utility::array_remove( level.interaction_manager.data["actors"], guy );
    }
}

add_actor_to_manager()
{
    if ( isdefined( level.interaction_manager ) )
    {
        if ( !scripts\engine\utility::array_contains( level.interaction_manager.data["actors"], self ) )
            level.interaction_manager.data["actors"] = scripts\engine\utility::array_add( level.interaction_manager.data["actors"], self );
    }
}

remove_actor_from_manager()
{
    if ( isdefined( level.interaction_manager ) )
        level.interaction_manager.data["actors"] = scripts\engine\utility::array_remove( level.interaction_manager.data["actors"], self );
}

can_play_nearby_interaction( _id_1134633B00730D29 )
{
    _id_79B7318806EA4CAD = level.player.origin;

    if ( isdefined( _id_1134633B00730D29 ) )
        _id_0F46CECC47292A59 = _id_1134633B00730D29;
    else
        _id_0F46CECC47292A59 = 140.0;

    if ( !isdefined( level.interaction_manager ) )
        return 1;

    if ( isdefined( self.allow_interactions ) && !self.allow_interactions )
        return 0;

    reconstruct_actor_array();

    foreach ( _id_3A1A848B879788A0 in level.interaction_manager.data["actors"] )
    {
        if ( isdefined( _id_3A1A848B879788A0 ) && isdefined( self ) )
        {
            if ( distance( self.origin, _id_3A1A848B879788A0.origin ) < _id_0F46CECC47292A59 )
            {
                if ( scripts\engine\utility::hastag( _id_3A1A848B879788A0.model, "j_spine4" ) && level.player scripts\engine\math::point_in_fov( _id_3A1A848B879788A0 gettagorigin( "j_spine4" ) ) )
                {
                    if ( isdefined( _id_3A1A848B879788A0.is_playing_reaction ) && _id_3A1A848B879788A0.is_playing_reaction )
                        return 0;
                }
            }
        }
    }

    return 1;
}

can_play_nearby_gesture( _id_1134633B00730D29 )
{
    _id_79B7318806EA4CAD = level.player.origin;

    if ( isdefined( _id_1134633B00730D29 ) )
        _id_0F46CECC47292A59 = _id_1134633B00730D29;
    else
        _id_0F46CECC47292A59 = 140.0;

    if ( !isdefined( level.interaction_manager ) )
        return 1;

    reconstruct_actor_array();

    foreach ( _id_3A1A848B879788A0 in level.interaction_manager.data["actors"] )
    {
        if ( isdefined( _id_3A1A848B879788A0 ) && isdefined( self ) )
        {
            if ( self != _id_3A1A848B879788A0 )
            {
                if ( distance( self.origin, _id_3A1A848B879788A0.origin ) < _id_0F46CECC47292A59 )
                {
                    if ( scripts\engine\utility::within_fov( level.player geteye(), level.player.angles, _id_3A1A848B879788A0 gettagorigin( "j_spine4" ), cos( 45 ) ) )
                    {
                        if ( isdefined( _id_3A1A848B879788A0.playing_gesture ) && _id_3A1A848B879788A0.playing_gesture || isdefined( _id_3A1A848B879788A0.is_talking ) && _id_3A1A848B879788A0.is_talking )
                            return 0;

                        if ( isdefined( _id_3A1A848B879788A0.allow_gesture_reactions ) && !_id_3A1A848B879788A0.allow_gesture_reactions )
                            return 0;
                    }
                }
            }
        }
    }

    return 1;
}

interaction_cooldown_timer( _id_1AE86E27377CFED0 )
{
    if ( isdefined( level.interaction_manager ) )
    {
        if ( isdefined( _id_1AE86E27377CFED0.allow_interactions ) && !_id_1AE86E27377CFED0.allow_interactions )
            return;

        reconstruct_actor_array();

        foreach ( actor in level.interaction_manager.data["actors"] )
        {
            if ( isdefined( actor ) )
                actor.allow_interactions = 0;
        }

        for (;;)
        {
            offset = length( level.player.origin - level.player geteye() );
            _id_9523E27B0F4FE3AF = _id_1AE86E27377CFED0.origin + anglestoup( _id_1AE86E27377CFED0.angles ) * offset;

            if ( !level.player scripts\engine\sp\utility::player_looking_at( _id_9523E27B0F4FE3AF, 0.7, 1 ) )
                break;

            waitframe();
        }

        reconstruct_actor_array();
        _id_1AE86E27377CFED0.allow_interactions = 1;

        foreach ( actor in level.interaction_manager.data["actors"] )
        {
            if ( isdefined( actor ) )
                actor.allow_interactions = 1;
        }
    }
}

interaction_reboot_timer()
{
    self endon( "death" );

    if ( isdefined( level.interaction_manager ) )
    {
        if ( isdefined( self.allow_interactions ) && !self.allow_interactions )
            return;

        self.allow_interactions = 0;
        wait 20.0;

        for (;;)
        {
            if ( isdefined( self.reaction_state ) && self.reaction_state != "nag" && self.reaction_state != "busy" )
                break;

            waitframe();
        }

        for (;;)
        {
            offset = length( level.player.origin - level.player geteye() );
            _id_9523E27B0F4FE3AF = self.origin + anglestoup( self.angles ) * offset;

            if ( !level.player scripts\engine\sp\utility::player_looking_at( _id_9523E27B0F4FE3AF, 0.7, 1 ) )
                break;

            waitframe();
        }

        self.allow_interactions = 1;
    }
}

reminder_cooldown_timer( _id_8BABF0E57327D190 )
{
    level endon( "stop_reminders" );
    level endon( "reboot_timer" );
    level.interaction_manager.can_remind = 0;
    wait( _id_8BABF0E57327D190 );
    level.interaction_manager.can_remind = 1;
}

queue_reminder( _id_A7FE730C4B4ED74A, _id_96C8B0FB4E9C029E, _id_649E0F981C46D2EF )
{
    if ( !isdefined( _id_A7FE730C4B4ED74A ) && isdefined( _id_96C8B0FB4E9C029E ) )
        _id_A7FE730C4B4ED74A = "none";

    if ( isdefined( _id_96C8B0FB4E9C029E ) )
        _id_A7FE730C4B4ED74A = _id_A7FE730C4B4ED74A + "+" + _id_96C8B0FB4E9C029E;

    level.interaction_manager.data["reminder_queue"][_id_A7FE730C4B4ED74A] = self;

    if ( isdefined( _id_649E0F981C46D2EF ) )
        self.reminder_animnode = _id_649E0F981C46D2EF;
}

queue_reminder_distance_anim( _id_A7FE730C4B4ED74A, anime, _id_649E0F981C46D2EF, return_anime )
{
    if ( isdefined( _id_A7FE730C4B4ED74A ) )
        _id_A7FE730C4B4ED74A = _id_A7FE730C4B4ED74A + "+" + anime;
    else
        _id_A7FE730C4B4ED74A = anime;

    level.interaction_manager.data["reminder_queue"][_id_A7FE730C4B4ED74A] = self;

    if ( isdefined( _id_649E0F981C46D2EF ) )
        self.reminder_animnode = _id_649E0F981C46D2EF;

    self.use_reminder_anim = 1;

    if ( isdefined( return_anime ) )
        self.return_anime = return_anime;
}

queue_reminder_with_reaction( _id_A7FE730C4B4ED74A, _id_DEB57C2BEB8DB767, registered_interaction, post_reaction_vo_array )
{
    queue_reminder( _id_A7FE730C4B4ED74A );
    self.use_reminder_reaction = 1;
    self.registered_interaction = registered_interaction;
    self.post_reaction_vo_array = post_reaction_vo_array;
    self.reminder_reaction_pointat = _id_DEB57C2BEB8DB767;
}

run_reminders( _id_8BABF0E57327D190 )
{
    level endon( "stop_reminders" );
    level thread reminder_queue_cleanup();
    keys = getarraykeys( level.interaction_manager.data["reminder_queue"] );

    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < keys.size; _id_AC0E594AC96AA3A8++ )
    {
        key = keys[_id_AC0E594AC96AA3A8];
        actor = level.interaction_manager.data["reminder_queue"][key];

        if ( isdefined( actor ) )
        {
            _id_18BE765A87978D5D = strtok( key, "+" );
            _id_B86D3E96869D9E54 = _id_18BE765A87978D5D[0];

            if ( isdefined( actor.use_reminder_reaction ) && actor.use_reminder_reaction )
            {
                if ( isdefined( actor.registered_interaction ) && isdefined( actor.post_reaction_vo_array ) )
                    actor thread scripts\sp\interaction::play_smart_interaction( actor.registered_interaction, _id_B86D3E96869D9E54, actor.post_reaction_vo_array );
                else if ( isdefined( self.post_reaction_func ) && isdefined( self.post_reaction_vo ) )
                    self thread [[ self.post_reaction_func ]]( undefined, undefined, self.post_reaction_vo );
                else
                    actor thread play_gesture_reaction( 85.0, 50.0, _id_B86D3E96869D9E54, 1, actor.reminder_reaction_pointat );
            }
            else if ( isdefined( actor.use_reminder_anim ) && actor.use_reminder_anim )
            {
                anime = undefined;
                _id_A063A72464A04A79 = undefined;

                if ( _id_18BE765A87978D5D.size > 1 )
                {
                    anime = _id_18BE765A87978D5D[1];
                    _id_A063A72464A04A79 = _id_B86D3E96869D9E54;
                }
                else
                    anime = _id_18BE765A87978D5D[0];

                if ( isdefined( actor.reminder_animnode ) )
                    actor.reminder_animnode thread play_reminder_anim_distance( actor, 85.0, 50.0, anime, undefined, 1 );
                else
                    actor thread play_reminder_anim_distance( actor, 85.0, 50.0, anime, undefined, 1 );
            }
        }
    }

    wait( _id_8BABF0E57327D190 );

    while ( level.interaction_manager.pause_remind )
        waitframe();

    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < keys.size; _id_AC0E594AC96AA3A8++ )
    {
        key = keys[_id_AC0E594AC96AA3A8];
        actor = level.interaction_manager.data["reminder_queue"][key];

        if ( isdefined( actor ) )
        {
            _id_18BE765A87978D5D = strtok( key, "+" );
            _id_B86D3E96869D9E54 = _id_18BE765A87978D5D[0];

            if ( _id_18BE765A87978D5D.size > 1 )
            {
                if ( isdefined( actor.reminder_animnode ) )
                {
                    actor.reminder_animnode notify( "stop_loop" );
                    actor.reminder_animnode thread scripts\common\anim::anim_single_solo( actor, _id_18BE765A87978D5D[1] );
                    wait_time = getanimlength( actor scripts\engine\utility::getanim( _id_18BE765A87978D5D[1] ) );
                    actor thread scripts\engine\sp\utility::notify_delay( "reminder_anim_done", wait_time );

                    if ( isdefined( actor.return_anime ) )
                        actor.reminder_animnode scripts\engine\utility::delaythread( wait_time, scripts\common\anim::anim_loop_solo, actor, actor.return_anime, "stop_loop" );
                }
                else
                {
                    actor notify( "stop_loop" );
                    actor thread scripts\common\anim::anim_single_solo( actor, _id_18BE765A87978D5D[1] );
                    wait_time = getanimlength( actor scripts\engine\utility::getanim( _id_18BE765A87978D5D[1] ) );
                    actor thread scripts\engine\sp\utility::notify_delay( "reminder_anim_done", wait_time );

                    if ( isdefined( actor.return_anime ) )
                        actor scripts\engine\utility::delaythread( wait_time, scripts\common\anim::anim_loop_solo, actor, actor.return_anime, "stop_loop" );
                }

                if ( _id_B86D3E96869D9E54 != "none" )
                {
                    if ( soundexists( _id_B86D3E96869D9E54 ) )
                        actor scripts\engine\sp\utility::smart_dialogue( _id_B86D3E96869D9E54 );
                }
            }
            else if ( !soundexists( key ) )
                actor scripts\engine\sp\utility::smart_dialogue( key );

            actor notify( "reminder_done" );
            actor.reminder_animnode = undefined;
            level.interaction_manager.data["reminder_queue"][key] = undefined;
            level.interaction_manager.can_remind = 0;
            wait( _id_8BABF0E57327D190 );
            level.interaction_manager.can_remind = 1;
        }

        while ( level.interaction_manager.pause_remind )
            waitframe();
    }

    level notify( "reminders_done" );
}

reminder_queue_cleanup()
{
    level scripts\engine\utility::waittill_any( "stop_reminders", "reminders_done" );
    level.interaction_manager.data["reminder_queue"] = [];
}

stop_reminders()
{
    level notify( "stop_reminders" );
    level notify( "reminders_done" );
    level.interaction_manager.data["reminder_queue"] = [];
    reconstruct_actor_array();

    foreach ( guy in level.interaction_manager.data["actors"] )
    {
        if ( isdefined( guy ) )
        {
            guy.use_reminder_reaction = undefined;
            guy.registered_interaction = undefined;
            guy.post_reaction_vo_array = undefined;
            guy.reminder_reaction_pointat = undefined;
            guy.reminder_animnode = undefined;
            guy.use_reminder_anim = undefined;
        }
    }
}

pause_reminders()
{
    level.interaction_manager.pause_remind = 1;
}

continue_reminders()
{
    level.interaction_manager.pause_remind = 0;
}

play_state_based_interaction( _id_52C833B9B9EB5F50, optional_scripted_struct, _id_D7BBB055FC183403, _id_1AC1F24F36EF97C6 )
{
    if ( !isdefined( _id_D7BBB055FC183403 ) )
        _id_D7BBB055FC183403 = "casual";

    if ( isdefined( self.gender ) && issubstr( self.gender, "female" ) )
        _id_D7BBB055FC183403 = "busy";

    _id_CBE4CF073833D7A1 = _id_52C833B9B9EB5F50 + "_" + "casual";

    if ( _id_D7BBB055FC183403 == "casual" || _id_D7BBB055FC183403 == "nag" )
        _id_CBE4CF073833D7A1 = _id_52C833B9B9EB5F50 + "_" + _id_D7BBB055FC183403;

    self.reaction_state_basename = _id_52C833B9B9EB5F50;
    self.reaction_state = _id_D7BBB055FC183403;

    if ( _id_D7BBB055FC183403 == "nag" )
    {
        thread scripts\sp\interaction::play_interaction_with_states( _id_CBE4CF073833D7A1, optional_scripted_struct );
        self.allow_interactions = 0;
        self.reaction_state = _id_D7BBB055FC183403;
        thread scripts\engine\sp\utility::gesture_stop( 0.7 );
        thread reaction_look_distance_based();
        thread reaction_state_busy_loop( _id_1AC1F24F36EF97C6, 1 );
        return;
    }
    else if ( _id_D7BBB055FC183403 == "busy" )
    {
        thread scripts\sp\interaction::play_interaction_with_states( _id_CBE4CF073833D7A1, optional_scripted_struct );
        self.allow_interactions = 0;
        self.reaction_state = _id_D7BBB055FC183403;
        thread scripts\engine\sp\utility::gesture_stop( 0.7 );
        thread reaction_look_distance_based();
        thread reaction_state_busy_loop( _id_1AC1F24F36EF97C6 );
        return;
    }

    thread scripts\sp\interaction::play_interaction_with_states( _id_CBE4CF073833D7A1, optional_scripted_struct );
}

stop_state_based_interaction()
{
    if ( !isdefined( self.is_cheap ) )
        thread scripts\sp\interaction::interaction_end();
    else
        self notify( "reaction_end" );

    self notify( "change_reaction_state" );
    self.reaction_state = undefined;
    self.allow_interactions = undefined;
    self.reaction_state_basename = undefined;
    thread scripts\engine\sp\utility::gesture_stop( 0.7 );
}

set_reaction_state( reaction_state, _id_1AC1F24F36EF97C6 )
{
    if ( !isdefined( self.reaction_state ) )
        return;

    if ( !isdefined( reaction_state ) )
        return;

    if ( !isdefined( self.reaction_state_basename ) )
        return;

    self notify( "change_reaction_state" );
    self notify( "stop_reaction_look" );

    if ( reaction_state != "nag" && reaction_state != "busy" )
    {
        self.allow_interactions = 1;
        thread scripts\engine\sp\utility::gesture_stop( 0.7 );
        self.interaction_name = self.reaction_state_basename + "_" + reaction_state;
        self.reaction_state = reaction_state;
    }
    else if ( reaction_state == "nag" )
    {
        self.allow_interactions = 0;
        self.reaction_state = reaction_state;
        thread scripts\engine\sp\utility::gesture_stop( 0.7 );
        thread reaction_look_distance_based();
        thread reaction_state_busy_loop( _id_1AC1F24F36EF97C6, 1 );
    }
    else
    {
        self.allow_interactions = 0;
        self.reaction_state = reaction_state;
        thread scripts\engine\sp\utility::gesture_stop( 0.7 );
        thread reaction_look_distance_based();
        thread reaction_state_busy_loop( _id_1AC1F24F36EF97C6 );
    }
}

reaction_state_busy_loop( _id_1AC1F24F36EF97C6, _id_ACEEB014451BD535 )
{
    self endon( "change_reaction_state" );

    for (;;)
    {
        thread gesture_reaction_distance_based( _id_1AC1F24F36EF97C6, _id_ACEEB014451BD535 );
        self waittill( "end_gesture_reaction_distance_based" );

        for (;;)
        {
            if ( distance2d( self.origin, level.player.origin ) >= level.state_interactions[self.interaction_name].scene["trigger_radius"] + 50.0 )
                break;

            waitframe();
        }
    }
}

set_all_reaction_states( state, _id_DB1CFDABE22AF09A )
{
    switch ( state )
    {
        case "busy":
        case "nag":
        case "alert":
        case "casual":
            foreach ( actor in level.interaction_manager.data["actors"] )
                actor thread set_reaction_state( state, _id_DB1CFDABE22AF09A );

            break;
    }
}

reaction_look_distance_based( _id_BDB82666C7EEA3EF, _id_1166AAB82DBCCE02, _id_26DB558B4DC61586, _id_5CD6B577CB6E78A7 )
{
    self endon( "death" );
    self notify( "stop_reaction_look" );
    self endon( "stop_reaction_look" );
    self endon( "stop_smart_reaction" );
    _id_AE39BB9175285A00 = 85.0;

    if ( isdefined( _id_BDB82666C7EEA3EF ) )
        _id_AE39BB9175285A00 = _id_BDB82666C7EEA3EF;

    if ( !isdefined( _id_1166AAB82DBCCE02 ) )
        _id_1166AAB82DBCCE02 = level.player;

    if ( !isdefined( _id_26DB558B4DC61586 ) )
        _id_26DB558B4DC61586 = 0.7;

    wait( _id_26DB558B4DC61586 );

    if ( isdefined( self.reaction_state_basename ) )
    {
        if ( isdefined( level.state_interactions[self.interaction_name].scene["trigger_radius"] ) )
            _id_AE39BB9175285A00 = level.state_interactions[self.interaction_name].scene["trigger_radius"] * 1.2;
    }

    waitframe();

    if ( isdefined( _id_5CD6B577CB6E78A7 ) && _id_5CD6B577CB6E78A7 )
        thread scripts\engine\sp\utility::gesture_follow_lookat( _id_1166AAB82DBCCE02, 0.5, 0.5 );
    else
        thread scripts\engine\sp\utility::gesture_follow_lookat_natural( _id_1166AAB82DBCCE02, 0.5, 0.5, _id_AE39BB9175285A00 );

    while ( !isdefined( self.is_head_tracking ) )
        wait 0.05;

    thread scripts\engine\sp\utility::gesture_follow_eyes( _id_1166AAB82DBCCE02 );
    wait( randomfloatrange( 4.0, 6.0 ) );
    _id_8F90FB5E2A349239 = 1;
    _id_F7BD3BEB65D5ED2C = 1;

    for (;;)
    {
        if ( distance2d( self.origin, _id_1166AAB82DBCCE02.origin ) <= _id_AE39BB9175285A00 )
        {
            if ( !_id_F7BD3BEB65D5ED2C )
            {
                thread scripts\asm\gesture\script_funcs::ai_gesture_lookat_weight_up( 0.5 );
                thread scripts\engine\sp\utility::gesture_follow_eyes( _id_1166AAB82DBCCE02 );
                _id_F7BD3BEB65D5ED2C = 1;
            }
        }
        else if ( distance2d( self.origin, _id_1166AAB82DBCCE02.origin ) >= _id_AE39BB9175285A00 )
        {
            if ( _id_F7BD3BEB65D5ED2C )
            {
                thread scripts\asm\gesture\script_funcs::ai_gesture_lookat_weight_down( 1.0 );
                thread scripts\engine\sp\utility::gesture_eyes_stop( 0.7 );
                _id_F7BD3BEB65D5ED2C = 0;
            }
        }

        waitframe();
    }
}

gesture_reaction_distance_based( _id_1AC1F24F36EF97C6, _id_ACEEB014451BD535 )
{
    self endon( "death" );
    self endon( "stop_reaction" );
    self endon( "reaction_end" );
    self endon( "stop_reaction_look" );
    _id_AE39BB9175285A00 = 50.0;

    if ( isdefined( self.reaction_state_basename ) )
    {
        if ( isdefined( level.state_interactions[self.interaction_name].scene["trigger_radius"] ) )
            _id_AE39BB9175285A00 = level.state_interactions[self.interaction_name].scene["trigger_radius"];
    }

    waittill_gestureconditionsmet( _id_AE39BB9175285A00 );
    thread scripts\engine\sp\utility::gesture_simple( "salute" );
    _id_765485F31A421AFF = undefined;

    if ( isdefined( _id_ACEEB014451BD535 ) && _id_ACEEB014451BD535 )
    {
        switch ( _id_1AC1F24F36EF97C6 )
        {
            case "bridge_elev_doors":
            case "cic":
            case "dropship":
            case "bridge_elev":
            case "ftl":
            case "opsmap":
            case "captains":
            case "lounge":
            case "jackal":
            case "bridge":
                _id_BE48AC50EEF17AF1 = level.interaction_manager.data["reminder_vo"][_id_1AC1F24F36EF97C6][self.gender];
                _id_AD084B6EEE8B803D = level.interaction_manager.data["reminder_vo"][_id_1AC1F24F36EF97C6]["spent_" + self.gender];

                if ( _id_BE48AC50EEF17AF1.size < 1 && _id_AD084B6EEE8B803D.size > 0 )
                {
                    level.interaction_manager.data["reminder_vo"][_id_1AC1F24F36EF97C6][self.gender] = _id_AD084B6EEE8B803D;
                    level.interaction_manager.data["reminder_vo"][_id_1AC1F24F36EF97C6]["spent_" + self.gender] = [];
                    _id_BE48AC50EEF17AF1 = level.interaction_manager.data["reminder_vo"][_id_1AC1F24F36EF97C6][self.gender];
                    _id_AD084B6EEE8B803D = level.interaction_manager.data["reminder_vo"][_id_1AC1F24F36EF97C6]["spent_" + self.gender];
                }

                if ( _id_BE48AC50EEF17AF1.size < 1 && _id_AD084B6EEE8B803D.size < 1 )
                    _id_765485F31A421AFF = undefined;
                else
                {
                    _id_765485F31A421AFF = _id_BE48AC50EEF17AF1[randomint( _id_BE48AC50EEF17AF1.size )];
                    level.interaction_manager.data["reminder_vo"][_id_1AC1F24F36EF97C6]["spent_" + self.gender] = scripts\engine\utility::array_add( level.interaction_manager.data["reminder_vo"][_id_1AC1F24F36EF97C6]["spent_" + self.gender], _id_765485F31A421AFF );
                    level.interaction_manager.data["reminder_vo"][_id_1AC1F24F36EF97C6][self.gender] = scripts\engine\utility::array_remove( level.interaction_manager.data["reminder_vo"][_id_1AC1F24F36EF97C6][self.gender], _id_765485F31A421AFF );
                }

                break;
        }
    }
    else
    {
        _id_BE48AC50EEF17AF1 = level.interaction_manager.data["busy_vo"][self.gender];
        _id_AD084B6EEE8B803D = level.interaction_manager.data["busy_vo"]["spent_" + self.gender];

        if ( _id_BE48AC50EEF17AF1.size < 1 && _id_AD084B6EEE8B803D.size > 0 )
        {
            level.interaction_manager.data["busy_vo"][self.gender] = _id_AD084B6EEE8B803D;
            level.interaction_manager.data["busy_vo"]["spent_" + self.gender] = [];
            _id_BE48AC50EEF17AF1 = level.interaction_manager.data["busy_vo"][self.gender];
            _id_AD084B6EEE8B803D = level.interaction_manager.data["busy_vo"]["spent_" + self.gender];
        }

        if ( _id_BE48AC50EEF17AF1.size < 1 && _id_AD084B6EEE8B803D.size < 1 )
            _id_765485F31A421AFF = undefined;
        else
        {
            _id_765485F31A421AFF = _id_BE48AC50EEF17AF1[randomint( _id_BE48AC50EEF17AF1.size )];
            level.interaction_manager.data["busy_vo"]["spent_" + self.gender] = scripts\engine\utility::array_add( level.interaction_manager.data["busy_vo"]["spent_" + self.gender], _id_765485F31A421AFF );
            level.interaction_manager.data["busy_vo"][self.gender] = scripts\engine\utility::array_remove( level.interaction_manager.data["busy_vo"][self.gender], _id_765485F31A421AFF );
        }
    }

    if ( isdefined( _id_765485F31A421AFF ) )
    {
        scripts\engine\sp\utility::smart_dialogue( _id_765485F31A421AFF );

        if ( isdefined( _id_ACEEB014451BD535 ) && _id_ACEEB014451BD535 )
            level thread reminder_cooldown_timer( 90.0 );
    }

    self.playing_gesture = 1;
    self notify( "end_gesture_reaction_distance_based" );
    wait 15.0;
    self.playing_gesture = 0;
}

print_reaction_state()
{
    self endon( "death" );
    self endon( "stop_reaction" );
    self endon( "reaction_end" );

    for (;;)
    {
        if ( isdefined( self.allow_gesture_reactions ) )
        {

        }

        if ( isdefined( self.gender ) )
        {

        }

        if ( isdefined( self.animname ) )
        {

        }

        waitframe();
    }
}

play_gesture_reaction( _id_6EA4BFDBC4ECB4AB, _id_D0DEF05D989B3BE4, _id_F0DD62735E42C1E2, _id_42B1F24D780B1894, _id_D6026ECFC2884700 )
{
    self endon( "death" );
    self endon( "stop_reaction" );
    self endon( "reaction_end" );
    self endon( "stop_gesture_reaction" );
    self endon( "stop_smart_reaction" );
    thread add_actor_to_manager();

    if ( isdefined( self.allow_gesture_reactions ) && !self.allow_gesture_reactions )
        self.allow_gesture_reactions = 1;

    if ( !isdefined( _id_42B1F24D780B1894 ) )
        _id_42B1F24D780B1894 = 0;

    if ( !isdefined( _id_6EA4BFDBC4ECB4AB ) )
        _id_6EA4BFDBC4ECB4AB = 150.0;

    if ( !isdefined( _id_D0DEF05D989B3BE4 ) )
        _id_D0DEF05D989B3BE4 = _id_6EA4BFDBC4ECB4AB * 0.5;

    if ( !isdefined( self.is_head_tracking ) || isdefined( self.is_head_tracking ) && !self.is_head_tracking )
        thread reaction_look_distance_based( _id_6EA4BFDBC4ECB4AB );

    waittill_gestureconditionsmet( _id_D0DEF05D989B3BE4 );
    play_gesture_reaction_anim( _id_D6026ECFC2884700 );
    play_interaction_vo( _id_F0DD62735E42C1E2, _id_42B1F24D780B1894 );
}

waittill_gestureconditionsmet( _id_D0DEF05D989B3BE4 )
{
    self endon( "death" );
    self endon( "stop_reaction" );
    self endon( "reaction_end" );
    self endon( "stop_gesture_reaction" );
    self endon( "stop_smart_reaction" );
    _id_162EA2F613E00777 = 1;

    for (;;)
    {
        if ( isplayerfocus( _id_D0DEF05D989B3BE4 ) && canplaygesture( _id_D0DEF05D989B3BE4 ) )
        {
            _id_605BF278CF086152 = scripts\engine\utility::flatten_vector( anglestoright( self gettagangles( "j_head" ) ) );
            _id_518C6A4B170E645D = scripts\engine\utility::flatten_vector( vectornormalize( level.player geteye() - self gettagorigin( "j_head" ) ) );
            dot = vectordot( _id_605BF278CF086152, _id_518C6A4B170E645D );

            if ( dot >= 0.8 )
                break;
        }

        waitframe();
    }
}

isplayerfocus( _id_FF7F67E1369B3C2D )
{
    self endon( "death" );

    if ( isdefined( self.is_cheap ) )
        _id_F1FCCDA1AD4EDF59 = self gettagorigin( "j_head" );
    else if ( isai( self ) )
        _id_F1FCCDA1AD4EDF59 = self geteye();
    else if ( isdefined( self.origin ) )
        _id_F1FCCDA1AD4EDF59 = self.origin;
    else
        return 0;

    _id_EFB844234AC72B75 = level.player geteye();
    _id_42A02D3C4BCF914B = level.player getplayerangles();

    if ( distance2d( self.origin, level.player.origin ) <= _id_FF7F67E1369B3C2D )
    {
        if ( scripts\engine\utility::within_fov( _id_EFB844234AC72B75, _id_42A02D3C4BCF914B, _id_F1FCCDA1AD4EDF59, cos( 25 ) ) )
            return 1;
    }

    return 0;
}

canplaygesture( _id_1134633B00730D29 )
{
    if ( !isdefined( self.allow_gesture_reactions ) || isdefined( self.allow_gesture_reactions ) && self.allow_gesture_reactions )
    {
        if ( !isdefined( self.gesture_reaction_queue ) )
        {
            if ( can_play_nearby_gesture( _id_1134633B00730D29 ) )
                return 1;
        }
    }

    return 0;
}

#using_animtree("generic_human");

play_gesture_reaction_anim( _id_D6026ECFC2884700 )
{
    self.playing_gesture = 1;

    if ( !isdefined( self.is_cheap ) )
    {
        if ( isdefined( _id_D6026ECFC2884700 ) )
            thread scripts\engine\sp\utility::gesture_point( _id_D6026ECFC2884700 );
        else
            thread scripts\engine\sp\utility::gesture_simple( "salute" );
    }
    else
        scripts\engine\sp\utility::gesture_custom( %shipcrib_gst_head_salute_01 );

    self.playing_gesture = undefined;
}

play_interaction_vo( _id_A063A72464A04A79, _id_42B1F24D780B1894 )
{
    if ( isdefined( _id_A063A72464A04A79 ) )
    {
        if ( isdefined( _id_42B1F24D780B1894 ) && _id_42B1F24D780B1894 )
        {
            force_reminder_delay( 30 );
            clear_reminder( _id_A063A72464A04A79 );
        }

        define_face_anim_if_exists( _id_A063A72464A04A79 );
        self.is_talking = 1;
        play_smart_dialog_if_exists( _id_A063A72464A04A79 );
        self.is_talking = undefined;
    }
}

define_face_anim_if_exists( _id_A063A72464A04A79 )
{
    if ( !isdefined( self.animname ) )
        self.animname = "generic";

    if ( !isdefined( level.scr_face[self.animname] ) )
        level.scr_face[self.animname] = [];

    if ( isarray( _id_A063A72464A04A79 ) )
    {
        foreach ( dialog in _id_A063A72464A04A79 )
        {
            if ( !isdefined( level.scr_face[self.animname][dialog] ) )
            {
                if ( isdefined( level.shipcrib_linebook_anims ) && isdefined( self.gender ) )
                {
                    if ( isdefined( level.shipcrib_linebook_anims[self.gender] ) && isdefined( level.shipcrib_linebook_anims[self.gender][dialog] ) )
                        level.scr_face[self.animname][dialog] = level.shipcrib_linebook_anims[self.gender][dialog];
                }
            }
        }
    }
    else if ( !isdefined( level.scr_face[self.animname][_id_A063A72464A04A79] ) )
    {
        if ( isdefined( level.shipcrib_linebook_anims ) && isdefined( self.gender ) )
        {
            if ( isdefined( level.shipcrib_linebook_anims[self.gender] ) && isdefined( level.shipcrib_linebook_anims[self.gender][_id_A063A72464A04A79] ) )
                level.scr_face[self.animname][_id_A063A72464A04A79] = level.shipcrib_linebook_anims[self.gender][_id_A063A72464A04A79];
        }
    }
}

play_smart_dialog_if_exists( _id_A063A72464A04A79 )
{
    _id_409B07AAB3875801 = undefined;

    if ( isarray( _id_A063A72464A04A79 ) )
    {
        for ( index = 0; index < _id_A063A72464A04A79.size; index++ )
        {
            action = _id_A063A72464A04A79[index];

            if ( isstring( action ) )
            {
                define_face_anim_if_exists( action );

                if ( soundexists( action ) )
                {
                    if ( issubstr( action, "plr" ) )
                        level.player scripts\engine\sp\utility::smart_player_dialogue( action );
                    else
                    {
                        _id_409B07AAB3875801 = main_cast_dialog_actor_check( action );

                        if ( isdefined( _id_409B07AAB3875801 ) )
                            _id_409B07AAB3875801 scripts\engine\sp\utility::smart_dialogue( action );
                        else
                            scripts\engine\sp\utility::smart_dialogue( action );
                    }
                }

                continue;
            }

            if ( isnumber( action ) )
                wait( action );
        }
    }
    else
    {
        action = _id_A063A72464A04A79;

        if ( isstring( action ) )
        {
            define_face_anim_if_exists( action );

            if ( soundexists( action ) )
            {
                if ( issubstr( action, "plr" ) )
                    level.player scripts\engine\sp\utility::smart_player_dialogue( action );
                else
                {
                    _id_409B07AAB3875801 = main_cast_dialog_actor_check( action );

                    if ( isdefined( _id_409B07AAB3875801 ) )
                        _id_409B07AAB3875801 scripts\engine\sp\utility::smart_dialogue( action );
                    else
                        scripts\engine\sp\utility::smart_dialogue( action );
                }
            }
        }
    }
}

force_reminder_delay( delay_time )
{
    level notify( "reboot_timer" );
    waitframe();
    level thread reminder_cooldown_timer( delay_time );
}

clear_reminder( _id_FF9BE5F705175100 )
{
    if ( isdefined( level.interaction_manager ) )
    {
        if ( isdefined( level.interaction_manager.data["reminder_queue"] ) )
        {
            if ( scripts\engine\utility::array_contains( level.interaction_manager.data["reminder_queue"], self ) )
                level.interaction_manager.data["reminder_queue"][_id_FF9BE5F705175100] = undefined;
        }
    }
}

play_group_gesture_reaction( _id_5F7A2F6EF630C3E8, _id_6EA4BFDBC4ECB4AB, _id_D0DEF05D989B3BE4, _id_7551DEA02427D9CD )
{
    foreach ( actor in _id_5F7A2F6EF630C3E8 )
    {
        actor endon( "death" );
        actor endon( "stop_reaction" );
        actor endon( "reaction_end" );
        actor endon( "stop_gesture_reaction" );
        actor endon( "stop_smart_reaction" );
    }

    foreach ( actor in _id_5F7A2F6EF630C3E8 )
        actor thread add_actor_to_manager();

    thread reaction_group_look_distance_based( _id_5F7A2F6EF630C3E8, _id_6EA4BFDBC4ECB4AB );
    waittill_group_gestureconditionsmet( _id_5F7A2F6EF630C3E8, _id_D0DEF05D989B3BE4 );
    play_group_gesture_performance( _id_5F7A2F6EF630C3E8, _id_7551DEA02427D9CD, _id_D0DEF05D989B3BE4 );

    foreach ( actor in _id_5F7A2F6EF630C3E8 )
    {
        _id_DE831916FF6D10EA = randomfloatrange( 0, 1 );
        _id_DE831816FF6D0EB7 = randomfloatrange( 0.5, 1.5 );
        actor scripts\engine\utility::delaythread( _id_DE831916FF6D10EA, scripts\engine\sp\utility::gesture_stop, _id_DE831816FF6D0EB7 );
    }
}

waittill_group_gestureconditionsmet( _id_5F7A2F6EF630C3E8, _id_BE578DD3B5751FAF )
{
    _id_162EA2F613E00777 = 1;
    _id_5160014CE4EC2684 = create_middle_ent( _id_5F7A2F6EF630C3E8 );
    _id_5F7A2F6EF630C3E8 = scripts\engine\utility::array_add( _id_5F7A2F6EF630C3E8, _id_5160014CE4EC2684 );

    while ( _id_162EA2F613E00777 )
    {
        foreach ( _id_F90358454413407F in _id_5F7A2F6EF630C3E8 )
        {
            if ( _id_F90358454413407F isplayerfocus( _id_BE578DD3B5751FAF ) )
            {
                _id_162EA2F613E00777 = 0;
                break;
            }
        }

        waitframe();
    }
}

create_middle_ent( _id_4A6E62AA769AD290 )
{
    counter = 0;
    _id_41A13188066566F6 = ( 0, 0, 0 );

    foreach ( _id_F90358454413407F in _id_4A6E62AA769AD290 )
    {
        _id_41A13188066566F6 = _id_41A13188066566F6 + _id_F90358454413407F.origin;
        counter++;
    }

    midpoint = _id_41A13188066566F6 / counter;
    _id_94BCAD02F23DE46E = scripts\engine\utility::spawn_tag_origin( midpoint, ( 0, 0, 0 ) );
    return _id_94BCAD02F23DE46E;
}

play_group_gesture_performance( _id_5F7A2F6EF630C3E8, _id_0EFE1C4B2620F108, _id_BE578DD3B5751FAF )
{
    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_5F7A2F6EF630C3E8.size; _id_AC0E594AC96AA3A8++ )
    {
        if ( isdefined( _id_5F7A2F6EF630C3E8[_id_AC0E594AC96AA3A8] ) && isdefined( _id_0EFE1C4B2620F108[_id_AC0E594AC96AA3A8] ) )
        {
            _id_5F7A2F6EF630C3E8[_id_AC0E594AC96AA3A8] play_gesture_reaction_anim();
            _id_5F7A2F6EF630C3E8[_id_AC0E594AC96AA3A8] play_interaction_vo( _id_0EFE1C4B2620F108[_id_AC0E594AC96AA3A8] );
        }

        if ( !group_isplayerfocus( _id_BE578DD3B5751FAF, _id_5F7A2F6EF630C3E8 ) )
            break;
    }
}

group_isplayerfocus( _id_BE578DD3B5751FAF, _id_4A6E62AA769AD290 )
{
    foreach ( _id_F90358454413407F in _id_4A6E62AA769AD290 )
    {
        if ( _id_F90358454413407F isplayerfocus( _id_BE578DD3B5751FAF ) )
            return 1;
    }

    return 0;
}

reaction_group_look_distance_based( _id_5F7A2F6EF630C3E8, _id_BDB82666C7EEA3EF, _id_1166AAB82DBCCE02 )
{
    foreach ( actor in _id_5F7A2F6EF630C3E8 )
    {
        actor endon( "death" );
        actor endon( "stop_reaction" );
        actor endon( "reaction_end" );
        actor endon( "stop_reaction_look" );
        actor endon( "stop_smart_reaction" );
    }

    _id_AE39BB9175285A00 = 85.0;

    if ( isdefined( _id_BDB82666C7EEA3EF ) )
        _id_AE39BB9175285A00 = _id_BDB82666C7EEA3EF;

    if ( !isdefined( _id_1166AAB82DBCCE02 ) )
        _id_1166AAB82DBCCE02 = level.player;

    initialize_group_lookat( _id_5F7A2F6EF630C3E8, _id_1166AAB82DBCCE02 );
    _id_D63B4694E0DF67FA = create_middle_ent( _id_5F7A2F6EF630C3E8 );

    for (;;)
    {
        update_lookat_status( _id_5F7A2F6EF630C3E8, _id_D63B4694E0DF67FA, _id_1166AAB82DBCCE02, _id_BDB82666C7EEA3EF );
        update_lookat_weights( _id_5F7A2F6EF630C3E8 );
        update_lookat_delays( _id_5F7A2F6EF630C3E8 );
        waitframe();
    }
}

initialize_group_lookat( _id_5F7A2F6EF630C3E8, _id_1166AAB82DBCCE02 )
{
    foreach ( actor in _id_5F7A2F6EF630C3E8 )
    {
        actor scripts\engine\sp\utility::gesture_follow_lookat( _id_1166AAB82DBCCE02, 0.15, 0.7 );
        actor.lookat_enabled = 0;
        actor.lookat_delay = 0;
    }

    waitframe();

    foreach ( actor in _id_5F7A2F6EF630C3E8 )
        actor thread scripts\engine\sp\utility::gesture_eye_dart_loop( _id_1166AAB82DBCCE02 );
}

update_lookat_status( _id_5F7A2F6EF630C3E8, _id_205208A2014184F5, _id_968583169A58B079, dist )
{
    if ( distance2d( _id_205208A2014184F5.origin, _id_968583169A58B079.origin ) <= dist )
        enable_lookat( _id_5F7A2F6EF630C3E8 );
    else
        disable_lookat( _id_5F7A2F6EF630C3E8 );
}

enable_lookat( _id_5F7A2F6EF630C3E8 )
{
    foreach ( actor in _id_5F7A2F6EF630C3E8 )
    {
        if ( !actor.lookat_enabled )
            actor create_lookat_delay();

        actor.lookat_enabled = 1;
    }
}

disable_lookat( _id_5F7A2F6EF630C3E8 )
{
    foreach ( actor in _id_5F7A2F6EF630C3E8 )
    {
        if ( actor.lookat_enabled )
            actor create_lookat_delay();

        actor.lookat_enabled = 0;
    }
}

update_lookat_weights( _id_5F7A2F6EF630C3E8 )
{
    foreach ( actor in _id_5F7A2F6EF630C3E8 )
    {
        if ( actor.lookat_delay <= 0 )
        {
            if ( actor.lookat_enabled )
            {
                actor increase_lookat_weight();
                continue;
            }

            actor decrease_lookat_weight();
        }
    }
}

update_lookat_delays( _id_5F7A2F6EF630C3E8 )
{
    foreach ( actor in _id_5F7A2F6EF630C3E8 )
    {
        if ( actor.lookat_delay > 0 )
            actor.lookat_delay = actor.lookat_delay - 0.05;
    }
}

create_lookat_delay()
{
    self.lookat_delay = randomfloatrange( 0, 1 );
}

clear_lookat_delay()
{
    self.lookat_delay = 0;
}

increase_lookat_weight()
{
    thread scripts\asm\gesture\script_funcs::ai_gesture_lookat_weight_up( 0.7 );
}

decrease_lookat_weight()
{
    thread scripts\asm\gesture\script_funcs::ai_gesture_lookat_weight_down( 0.7 );
}

convertvar_toarray( _id_E1FDB9E31A9005B0 )
{
    if ( !isarray( _id_E1FDB9E31A9005B0 ) )
        return [ _id_E1FDB9E31A9005B0 ];
    else
        return _id_E1FDB9E31A9005B0;
}

play_gesture_reaction_loop( _id_6EA4BFDBC4ECB4AB, _id_D0DEF05D989B3BE4, _id_BF603F3708EA2D46, _id_42B1F24D780B1894, _id_D6026ECFC2884700 )
{
    self endon( "death" );
    self endon( "stop_reaction" );
    self endon( "reaction_end" );
    _id_003EB3D32007B7B5 = [];
    _id_0EFE1C4B2620F108 = _id_BF603F3708EA2D46;

    for (;;)
    {
        if ( _id_0EFE1C4B2620F108.size <= 0 )
        {
            _id_003EB3D32007B7B5 = [];
            _id_0EFE1C4B2620F108 = _id_BF603F3708EA2D46;
        }

        _id_A0DC29CFF035E549 = _id_0EFE1C4B2620F108[randomint( _id_0EFE1C4B2620F108.size )];
        play_gesture_reaction( _id_6EA4BFDBC4ECB4AB, _id_D0DEF05D989B3BE4, _id_A0DC29CFF035E549, _id_42B1F24D780B1894, _id_D6026ECFC2884700 );

        for (;;)
        {
            if ( distance2d( self.origin, level.player.origin ) >= _id_6EA4BFDBC4ECB4AB )
                break;

            waitframe();
        }

        waitframe();
        _id_003EB3D32007B7B5 = scripts\engine\utility::array_add( _id_003EB3D32007B7B5, _id_A0DC29CFF035E549 );
        _id_0EFE1C4B2620F108 = scripts\engine\utility::array_remove( _id_0EFE1C4B2620F108, _id_A0DC29CFF035E549 );
    }
}

stop_gesture_reaction()
{
    self notify( "stop_gesture_reaction" );
    self notify( "stop_reaction_look" );
    self notify( "stop_gesture_reaction_set" );
    self.gesture_reaction_queue = undefined;
    scripts\engine\sp\utility::gesture_stop( 0.7 );
}

stop_queued_reaction()
{
    self notify( "stop_smart_reaction" );
    thread scripts\sp\interaction::interaction_end();
}

queue_gesture_reaction( _id_A7FE730C4B4ED74A )
{
    if ( !isdefined( self.gesture_reaction_queue ) )
        self.gesture_reaction_queue = [];

    _id_6F47D4848047C403 = _id_A7FE730C4B4ED74A;

    if ( isarray( _id_A7FE730C4B4ED74A ) )
        _id_6F47D4848047C403 = _id_A7FE730C4B4ED74A[0];

    self.gesture_reaction_queue[_id_6F47D4848047C403] = _id_A7FE730C4B4ED74A;
}

play_gesture_reaction_set( _id_6EA4BFDBC4ECB4AB, _id_D0DEF05D989B3BE4 )
{
    self endon( "death" );
    self endon( "stop_reaction" );
    self endon( "reaction_end" );
    self endon( "stop_gesture_reaction_set" );
    self notify( "stop_reaction_look" );
    scripts\engine\sp\utility::gesture_stop( 0.7 );
    thread add_actor_to_manager();
    self.allow_gesture_reactions = 1;

    if ( !isdefined( _id_6EA4BFDBC4ECB4AB ) )
        _id_6EA4BFDBC4ECB4AB = 150.0;

    if ( !isdefined( _id_D0DEF05D989B3BE4 ) )
        _id_D0DEF05D989B3BE4 = _id_6EA4BFDBC4ECB4AB * 0.5;

    thread reaction_look_distance_based( _id_6EA4BFDBC4ECB4AB );
    keys = getarraykeys( self.gesture_reaction_queue );

    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < keys.size; _id_AC0E594AC96AA3A8++ )
    {
        key = keys[_id_AC0E594AC96AA3A8];
        _id_04A8875673EF7CE6 = self.gesture_reaction_queue[key];

        for (;;)
        {
            if ( !isdefined( self ) )
                return;

            offset = length( level.player.origin - level.player geteye() );
            _id_9523E27B0F4FE3AF = self.origin + anglestoup( self.angles ) * offset;

            if ( level.player scripts\engine\sp\utility::player_looking_at( _id_9523E27B0F4FE3AF, 0.75, 1 ) )
            {
                if ( distance2d( self.origin, level.player.origin ) <= _id_D0DEF05D989B3BE4 && can_play_nearby_gesture( _id_D0DEF05D989B3BE4 ) )
                    break;
            }

            waitframe();
        }

        thread scripts\engine\sp\utility::gesture_simple( "salute" );
        self.allow_gesture_reactions = 0;

        if ( isarray( _id_04A8875673EF7CE6 ) )
        {
            for ( index = 0; index < _id_04A8875673EF7CE6.size; index++ )
            {
                action = _id_04A8875673EF7CE6[index];

                if ( isstring( action ) )
                {
                    define_face_anim_if_exists( action );

                    if ( soundexists( action ) )
                    {
                        if ( issubstr( action, "plr" ) )
                            level.player scripts\engine\sp\utility::smart_player_dialogue( action );
                        else
                        {
                            _id_409B07AAB3875801 = main_cast_dialog_actor_check( action );

                            if ( isdefined( _id_409B07AAB3875801 ) )
                                _id_409B07AAB3875801 scripts\engine\sp\utility::smart_dialogue( action );
                            else
                                scripts\engine\sp\utility::smart_dialogue( action );
                        }
                    }

                    continue;
                }

                if ( isnumber( action ) )
                    wait( action );
            }
        }
        else if ( soundexists( _id_04A8875673EF7CE6 ) )
        {
            define_face_anim_if_exists( _id_04A8875673EF7CE6 );
            _id_409B07AAB3875801 = main_cast_dialog_actor_check( _id_04A8875673EF7CE6 );

            if ( isdefined( _id_409B07AAB3875801 ) )
                _id_409B07AAB3875801 scripts\engine\sp\utility::smart_dialogue( _id_04A8875673EF7CE6 );
            else
                scripts\engine\sp\utility::smart_dialogue( _id_04A8875673EF7CE6 );
        }

        self.gesture_reaction_queue[key] = undefined;
        wait 5.0;
        self.allow_gesture_reactions = 1;
    }

    self.gesture_reaction_queue = undefined;

    if ( isdefined( self.post_reaction_func ) && isdefined( self.post_reaction_vo ) )
        self thread [[ self.post_reaction_func ]]( undefined, undefined, self.post_reaction_vo );
}

main_cast_dialog_actor_check( _id_B86D3E96869D9E54 )
{
    _id_7D9F09842D048F33 = strtok( _id_B86D3E96869D9E54, "_" );

    if ( scripts\engine\utility::array_contains( _id_7D9F09842D048F33, "nav" ) || scripts\engine\utility::array_contains( _id_7D9F09842D048F33, "gtr" ) )
        return level.gator;
    else if ( scripts\engine\utility::array_contains( _id_7D9F09842D048F33, "slt" ) || scripts\engine\utility::array_contains( _id_7D9F09842D048F33, "xo" ) )
        return level.salter;
    else if ( scripts\engine\utility::array_contains( _id_7D9F09842D048F33, "bsw" ) )
    {
        if ( level.script == "shipcrib_rogue" || level.script == "shipcrib_prisoner" )
            return level.sipes;
        else
            return level.sotomura;
    }
    else if ( scripts\engine\utility::array_contains( _id_7D9F09842D048F33, "cmo" ) )
        return level.comms;
    else if ( scripts\engine\utility::array_contains( _id_7D9F09842D048F33, "dpo" ) )
        return level.drop_officer;

    return undefined;
}

play_reminder_anim_distance( actor, _id_6EA4BFDBC4ECB4AB, _id_D0DEF05D989B3BE4, anime, _id_F0DD62735E42C1E2, _id_42B1F24D780B1894 )
{
    actor endon( "death" );

    if ( isdefined( actor.pre_reaction_func ) )
    {
        if ( isdefined( actor.pre_reaction_params ) )
        {
            if ( actor.pre_reaction_params.size == 1 )
                actor [[ actor.pre_reaction_func ]]( actor.pre_reaction_params[0] );
            else if ( actor.pre_reaction_params.size == 2 )
                actor [[ actor.pre_reaction_func ]]( actor.pre_reaction_params[0], actor.pre_reaction_params[1] );
            else if ( actor.pre_reaction_params.size == 3 )
                actor [[ actor.pre_reaction_func ]]( actor.pre_reaction_params[0], actor.pre_reaction_params[1], actor.pre_reaction_params[2] );
        }
    }

    level endon( "stop_reminders" );
    level endon( "reminders_done" );
    actor thread add_actor_to_manager();

    if ( !isdefined( _id_42B1F24D780B1894 ) )
        _id_42B1F24D780B1894 = 0;

    if ( !isdefined( _id_6EA4BFDBC4ECB4AB ) )
        _id_6EA4BFDBC4ECB4AB = 150.0;

    if ( !isdefined( _id_D0DEF05D989B3BE4 ) )
        _id_D0DEF05D989B3BE4 = _id_6EA4BFDBC4ECB4AB * 0.5;

    if ( !isdefined( actor.is_head_tracking ) || isdefined( actor.is_head_tracking ) && !actor.is_head_tracking )
        actor thread reaction_look_distance_based( _id_6EA4BFDBC4ECB4AB );

    while ( distance2d( actor.origin, level.player.origin ) <= _id_6EA4BFDBC4ECB4AB + 25.0 )
        waitframe();

    for (;;)
    {
        if ( !isdefined( actor ) )
            return;

        offset = length( level.player.origin - level.player geteye() );
        _id_9523E27B0F4FE3AF = actor.origin + anglestoup( actor.angles ) * offset;

        if ( level.player scripts\engine\sp\utility::player_looking_at( _id_9523E27B0F4FE3AF, 0.75, 1 ) )
        {
            if ( distance2d( actor.origin, level.player.origin ) <= _id_D0DEF05D989B3BE4 )
                break;
        }

        waitframe();
    }

    self notify( "stop_loop" );
    thread scripts\common\anim::anim_single_solo( actor, anime );
    wait_time = getanimlength( actor scripts\engine\utility::getanim( anime ) );
    thread scripts\engine\sp\utility::notify_delay( "reminder_anim_done", wait_time );

    if ( isdefined( actor.return_anime ) )
        scripts\engine\utility::delaythread( wait_time, scripts\common\anim::anim_loop_solo, actor, actor.return_anime, "stop_loop" );

    if ( isdefined( _id_F0DD62735E42C1E2 ) )
    {
        if ( _id_42B1F24D780B1894 )
        {
            level notify( "reboot_timer" );
            waitframe();
            level thread reminder_cooldown_timer( 90.0 );

            if ( isdefined( level.interaction_manager ) )
            {
                if ( isdefined( level.interaction_manager.data["reminder_queue"] ) )
                {
                    if ( scripts\engine\utility::array_contains( level.interaction_manager.data["reminder_queue"], actor ) )
                        level.interaction_manager.data["reminder_queue"][_id_F0DD62735E42C1E2] = undefined;
                }
            }
        }

        actor play_smart_dialog_if_exists( _id_F0DD62735E42C1E2 );
    }

    if ( isdefined( actor.post_reaction_func ) && !isdefined( actor.post_reaction_vo ) )
    {
        if ( isdefined( actor.post_reaction_params ) )
        {
            if ( actor.pre_reaction_params.size == 1 )
                actor [[ actor.post_reaction_func ]]( actor.post_reaction_params[0] );
            else if ( actor.pre_reaction_params.size == 2 )
                actor [[ actor.post_reaction_func ]]( actor.post_reaction_params[0], actor.post_reaction_params[1] );
            else if ( actor.pre_reaction_params.size == 3 )
                actor [[ actor.post_reaction_func ]]( actor.post_reaction_params[0], actor.post_reaction_params[1], actor.post_reaction_params[2] );
        }
    }
    else if ( isdefined( actor.post_reaction_func ) && isdefined( actor.post_reaction_vo ) )
        actor thread [[ actor.post_reaction_func ]]( undefined, undefined, actor.post_reaction_vo );
}

reminder_vo_init()
{
    level.interaction_manager.data["reminder_vo"]["bridge"]["male_1"] = [ "shipcrib_us1_wantedonbridge" ];
    level.interaction_manager.data["reminder_vo"]["bridge"]["male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge"]["male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge"]["spent_male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge"]["spent_male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge"]["spent_male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge"]["female_1"] = [ "shipcrib_us1_wantedonbridge" ];
    level.interaction_manager.data["reminder_vo"]["bridge"]["female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge"]["female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge"]["spent_female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge"]["spent_female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge"]["spent_female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["spent_male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["spent_male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["spent_male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["spent_female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["spent_female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["lounge"]["spent_female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["spent_male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["spent_male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["spent_male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["female"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["spent_female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["spent_female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["captains"]["spent_female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["spent_male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["spent_male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["spent_male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["spent_female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["spent_female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["opsmap"]["spent_female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["spent_male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["spent_male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["spent_male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["spent_female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["spent_female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["ftl"]["spent_female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["spent_male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["spent_male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["spent_male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["spent_female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["spent_female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["cic"]["spent_female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["male_1"] = [ "shipcrib_un1_theyrewaitingfo", "shipcrib_un1_theyreattheelev" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["male_2"] = [ "shipcrib_un2_theyreneartheel", "shipcrib_un2_theyrenearthee" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["male_3"] = [ "shipcrib_un3_youreneededby", "shipcrib_un3_elevatordoorsa" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["spent_male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["spent_male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["spent_male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["female_1"] = [ "shipcrib_unf1_theyrebythedoo", "shipcrib_unf1_theyrewaitingatt" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["female_2"] = [ "shipcrib_unf2_ithinktheyrewaitin", "shipcrib_unf2_gettotheelevatord" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["female_3"] = [ "shipcrib_unf3_theyrelookingfory", "shipcrib_unf3_elevatordoorsarea" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["spent_female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["spent_female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev_doors"]["spent_female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["male_1"] = [ "shipcrib_un1_youreneededbythe", "shipcrib_un1_youreneededbythee" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["male_2"] = [ "shipcrib_un2_theyrewaitingforyo", "shipcrib_un2_theyneedyoubyt" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["male_3"] = [ "shipcrib_un3_elevatorswaitinfo", "shipcrib_un3_elevatorswaitinfor" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["spent_male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["spent_male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["spent_male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["female_1"] = [ "shipcrib_unf1_elevatorsreadytot", "shipcrib_unf1_elevatorsreadyfo" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["female_2"] = [ "shipcrib_unf2_theyrereadyforyo", "shipcrib_unf2_theyrebytheelev" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["female_3"] = [ "shipcrib_unf3_elevatorsreadya", "shipcrib_unf3_elevatorsaroundt" ];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["spent_female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["spent_female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["bridge_elev"]["spent_female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["dropship"]["male_1"] = [ "shipcrib_un1_dropshipsfueled" ];
    level.interaction_manager.data["reminder_vo"]["dropship"]["male_2"] = [ "shipcrib_un2_yourdropshipisr" ];
    level.interaction_manager.data["reminder_vo"]["dropship"]["male_3"] = [ "shipcrib_un3_dropshipswaitingf" ];
    level.interaction_manager.data["reminder_vo"]["dropship"]["spent_male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["dropship"]["spent_male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["dropship"]["spent_male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["dropship"]["female_1"] = [ "shipcrib_unf1_bossgibsonhasad" ];
    level.interaction_manager.data["reminder_vo"]["dropship"]["female_2"] = [ "shipcrib_unf2_dropshipsreadyto" ];
    level.interaction_manager.data["reminder_vo"]["dropship"]["female_3"] = [ "shipcrib_unf3_reportfromtheflight" ];
    level.interaction_manager.data["reminder_vo"]["dropship"]["spent_female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["dropship"]["spent_female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["dropship"]["spent_female_3"] = [];
    level.interaction_manager.data["reminder_vo"]["jackal"]["male_1"] = [ "shipcrib_un1_yourjackalisread" ];
    level.interaction_manager.data["reminder_vo"]["jackal"]["male_2"] = [ "shipcrib_un2_gibsonhasyourja" ];
    level.interaction_manager.data["reminder_vo"]["jackal"]["male_3"] = [ "shipcrib_un3_flightdeckreports" ];
    level.interaction_manager.data["reminder_vo"]["jackal"]["spent_male_1"] = [];
    level.interaction_manager.data["reminder_vo"]["jackal"]["spent_male_2"] = [];
    level.interaction_manager.data["reminder_vo"]["jackal"]["spent_male_3"] = [];
    level.interaction_manager.data["reminder_vo"]["jackal"]["female_1"] = [ "shipcrib_unf1_yourjackalsreadyin" ];
    level.interaction_manager.data["reminder_vo"]["jackal"]["female_2"] = [ "shipcrib_unf2_bossgibsonsaysc" ];
    level.interaction_manager.data["reminder_vo"]["jackal"]["female_3"] = [ "shipcrib_unf3_jackalsreadyandw" ];
    level.interaction_manager.data["reminder_vo"]["jackal"]["spent_female_1"] = [];
    level.interaction_manager.data["reminder_vo"]["jackal"]["spent_female_2"] = [];
    level.interaction_manager.data["reminder_vo"]["jackal"]["spent_female_3"] = [];
    level.interaction_manager.data["busy_vo"]["male_1"] = [ "shipcrib_un1_captain2", "shipcrib_un1_sir2" ];
    level.interaction_manager.data["busy_vo"]["male_2"] = [ "shipcrib_un2_weregoodheresi", "shipcrib_un2_sorrysirgotalottok" ];
    level.interaction_manager.data["busy_vo"]["male_3"] = [ "shipcrib_un3_gotthingsundercon", "shipcrib_un3_captain" ];
    level.interaction_manager.data["busy_vo"]["spent_male_1"] = [];
    level.interaction_manager.data["busy_vo"]["spent_male_2"] = [];
    level.interaction_manager.data["busy_vo"]["spent_male_3"] = [];
    level.interaction_manager.data["busy_vo"]["female_1"] = [ "shipcrib_unf2_captain", "shipcrib_unf2_youllhavetoexcus" ];
    level.interaction_manager.data["busy_vo"]["female_2"] = [ "shipcrib_unf2_captain", "shipcrib_unf2_youllhavetoexcus" ];
    level.interaction_manager.data["busy_vo"]["female_3"] = [ "shipcrib_unf3_captainreyes", "shipcrib_unf3_sir" ];
    level.interaction_manager.data["busy_vo"]["spent_female_1"] = [];
    level.interaction_manager.data["busy_vo"]["spent_female_2"] = [];
    level.interaction_manager.data["busy_vo"]["spent_female_3"] = [];
}

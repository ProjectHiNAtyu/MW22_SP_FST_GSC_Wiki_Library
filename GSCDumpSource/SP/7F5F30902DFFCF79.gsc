// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init_gameskill()
{
    if ( !scripts\engine\utility::add_init_script( "gameskill", ::init_gameskill ) )
        return;

    auto_adjust_init();
    scripts\sp\player::init();
    scripts\common\gameskill::set_early_level();
    setskill();
}

setskill( reset )
{
    if ( !istrue( reset ) )
    {
        if ( isdefined( level.gameskill ) )
            return;

        level.difficultytype[0] = "supereasy";
        level.difficultytype[1] = "easy";
        level.difficultytype[2] = "normal";
        level.difficultytype[3] = "hardened";
        level.difficultytype[4] = "veteran";
        level.difficultytype[5] = "realism";
        level.difficultystring["easy"] = &"GAMESKILL_EASY";
        level.difficultystring["normal"] = &"GAMESKILL_NORMAL";
        level.difficultystring["hardened"] = &"GAMESKILL_HARDENED";
        level.difficultystring["veteran"] = &"GAMESKILL_VETERAN";
        level.difficultystring["realism"] = &"GAMESKILL_REALISM";
        thread gameskill_change_monitor();
    }

    anim.run_accuracy = 0.5;
    anim.walk_accuracy = 0.8;
    level.mg42badplace_mintime = 8;
    level.mg42badplace_maxtime = 16;
    level.difficultysettings["playerGrenadeBaseTime"]["easy"] = 40000;
    level.difficultysettings["playerGrenadeBaseTime"]["normal"] = 35000;
    level.difficultysettings["playerGrenadeBaseTime"]["hardened"] = 25000;
    level.difficultysettings["playerGrenadeBaseTime"]["veteran"] = 25000;
    level.difficultysettings["playerGrenadeBaseTime"]["realism"] = 25000;
    level.difficultysettings["playerGrenadeRangeTime"]["easy"] = 20000;
    level.difficultysettings["playerGrenadeRangeTime"]["normal"] = 15000;
    level.difficultysettings["playerGrenadeRangeTime"]["hardened"] = 10000;
    level.difficultysettings["playerGrenadeRangeTime"]["veteran"] = 10000;
    level.difficultysettings["playerGrenadeRangeTime"]["realism"] = 10000;
    level.difficultysettings["playerDoubleGrenadeTime"]["easy"] = 3600000;
    level.difficultysettings["playerDoubleGrenadeTime"]["normal"] = 150000;
    level.difficultysettings["playerDoubleGrenadeTime"]["hardened"] = 90000;
    level.difficultysettings["playerDoubleGrenadeTime"]["veteran"] = 90000;
    level.difficultysettings["playerDoubleGrenadeTime"]["realism"] = 90000;
    level.difficultysettings["double_grenades_allowed"]["easy"] = 0;
    level.difficultysettings["double_grenades_allowed"]["normal"] = 1;
    level.difficultysettings["double_grenades_allowed"]["hardened"] = 1;
    level.difficultysettings["double_grenades_allowed"]["veteran"] = 1;
    level.difficultysettings["double_grenades_allowed"]["realism"] = 1;
    level.difficultysettings["threatbias"]["easy"] = 100;
    level.difficultysettings["threatbias"]["normal"] = 150;
    level.difficultysettings["threatbias"]["hardened"] = 200;
    level.difficultysettings["threatbias"]["veteran"] = 1400;
    level.difficultysettings["threatbias"]["realism"] = 1400;
    level.difficultysettings["base_enemy_accuracy"]["easy"] = 1.0;
    level.difficultysettings["base_enemy_accuracy"]["normal"] = 1.0;
    level.difficultysettings["base_enemy_accuracy"]["hardened"] = 1.0;
    level.difficultysettings["base_enemy_accuracy"]["veteran"] = 1.0;
    level.difficultysettings["base_enemy_accuracy"]["realism"] = 1.0;
    level.difficultysettings["accuracyDistScale"]["easy"] = 1.0;
    level.difficultysettings["accuracyDistScale"]["normal"] = 1.0;
    level.difficultysettings["accuracyDistScale"]["hardened"] = 0.6;
    level.difficultysettings["accuracyDistScale"]["veteran"] = 0.1;
    level.difficultysettings["accuracyDistScale"]["realism"] = 0.1;
    level.difficultysettings["min_sniper_burst_delay_time"]["easy"] = 3.0;
    level.difficultysettings["min_sniper_burst_delay_time"]["normal"] = 2.0;
    level.difficultysettings["min_sniper_burst_delay_time"]["hardened"] = 1.5;
    level.difficultysettings["min_sniper_burst_delay_time"]["veteran"] = 1.1;
    level.difficultysettings["min_sniper_burst_delay_time"]["realism"] = 1.1;
    level.difficultysettings["sniper_converge_scale"]["easy"] = 1.3;
    level.difficultysettings["sniper_converge_scale"]["normal"] = 1.1;
    level.difficultysettings["sniper_converge_scale"]["hardened"] = 0.9;
    level.difficultysettings["sniper_converge_scale"]["veteran"] = 0.7;
    level.difficultysettings["sniper_converge_scale"]["realism"] = 0.7;
    level.difficultysettings["sniperAccuDiffScale"]["easy"] = 5.6;
    level.difficultysettings["sniperAccuDiffScale"]["normal"] = 5.6;
    level.difficultysettings["sniperAccuDiffScale"]["hardened"] = 5.6;
    level.difficultysettings["sniperAccuDiffScale"]["veteran"] = 5.6;
    level.difficultysettings["sniperAccuDiffScale"]["realism"] = 5.6;
    level.difficultysettings["max_sniper_burst_delay_time"]["easy"] = 4.0;
    level.difficultysettings["max_sniper_burst_delay_time"]["normal"] = 3.0;
    level.difficultysettings["max_sniper_burst_delay_time"]["hardened"] = 2.0;
    level.difficultysettings["max_sniper_burst_delay_time"]["veteran"] = 1.5;
    level.difficultysettings["max_sniper_burst_delay_time"]["realism"] = 1.5;
    level.difficultysettings["pain_test"]["easy"] = scripts\common\gameskill::always_pain;
    level.difficultysettings["pain_test"]["normal"] = scripts\common\gameskill::always_pain;
    level.difficultysettings["pain_test"]["hardened"] = scripts\common\gameskill::pain_protection;
    level.difficultysettings["pain_test"]["veteran"] = scripts\common\gameskill::pain_protection;
    level.difficultysettings["pain_test"]["realism"] = scripts\common\gameskill::pain_protection;
    level.difficultysettings["missTimeConstant"]["supereasy"] = 1.2;
    level.difficultysettings["missTimeConstant"]["easy"] = 1.0;
    level.difficultysettings["missTimeConstant"]["normal"] = 0.05;
    level.difficultysettings["missTimeConstant"]["hardened"] = 0;
    level.difficultysettings["missTimeConstant"]["veteran"] = 0;
    level.difficultysettings["missTimeConstant"]["realism"] = 0;
    level.difficultysettings["missTimeDistanceFactor"]["supereasy"] = 0.0009;
    level.difficultysettings["missTimeDistanceFactor"]["easy"] = 0.0008;
    level.difficultysettings["missTimeDistanceFactor"]["normal"] = 0.0001;
    level.difficultysettings["missTimeDistanceFactor"]["hardened"] = 0.00005;
    level.difficultysettings["missTimeDistanceFactor"]["veteran"] = 0;
    level.difficultysettings["missTimeDistanceFactor"]["realism"] = 0;
    level.difficultysettings["player_maxFlashBangTime"]["easy"] = 6;
    level.difficultysettings["player_maxFlashBangTime"]["normal"] = 8;
    level.difficultysettings["player_maxFlashBangTime"]["hardened"] = 9;
    level.difficultysettings["player_maxFlashBangTime"]["veteran"] = 10;
    level.difficultysettings["player_maxFlashBangTime"]["realism"] = 10;
    level.difficultysettings["invulTime_onDamage"]["supereasy"] = 0.5;
    level.difficultysettings["invulTime_onDamage"]["easy"] = 0.35;
    level.difficultysettings["invulTime_onDamage"]["normal"] = 0.3;
    level.difficultysettings["invulTime_onDamage"]["hardened"] = 0.2;
    level.difficultysettings["invulTime_onDamage"]["veteran"] = 0.2;
    level.difficultysettings["invulTime_onDamage"]["realism"] = 0.2;
    level.difficultysettings["invulTime_deathShieldDuration"]["supereasy"] = 4.0;
    level.difficultysettings["invulTime_deathShieldDuration"]["easy"] = 4.0;
    level.difficultysettings["invulTime_deathShieldDuration"]["normal"] = 1.7;
    level.difficultysettings["invulTime_deathShieldDuration"]["hardened"] = 0.9;
    level.difficultysettings["invulTime_deathShieldDuration"]["veteran"] = 0.25;
    level.difficultysettings["invulTime_deathShieldDuration"]["realism"] = 0.25;
    level.difficultysettings["player_deathsDoorDuration"]["supereasy"] = 3;
    level.difficultysettings["player_deathsDoorDuration"]["easy"] = 3.5;
    level.difficultysettings["player_deathsDoorDuration"]["normal"] = 6.0;
    level.difficultysettings["player_deathsDoorDuration"]["hardened"] = 7.0;
    level.difficultysettings["player_deathsDoorDuration"]["veteran"] = 8.0;
    level.difficultysettings["player_deathsDoorDuration"]["realism"] = 8.0;
    level.difficultysettings["player_healthRegenDelay"]["supereasy"] = 2;
    level.difficultysettings["player_healthRegenDelay"]["easy"] = 2.5;
    level.difficultysettings["player_healthRegenDelay"]["normal"] = 3.0;
    level.difficultysettings["player_healthRegenDelay"]["hardened"] = 4.0;
    level.difficultysettings["player_healthRegenDelay"]["veteran"] = 5.05;
    level.difficultysettings["player_healthRegenDelay"]["realism"] = 5.05;
    level.difficultysettings["player_swimBreathTime"]["supereasy"] = 25;
    level.difficultysettings["player_swimBreathTime"]["easy"] = 25;
    level.difficultysettings["player_swimBreathTime"]["normal"] = 25;
    level.difficultysettings["player_swimBreathTime"]["hardened"] = 25;
    level.difficultysettings["player_swimBreathTime"]["veteran"] = 25;
    level.difficultysettings["player_swimBreathTime"]["realism"] = 25;
    level.difficultysettings["player_swimSprintBreathTime"]["supereasy"] = 11;
    level.difficultysettings["player_swimSprintBreathTime"]["easy"] = 11;
    level.difficultysettings["player_swimSprintBreathTime"]["normal"] = 11;
    level.difficultysettings["player_swimSprintBreathTime"]["hardened"] = 11;
    level.difficultysettings["player_swimSprintBreathTime"]["veteran"] = 11;
    level.difficultysettings["player_swimSprintBreathTime"]["realism"] = 11;
    level.difficultysettings["player_swimBreathTimeCrit"]["supereasy"] = 6;
    level.difficultysettings["player_swimBreathTimeCrit"]["easy"] = 6;
    level.difficultysettings["player_swimBreathTimeCrit"]["normal"] = 6;
    level.difficultysettings["player_swimBreathTimeCrit"]["hardened"] = 6;
    level.difficultysettings["player_swimBreathTimeCrit"]["veteran"] = 6;
    level.difficultysettings["player_swimBreathTimeCrit"]["realism"] = 6;
    level.difficultysettings["player_swimBreathTimeCritSprint"]["supereasy"] = 3;
    level.difficultysettings["player_swimBreathTimeCritSprint"]["easy"] = 3;
    level.difficultysettings["player_swimBreathTimeCritSprint"]["normal"] = 3;
    level.difficultysettings["player_swimBreathTimeCritSprint"]["hardened"] = 3;
    level.difficultysettings["player_swimBreathTimeCritSprint"]["veteran"] = 3;
    level.difficultysettings["player_swimBreathTimeCritSprint"]["realism"] = 3;
    level.difficultysettings["player_swimBreathFillTime"]["supereasy"] = 2;
    level.difficultysettings["player_swimBreathFillTime"]["easy"] = 2;
    level.difficultysettings["player_swimBreathFillTime"]["normal"] = 2;
    level.difficultysettings["player_swimBreathFillTime"]["hardened"] = 2;
    level.difficultysettings["player_swimBreathFillTime"]["veteran"] = 2;
    level.difficultysettings["player_swimBreathFillTime"]["realism"] = 2;
    level.difficultysettings["player_healthRegenRate"]["supereasy"] = 40;
    level.difficultysettings["player_healthRegenRate"]["easy"] = 40;
    level.difficultysettings["player_healthRegenRate"]["normal"] = 40;
    level.difficultysettings["player_healthRegenRate"]["hardened"] = 40;
    level.difficultysettings["player_healthRegenRate"]["veteran"] = 40;
    level.difficultysettings["player_healthRegenRate"]["realism"] = 40;
    level.difficultysettings["player_fireEngulfRate"]["supereasy"] = 0.3;
    level.difficultysettings["player_fireEngulfRate"]["easy"] = 0.4;
    level.difficultysettings["player_fireEngulfRate"]["normal"] = 0.5;
    level.difficultysettings["player_fireEngulfRate"]["hardened"] = 0.6;
    level.difficultysettings["player_fireEngulfRate"]["veteran"] = 0.6;
    level.difficultysettings["player_fireEngulfRate"]["realism"] = 0.6;
    level.difficultysettings["player_fireInvulSeconds"]["supereasy"] = 2;
    level.difficultysettings["player_fireInvulSeconds"]["easy"] = 2;
    level.difficultysettings["player_fireInvulSeconds"]["normal"] = 2;
    level.difficultysettings["player_fireInvulSeconds"]["hardened"] = 1.75;
    level.difficultysettings["player_fireInvulSeconds"]["veteran"] = 1.5;
    level.difficultysettings["player_fireInvulSeconds"]["realism"] = 1.5;
    level.difficultysettings["player_health"]["supereasy"] = 400;
    level.difficultysettings["player_health"]["easy"] = 355;
    level.difficultysettings["player_health"]["normal"] = 180;
    level.difficultysettings["player_health"]["hardened"] = 120;
    level.difficultysettings["player_health"]["veteran"] = 60;
    level.difficultysettings["player_health"]["realism"] = 60;
    level.difficultysettings["player_flinch"]["supereasy"] = 0.3;
    level.difficultysettings["player_flinch"]["easy"] = 0.5;
    level.difficultysettings["player_flinch"]["normal"] = 1;
    level.difficultysettings["player_flinch"]["hardened"] = 1.1;
    level.difficultysettings["player_flinch"]["veteran"] = 1.7;
    level.difficultysettings["player_flinch"]["realism"] = 1.7;

    if ( scripts\common\utility::playerarmorenabled() )
    {
        level.difficultysettings["player_armor"]["easy"] = 660;
        level.difficultysettings["player_armor"]["normal"] = 550;
        level.difficultysettings["player_armor"]["hardened"] = 410;
        level.difficultysettings["player_armor"]["veteran"] = 330;
        level.difficultysettings["player_armor"]["realism"] = 330;
        level.difficultysettings["player_armorRatioHealthRegenThreshold"]["easy"] = 1.0;
        level.difficultysettings["player_armorRatioHealthRegenThreshold"]["normal"] = 1.0;
        level.difficultysettings["player_armorRatioHealthRegenThreshold"]["hardened"] = 1.0;
        level.difficultysettings["player_armorRatioHealthRegenThreshold"]["veteran"] = 1.0;
        level.difficultysettings["player_armorRatioHealthRegenThreshold"]["realism"] = 1.0;
        level.difficultysettings["player_armorDamageToHealthRatioMin"]["easy"] = 0.4;
        level.difficultysettings["player_armorDamageToHealthRatioMin"]["normal"] = 0.4;
        level.difficultysettings["player_armorDamageToHealthRatioMin"]["hardened"] = 0.6;
        level.difficultysettings["player_armorDamageToHealthRatioMin"]["veteran"] = 0.8;
        level.difficultysettings["player_armorDamageToHealthRatioMin"]["realism"] = 0.8;
        level.difficultysettings["player_armorDamageToHealthRatioMax"]["easy"] = 0.4;
        level.difficultysettings["player_armorDamageToHealthRatioMax"]["normal"] = 0.4;
        level.difficultysettings["player_armorDamageToHealthRatioMax"]["hardened"] = 0.6;
        level.difficultysettings["player_armorDamageToHealthRatioMax"]["veteran"] = 0.8;
        level.difficultysettings["player_armorDamageToHealthRatioMax"]["realism"] = 0.8;
    }

    level.difficultysettings["explosiveDamageMultiplier"]["supereasy"] = 0.5;
    level.difficultysettings["explosiveDamageMultiplier"]["easy"] = 0.75;
    level.difficultysettings["explosiveDamageMultiplier"]["normal"] = 1;
    level.difficultysettings["explosiveDamageMultiplier"]["hardened"] = 1;
    level.difficultysettings["explosiveDamageMultiplier"]["veteran"] = 1;
    level.difficultysettings["explosiveDamageMultiplier"]["realism"] = 1;
    level.difficultysettings["player_meleeDamageMultiplier"]["easy"] = 0.15;
    level.difficultysettings["player_meleeDamageMultiplier"]["normal"] = 0.25;
    level.difficultysettings["player_meleeDamageMultiplier"]["hardened"] = 0.25;
    level.difficultysettings["player_meleeDamageMultiplier"]["veteran"] = 0.25;
    level.difficultysettings["player_meleeDamageMultiplier"]["realism"] = 0.25;
    level.difficultysettings["explosivePlantTime"]["easy"] = 10;
    level.difficultysettings["explosivePlantTime"]["normal"] = 10;
    level.difficultysettings["explosivePlantTime"]["hardened"] = 5;
    level.difficultysettings["explosivePlantTime"]["veteran"] = 5;
    level.difficultysettings["explosivePlantTime"]["realism"] = 5;
    level.difficultysettings["player_diedRecentlyCooldown"]["easy"] = 70;
    level.difficultysettings["player_diedRecentlyCooldown"]["normal"] = 30;
    level.difficultysettings["player_diedRecentlyCooldown"]["hardened"] = 0;
    level.difficultysettings["player_diedRecentlyCooldown"]["veteran"] = 0;
    level.difficultysettings["player_diedRecentlyCooldown"]["realism"] = 0;
    level.lastplayersighted = 0;
    updategameskill();
    updatealldifficulty();
}

updatealldifficulty()
{
    setglobaldifficulty();

    foreach ( player in level.players )
        player setdifficulty();
}

setdifficulty()
{
    auto_adjust_data_reset();
    set_difficulty_from_locked_settings();
}

setglobaldifficulty()
{
    anim.pain_test = scripts\common\gameskill::get_difficultysetting_global( "pain_test" );
    level.explosiveplanttime = scripts\common\gameskill::get_difficultysetting_global( "explosivePlantTime" );
    _func_4AFDEFC72472A638( scripts\common\gameskill::get_difficultysetting_global( "min_sniper_burst_delay_time" ) );
    _func_5EDDC94E0785D7A2( scripts\common\gameskill::get_difficultysetting_global( "max_sniper_burst_delay_time" ) );
    setsaveddvar( "dvar_25F40FAA68CFE5D6", scripts\common\gameskill::get_difficultysetting_global( "accuracyDistScale" ) );
    level.playermeleedamagemultiplier_dvar = scripts\common\gameskill::get_difficultysetting_global( "player_meleeDamageMultiplier" );
    setsaveddvar( "dvar_26B8CD38EE81F166", level.playermeleedamagemultiplier_dvar );
    scripts\sp\mgturret::setdifficulty();

    if ( scripts\engine\sp\utility::in_realism_mode() )
    {
        setomnvar( "ui_realism_hud", 1 );
        setsaveddvar( "dvar_7724031A1131F4CC", 0 );
        setsaveddvar( "dvar_08A0793D909D5CBD", 0 );
        setsaveddvar( "dvar_5792C3460A6734D4", 0 );
    }
    else
    {
        setomnvar( "ui_realism_hud", 0 );
        setsaveddvar( "dvar_7724031A1131F4CC", 15000 );
        setsaveddvar( "dvar_08A0793D909D5CBD", 1 );
        setsaveddvar( "dvar_5792C3460A6734D4", 1 );
    }
}

updategameskill()
{
    foreach ( player in level.players )
        player.gameskill = player scripts\engine\sp\utility::get_player_gameskill();

    level.gameskill = level.player.gameskill;

    if ( isdefined( level.forcedgameskill ) )
        level.gameskill = level.forcedgameskill;

    return level.gameskill;
}

gameskill_change_monitor()
{
    _id_16E8D6CFC76E1F2A = level.gameskill;

    for (;;)
    {
        if ( !isdefined( _id_16E8D6CFC76E1F2A ) )
        {
            wait 1;
            _id_16E8D6CFC76E1F2A = level.gameskill;
            continue;
        }

        if ( !isdefined( level.lowestgameskill ) )
            level.lowestgameskill = level.gameskill;

        if ( _id_16E8D6CFC76E1F2A != updategameskill() )
        {
            _id_16E8D6CFC76E1F2A = level.gameskill;
            level.lowestgameskill = scripts\engine\utility::ter_op( _id_16E8D6CFC76E1F2A < level.lowestgameskill, _id_16E8D6CFC76E1F2A, level.lowestgameskill );
            updatealldifficulty();
        }

        wait 1;
    }
}

apply_difficulty_settings( _id_64E5D13011016A93 )
{
    _func_2A781949ACE88CA4( scripts\common\gameskill::get_difficultysetting_frac( "player_diedRecentlyCooldown", _id_64E5D13011016A93 ) );
    self.gs.maxflashbangtime = scripts\common\gameskill::get_difficultysetting_frac( "player_maxFlashBangTime", _id_64E5D13011016A93 );
    self.gs.invultime_ondamage = scripts\common\gameskill::get_difficultysetting_frac( "invulTime_onDamage", _id_64E5D13011016A93 );
    self.gs.invultime_deathshieldduration = scripts\common\gameskill::get_difficultysetting_frac( "invulTime_deathShieldDuration", _id_64E5D13011016A93 );
    self.gs.deathsdoorduration = scripts\common\gameskill::get_difficultysetting_frac( "player_deathsDoorDuration", _id_64E5D13011016A93 );
    self.gs.healthregendelay = scripts\common\gameskill::get_difficultysetting_frac( "player_healthRegenDelay", _id_64E5D13011016A93 );
    self.gs.healthregenrate = scripts\common\gameskill::get_difficultysetting_frac( "player_healthRegenRate", _id_64E5D13011016A93 );
    self.gs.healthfireinvulseconds = scripts\common\gameskill::get_difficultysetting_frac( "player_fireInvulSeconds", _id_64E5D13011016A93 );
    self.gs.healthfireengulfrate = scripts\common\gameskill::get_difficultysetting_frac( "player_fireEngulfRate", _id_64E5D13011016A93 );
    self.gs._id_EBE1038E44CD6B22 = scripts\common\gameskill::get_difficultysetting_frac( "player_swimBreathTime", _id_64E5D13011016A93 );
    self.gs._id_A49D3D68B41C6E2E = scripts\common\gameskill::get_difficultysetting_frac( "player_swimBreathTimeCrit", _id_64E5D13011016A93 );
    self.gs._id_56AAA9D6C6D1E63E = scripts\common\gameskill::get_difficultysetting_frac( "player_swimBreathTimeCritSprint", _id_64E5D13011016A93 );
    self.gs._id_36AF6DE4D83C4B32 = scripts\common\gameskill::get_difficultysetting_frac( "player_swimSprintBreathTime", _id_64E5D13011016A93 );
    self.gs._id_044AA592FD4D93EB = scripts\common\gameskill::get_difficultysetting_frac( "player_swimBreathFillTime", _id_64E5D13011016A93 );
    self.gs.player_attacker_accuracy = scripts\common\gameskill::get_difficultysetting_frac( "base_enemy_accuracy", _id_64E5D13011016A93 );
    update_player_attacker_accuracy();
    self.gs.playergrenadebasetime = int( scripts\common\gameskill::get_difficultysetting_frac( "playerGrenadeBaseTime", _id_64E5D13011016A93 ) );
    self.gs.playergrenaderangetime = int( scripts\common\gameskill::get_difficultysetting_frac( "playerGrenadeRangeTime", _id_64E5D13011016A93 ) );
    self.gs.playerdoublegrenadetime = int( scripts\common\gameskill::get_difficultysetting_frac( "playerDoubleGrenadeTime", _id_64E5D13011016A93 ) );
    _func_113DC070D175DAFF( scripts\common\gameskill::get_difficultysetting_frac( "min_sniper_burst_delay_time", _id_64E5D13011016A93 ) );
    _func_87E4FF0E078152E9( scripts\common\gameskill::get_difficultysetting_frac( "max_sniper_burst_delay_time", _id_64E5D13011016A93 ) );
    _id_04CC77AE3C5E8921 = 1;

    if ( level.gameskill == 0 )
        _id_04CC77AE3C5E8921 = 2;

    _func_90FAF3F11984372A( scripts\common\gameskill::get_difficultysetting_frac( "sniperAccuDiffScale", _id_64E5D13011016A93 ), _id_04CC77AE3C5E8921, 1 );
    self.gs._id_D92AD7538613E0C0 = scripts\common\gameskill::get_difficultysetting_frac( "player_flinch", _id_64E5D13011016A93 );
    self.gs.damagemultiplierhealth = self.maxhealth / scripts\common\gameskill::get_difficultysetting_frac( "player_health", _id_64E5D13011016A93 );
    self.gs.damagemultiplierexplosive = scripts\common\gameskill::get_difficultysetting_frac( "explosiveDamageMultiplier", _id_64E5D13011016A93 );

    if ( scripts\common\utility::playerarmorenabled() )
    {
        self.gs.armorratiohealthregenthreshold = scripts\common\gameskill::get_difficultysetting_frac( "player_armorRatioHealthRegenThreshold", _id_64E5D13011016A93 );
        self.gs.armordamagetohealthratiomin = scripts\common\gameskill::get_difficultysetting_frac( "player_armorDamageToHealthRatioMin", _id_64E5D13011016A93 );
        self.gs.armordamagetohealthratiomax = scripts\common\gameskill::get_difficultysetting_frac( "player_armorDamageToHealthRatioMax", _id_64E5D13011016A93 );
        self.gs.damagemultiplierarmor = self.armor.maxamount / scripts\common\gameskill::get_difficultysetting_frac( "player_armor", _id_64E5D13011016A93 );
    }

    self.threatbias = int( scripts\common\gameskill::get_difficultysetting_frac( "threatbias", _id_64E5D13011016A93 ) );
    _id_A7F19B92C7F7A6A8();
}

set_difficulty_from_locked_settings()
{
    apply_difficulty_settings( 1 );
    scripts\common\gameskill::apply_difficulty_settings_shared( 1 );
}

resetskill()
{
    waittillframeend;
    setskill( 1 );
}

update_player_attacker_accuracy()
{
    if ( scripts\engine\utility::ent_flag( "player_zero_attacker_accuracy" ) )
        return;

    if ( !isdefined( self.scriptedignorerandombulletdamage ) )
        self.scriptedignorerandombulletdamage = 0;

    if ( !isdefined( self.scriptedattackeraccuracy ) )
        self.scriptedattackeraccuracy = 1;

    self.ignorerandombulletdamage = self.scriptedignorerandombulletdamage;
    self.attackeraccuracy = self.gs.player_attacker_accuracy * self.scriptedattackeraccuracy;
}

auto_adjust_init()
{
    setdvarifuninitialized( "dvar_EA3E0064074FD39B", 1 );
    setdvarifuninitialized( "dvar_84003EC62F06A169", 1 );

    if ( !getdvarint( "dvar_EA3E0064074FD39B" ) )
        return;

    level.auto_adjust = spawnstruct();
    level.auto_adjust.data = [];
    level.auto_adjust.playerdead = 0;
    level thread auto_adjust_thread();
}

auto_adjust_data_reset()
{
    level.auto_adjust.currenttier = 0;
    level.auto_adjust.currentfrac = 0;
    level.auto_adjust.nextsave_buffer = 60000;
    auto_adjust_data_set( "lastdied_time", -1 );
    auto_adjust_data_set( "loadsave_count", 0 );
    auto_adjust_data_set( "playerdeath_count", 0 );
    auto_adjust_data_set( "nextsave_time", gettime() + level.auto_adjust.nextsave_buffer );
    auto_adjust_set_table();
}

auto_adjust_set_table()
{
    level.auto_adjust.table = [];

    if ( level.gameskill == 2 )
    {
        level.auto_adjust.table[0] = 0;
        level.auto_adjust.table[5] = 0.3;
        level.auto_adjust.table[7] = 0.5;
        level.auto_adjust.table[9] = 0.6;
    }
    else
    {
        level.auto_adjust.table[0] = 0;
        level.auto_adjust.table[3] = 0.3;
        level.auto_adjust.table[4] = 0.5;
        level.auto_adjust.table[5] = 0.7;
        level.auto_adjust.table[6] = 0.9;
    }
}

auto_adjust_thread()
{
    waitframe();
    _id_5159F960A67ED33B = getbuildversion();

    for (;;)
    {
        if ( level.gameskill > 2 )
        {
            wait 1;
            continue;
        }

        if ( !level.auto_adjust.playerdead )
        {
            _id_65899BBA16B4AC70 = auto_adjust_data_get( "playerdeath_count" );
            _id_F9204EC626F90426 = _id_65899BBA16B4AC70;

            foreach ( index, _ in level.auto_adjust.table )
            {
                if ( _id_65899BBA16B4AC70 >= index )
                {
                    _id_F9204EC626F90426 = index;
                    continue;
                }
            }

            level.player auto_adjust_difficulty( _id_F9204EC626F90426 );
        }

        waitframe();
    }
}

can_auto_adjust( _id_65899BBA16B4AC70 )
{
    if ( !isdefined( level.auto_adjust.table[_id_65899BBA16B4AC70] ) )
        return 0;

    if ( level.auto_adjust.table[_id_65899BBA16B4AC70] == level.auto_adjust.currentfrac )
        return 0;

    return 1;
}

auto_adjust_difficulty( _id_65899BBA16B4AC70 )
{
    if ( !can_auto_adjust( _id_65899BBA16B4AC70 ) )
        return;

    level.auto_adjust.currentfrac = level.auto_adjust.table[_id_65899BBA16B4AC70];
    self.gs.invultime_ondamage = auto_adjust_lerp_setting( "invulTime_onDamage" );
    self.gs.invultime_deathshieldduration = auto_adjust_lerp_setting( "invulTime_deathShieldDuration" );
    self.gs.deathsdoorduration = auto_adjust_lerp_setting( "player_deathsDoorDuration" );
    self.gs.healthregendelay = auto_adjust_lerp_setting( "player_healthRegenDelay" );
    self.gs.healthregenrate = auto_adjust_lerp_setting( "player_healthRegenRate" );
    self.gs.healthfireinvulseconds = auto_adjust_lerp_setting( "player_fireInvulSeconds" );
    self.gs.healthfireengulfrate = auto_adjust_lerp_setting( "player_fireEngulfRate" );
    self.gs._id_EBE1038E44CD6B22 = auto_adjust_lerp_setting( "player_swimBreathTime" );
    self.gs._id_A49D3D68B41C6E2E = auto_adjust_lerp_setting( "player_swimBreathTimeCrit" );
    self.gs._id_56AAA9D6C6D1E63E = auto_adjust_lerp_setting( "player_swimBreathTimeCritSprint" );
    self.gs._id_36AF6DE4D83C4B32 = auto_adjust_lerp_setting( "player_swimSprintBreathTime" );
    self.gs._id_044AA592FD4D93EB = auto_adjust_lerp_setting( "player_swimBreathFillTime" );
    self.gs._id_D92AD7538613E0C0 = auto_adjust_lerp_setting( "player_flinch" );
    self.gs.damagemultiplierhealth = self.maxhealth / auto_adjust_lerp_setting( "player_health" );
    self.gs.damagemultiplierexplosive = auto_adjust_lerp_setting( "explosiveDamageMultiplier" );
    self._id_DA4B6392C1BEC6A1 = auto_adjust_lerp_setting( "missTimeConstant" );
    self._id_CEF700ED012E8981 = auto_adjust_lerp_setting( "missTimeDistanceFactor" );
    _id_A7F19B92C7F7A6A8();
}

_id_A7F19B92C7F7A6A8()
{
    scripts\sp\player::updateviewkickscale();
    scripts\sp\player::updatedamagemultiplier();
    _id_4B87F2871B6B025C::_id_0AA183CA1083D279();
}

auto_adjust_lerp_setting( _id_8C958BDE9A9F8547 )
{
    _id_B0E75118D3C9DDE8 = self.gameskill - 1;
    _id_BE6DA4F53631A129 = scripts\common\gameskill::get_difficultysetting( _id_8C958BDE9A9F8547, _id_B0E75118D3C9DDE8 );
    _id_D58D8BFFB394C16B = scripts\common\gameskill::get_difficultysetting( _id_8C958BDE9A9F8547 );
    return scripts\engine\math::lerp( _id_D58D8BFFB394C16B, _id_BE6DA4F53631A129, level.auto_adjust.currentfrac );
}

auto_adjust_data_add( name, add )
{
    val = getdvarint( _func_2EF675C13CA1C4AF( "dvar_82F854BA4D98181E", name ) ) + add;
    auto_adjust_data_set( name, val );
}

auto_adjust_data_set( name, val )
{
    setdvar( _func_2EF675C13CA1C4AF( "dvar_82F854BA4D98181E", name ), val );
}

auto_adjust_data_get( name )
{
    return getdvarint( _func_2EF675C13CA1C4AF( "dvar_82F854BA4D98181E", name ) );
}

auto_adjust_playerdied()
{
    if ( !isdefined( level.auto_adjust ) )
        return;

    level.auto_adjust.playerdead = 1;
    count = auto_adjust_data_get( "playerdeath_count" );

    if ( count == 7 )
        return;

    auto_adjust_data_add( "playerdeath_count", 1 );
}

auto_adjust_save_committed()
{
    if ( !isdefined( level.auto_adjust ) )
        return;

    count = auto_adjust_data_get( "playerdeath_count" );

    if ( count == 0 )
        return;

    _id_EE3AEAFD34D50473 = auto_adjust_data_get( "nextsave_time" );

    if ( gettime() > _id_EE3AEAFD34D50473 )
        auto_adjust_data_set( "nextsave_time", gettime() + level.auto_adjust.nextsave_buffer );
    else
        return;

    auto_adjust_data_add( "playerdeath_count", -1 );
}

auto_adjust_difficult_get()
{
    return level.gameskill - level.auto_adjust.currentfrac;
}

auto_adjust_debug()
{

}

auto_adjust_debug_update( msg, val, val2 )
{
    if ( !isdefined( level.auto_adjust.debughud ) )
        level.auto_adjust.debughud = [];

    if ( !isdefined( level.auto_adjust.debughud[msg] ) )
    {
        hud = newhudelem();
        hud.x = 10;
        hud.y = 50 + 10 * level.auto_adjust.debugprintline;
        hud.fontscale = 0.6;
        hud.label = msg;
        hud.font = "smallfixed";
        hud.horzalign = "fullscreen";
        hud.vertalign = "fullscreen";
        hud.value = -999;
        hud.sort = 20;

        if ( isdefined( val2 ) )
        {
            hud.val2 = newhudelem();
            hud.val2.x = hud.x + 120;
            hud.val2.y = hud.y;
            hud.val2.fontscale = 0.6;
            hud.val2.font = "smallfixed";
            hud.val2.label = "|";
            hud.val2.horzalign = "fullscreen";
            hud.val2.vertalign = "fullscreen";
            hud.val2.value = -999;
            hud.val2.sort = 20;
        }

        level.auto_adjust.debughud[msg] = hud;
    }
    else
        hud = level.auto_adjust.debughud[msg];

    if ( hud.value != val )
    {
        hud setvalue( val );
        hud.value = val;
    }

    if ( isdefined( val2 ) )
    {
        if ( hud.val2.value != val2 )
        {
            hud.val2 setvalue( val2 );
            hud.val2.value = val2;
        }
    }

    level.auto_adjust.debugprintline++;
}

auto_adjust_debuglite()
{
    if ( isdefined( level.auto_adjust.debughud ) )
    {
        foreach ( hud in level.auto_adjust.debughud )
        {
            if ( isdefined( hud.val2 ) )
                hud.val2 destroy();

            hud destroy();
        }

        level.auto_adjust.debughud = undefined;
    }

    if ( !isdefined( level.auto_adjust.debuglitehud ) )
    {
        hud = newhudelem();
        hud.alignx = "right";
        hud.x = 448;
        hud.y = 5;
        hud.fontscale = 0.7;
        hud.font = "default";
        hud.horzalign = "fullscreen";
        hud.vertalign = "fullscreen";
        hud.sort = 20;
        level.auto_adjust.debuglitehud = hud;
    }

    str = "^5" + auto_adjust_data_get( "playerdeath_count" ) + "/" + ( level.gameskill - level.auto_adjust.currentfrac );
    level.auto_adjust.debuglitehud settext( str );
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

barrel_setup( subtype, barrel_health, _id_9A4C98958A819874, _id_C15F10425692FC0D, _id_0CCCD919D92C1C40, min_range_max_amp, _id_3F07F189631AA7B6 )
{
    if ( !isdefined( level.phys_barrels ) )
        level.phys_barrels = [];

    level.phys_barrels = scripts\engine\utility::array_add( level.phys_barrels, self );
    self.onfire = undefined;
    self.subtype = subtype;
    self.isbarrel = 1;
    self setcandamage( 1 );
    self.barrel_health = barrel_health;
    self.phys_barrel_radius = _id_9A4C98958A819874;
    self.phys_amp_normal = _id_C15F10425692FC0D;
    self.phys_amp_max = _id_0CCCD919D92C1C40;
    self.min_range_max_amp = min_range_max_amp;
    self.spewtags = [];
    thread barrel_cleanup();
    thread barrel_nav_obstruction();
}

barrel_nav_obstruction()
{
    _id_373F8B6FB3BD6FBC = createnavobstaclebybounds( self.origin, ( 12, 12, 50 ), ( 0, 0, 0 ) );
    _id_8EDEBA7F896C4553 = undefined;

    while ( isdefined( self ) && self.spewtags.size <= 0 )
        wait 0.05;

    if ( !isdefined( self ) )
    {
        destroynavobstacle( _id_373F8B6FB3BD6FBC );
        return;
    }

    _id_90D8A00109786D78 = self.phys_barrel_radius / 4.5;
    _id_8EDEBA7F896C4553 = "barrel" + self getentitynumber();
    createnavrepulsor( _id_8EDEBA7F896C4553, -1, self, _id_90D8A00109786D78, 1 );
    scripts\engine\utility::waittill_either( "barrel_death", "entitydeleted" );
    destroynavobstacle( _id_373F8B6FB3BD6FBC );
}

is_self_detonating( subtype )
{
    return self.subtype == "red";
}

barrel_cleanup()
{
    scripts\engine\utility::waittill_either( "barrel_death", "entitydeleted" );
    level.phys_barrels = scripts\engine\utility::array_remove( level.phys_barrels, self );
}

get_barrels( subtype )
{
    if ( !isdefined( subtype ) )
        return level.phys_barrels;
    else
    {
        barrels = [];

        foreach ( _id_DDC4E4BDECFF28CD in level.phys_barrels )
        {
            if ( isdefined( _id_DDC4E4BDECFF28CD.subtype ) && _id_DDC4E4BDECFF28CD.subtype == subtype )
                barrels = scripts\engine\utility::array_add( barrels, _id_DDC4E4BDECFF28CD );
        }

        return barrels;
    }
}

barrel_fusetimer( timer )
{
    self endon( "barrel_death" );
    self notify( "new_barrel_timer" );
    self endon( "new_barrel_timer" );
    wait( timer );

    while ( isdefined( self.dont_explode ) )
        waitframe();

    self notify( "barrel_death" );
}

barrel_block_gesture( _id_21B0311D64CADFA2, _id_0C3EA9B1A20FF199 )
{
    if ( level.player isthrowinggrenade() || level.player isthrowingbackgrenade() )
        return;

    dist = distance2dsquared( level.player.origin, _id_0C3EA9B1A20FF199 );

    if ( dist > squared( _id_21B0311D64CADFA2 ) )
        return;

    if ( dist > squared( _id_21B0311D64CADFA2 * 0.25 ) )
    {
        dot = vectordot( scripts\engine\utility::flatten_vector( vectornormalize( _id_0C3EA9B1A20FF199 - level.player.origin ) ), anglestoforward( level.player.angles ) );

        if ( dot < 0.0 )
            return;
    }

    if ( !scripts\engine\trace::ray_trace_passed( _id_0C3EA9B1A20FF199 + ( 0, 0, 12 ), level.player geteye(), undefined, scripts\engine\trace::create_world_contents() ) )
        return;

    level.player thread barrel_reaction_gesture( _id_0C3EA9B1A20FF199 );
}

barrel_reaction_gesture( _id_0C3EA9B1A20FF199 )
{
    self endon( "death" );
    tagorigin = scripts\engine\utility::spawn_tag_origin( _id_0C3EA9B1A20FF199, ( 0, 0, 0 ) );
    thread scripts\engine\utility::delete_on_death( tagorigin );
    _id_B03CFAC5EE568943 = "ges_frag_block";
    _id_447611FD38474E73 = self playgestureviewmodel( _id_B03CFAC5EE568943, tagorigin, 1, 0.1 );

    if ( _id_447611FD38474E73 )
    {
        childthread scripts\sp\player\gestures::player_gestures_input_disable( _id_B03CFAC5EE568943, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1.4, "barrelReactionGesture" );

        for (;;)
        {
            self waittill( "gesture_stopped", _id_B03CFAC5EE568943 );

            if ( _id_B03CFAC5EE568943 == "ges_frag_block" )
                break;
        }
    }

    if ( isdefined( tagorigin ) )
        tagorigin delete();
}

isplayersniperhit( attacker, objweapon )
{
    if ( isdefined( attacker ) && isdefined( objweapon ) && attacker == level.player && objweapon.classname == "sniper" )
        return 1;

    return 0;
}

isdirectunderbarrelhit( type )
{
    if ( isdefined( type ) && type == "MOD_IMPACT" )
        return 1;

    return 0;
}

isgrenadeinrange( point, type, range )
{
    if ( !isdefined( type ) )
        return 0;

    if ( isdefined( type ) && type != "MOD_GRENADE" && type != "MOD_GRENADE_SPLASH" )
        return 0;

    if ( !isdefined( point ) )
        return;

    dist = distance( self.origin, point );

    if ( dist > range )
        return 0;

    return 1;
}

isvalidbarreldamage( attacker, type )
{
    if ( isdefined( attacker ) && isai( attacker ) )
        return 0;

    if ( isdefined( attacker ) && isdefined( attacker.isbarrel ) )
        return 0;

    if ( ismeleedamage( type ) )
        return 0;

    return 1;
}

ismeleedamage( type )
{
    if ( isdefined( type ) && type == "MOD_MELEE" )
        return 1;

    return 0;
}

barrel_launch( _id_F3B898B4C1762E04, _id_0D062FA74A20C4A2, timer )
{
    self endon( "barrel_death" );
    wait( timer );

    if ( !isdefined( self ) )
        return;

    _id_EDCB1EEB9E6136BF = vectornormalize( self.origin - _id_F3B898B4C1762E04 );
    _id_0CA8F37E9D92BB48 = self.phys_amp_normal;

    if ( _id_0D062FA74A20C4A2 <= self.min_range_max_amp )
        _id_0CA8F37E9D92BB48 = self.phys_amp_max;

    _id_D43D6364668556C7 = self.phys_barrel_radius - _id_0D062FA74A20C4A2;
    _id_7E47BFBB162BF7FE = _id_D43D6364668556C7 / self.phys_barrel_radius;
    _id_7E47BFBB162BF7FE = _id_7E47BFBB162BF7FE * _id_0CA8F37E9D92BB48;
    self physicslaunchserver( self.origin, _id_EDCB1EEB9E6136BF * _id_7E47BFBB162BF7FE );
}

barrel_one_hit_kill()
{
    self waittill( "damage" );
    waitframe();
    waitframe();
    self notify( "barrel_death" );
}

barrel_player()
{
    self endon( "entitydeleted" );

    for (;;)
    {
        while ( distancesquared( level.player.origin, self.origin ) > squared( 40 ) )
            wait 0.05;

        _id_602F0504AD8DE573 = self physics_getentitycenterofmass();
        _id_602F0504AD8DE573 = _id_602F0504AD8DE573["unscaled"] + ( 0, 0, 4 );
        self physicslaunchserver( _id_602F0504AD8DE573, vectornormalize( self.origin - level.player.origin ) * 1000 );
        wait 0.05;
    }
}

barrel_debug()
{
    self endon( "barrel_death" );
    starttime = undefined;
    _id_2BE0C96385C78102 = undefined;
    setdvarifuninitialized( "dvar_0D15DEB4BC845FB2", 0 );

    for (;;)
    {
        if ( !getdvarint( "dvar_0D15DEB4BC845FB2" ) )
        {

        }
        else
            thread scripts\engine\utility::draw_circle( self.origin, 250, ( 1, 0, 0 ), 1, 0, 1 );

        wait 0.05;
    }
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

evasive_think( vehicle )
{
    vehicle endon( "death" );

    while ( vehicle.health > 0 )
    {
        vehicle waittill( "missile_lock", _id_A48654BAAE4A5395 );
        points = evasive_createmaneuvers( vehicle, "random" );
        evasive_startmaneuvers( vehicle, points );
        wait 0.05;
    }
}

evasive_createmaneuvers( vehicle, _id_17240FD48AA84699 )
{
    switch ( _id_17240FD48AA84699 )
    {
        case "strafe_left_right":
            vehicle evasive_addpoint( 3000, -1500, 500, "average" );
            vehicle evasive_addpoint( 6000, 3000, -700, "average" );
            vehicle evasive_addpoint( 3000, -1500, 200, "average" );
            break;
        case "strafe_right_left":
            vehicle evasive_addpoint( 3000, 1500, 500, "average" );
            vehicle evasive_addpoint( 6000, -3000, -700, "average" );
            vehicle evasive_addpoint( 3000, 1500, 200, "average" );
            break;
        case "360_clockwise":
            vehicle evasive_addpoint( 1500, 1500, 200, "none" );
            vehicle evasive_addpoint( 0, 1500, 200, "none" );
            vehicle evasive_addpoint( -1500, 1500, 200, "none" );
            vehicle evasive_addpoint( -1500, 0, 0, "none" );
            vehicle evasive_addpoint( -1000, -1000, -200, "none" );
            vehicle evasive_addpoint( 0, -1000, -200, "none" );
            vehicle evasive_addpoint( 1000, -1000, -200, "none" );
            break;
        case "360_counter_clockwise":
            vehicle evasive_addpoint( 1500, -1500, 200, "none" );
            vehicle evasive_addpoint( 0, -1500, 200, "none" );
            vehicle evasive_addpoint( -1500, -1500, 200, "none" );
            vehicle evasive_addpoint( -1500, 0, 0, "none" );
            vehicle evasive_addpoint( -1000, 1000, -200, "none" );
            vehicle evasive_addpoint( 0, 1000, -200, "none" );
            vehicle evasive_addpoint( 1000, 1000, -200, "none" );
            break;
        case "random":
            _id_5F8B2ACE8E5B3DC5 = [];
            _id_5F8B2ACE8E5B3DC5[0] = "strafe_left_right";
            _id_5F8B2ACE8E5B3DC5[1] = "strafe_right_left";
            _id_5F8B2ACE8E5B3DC5[2] = "360_clockwise";
            _id_5F8B2ACE8E5B3DC5[3] = "360_counter_clockwise";
            return evasive_createmaneuvers( vehicle, _id_5F8B2ACE8E5B3DC5[randomint( _id_5F8B2ACE8E5B3DC5.size )] );
    }

    points = evasive_getallpoints( vehicle );
    return points;
}

evasive_startmaneuvers( vehicle, points )
{
    vehicle notify( "taking_evasive_actions" );
    vehicle endon( "taking_evasive_actions" );
    vehicle endon( "death" );
    vehicle notify( "evasive_action_done" );
    thread evasive_endmaneuvers( vehicle );

    if ( getdvar( "dvar_C9AB8C9FC46C92CF" ) == "1" )
        vehicle evasive_drawpoints( points );

    vehicle setneargoalnotifydist( 1500 );
    vehicle vehicle_setspeed( 100, 30, 30 );
    _id_579B30DA898346E1 = vehicle.angles[1];

    for ( _id_AC0E594AC96AA3A8 = 1; _id_AC0E594AC96AA3A8 < points.size; _id_AC0E594AC96AA3A8++ )
    {
        if ( isdefined( points[_id_AC0E594AC96AA3A8 + 1] ) )
            _id_29D072A4081C09AA = vectortoangles( points[_id_AC0E594AC96AA3A8 + 1]["pos"] - points[_id_AC0E594AC96AA3A8]["pos"] );
        else
            _id_29D072A4081C09AA = ( 0, _id_579B30DA898346E1, 0 );

        _id_BAD4333AAD3972A0 = _id_29D072A4081C09AA[1];

        if ( points[_id_AC0E594AC96AA3A8]["goalYawMethod"] == "average" )
            _id_BAD4333AAD3972A0 = ( _id_29D072A4081C09AA[1] + _id_579B30DA898346E1 ) / 2;
        else if ( points[_id_AC0E594AC96AA3A8]["goalYawMethod"] == "forward" )
            _id_BAD4333AAD3972A0 = vehicle.angles[1];

        if ( getdvar( "dvar_C9AB8C9FC46C92CF" ) == "1" )
            thread scripts\engine\sp\utility::draw_line_until_notify( points[_id_AC0E594AC96AA3A8]["pos"], points[_id_AC0E594AC96AA3A8]["pos"] + anglestoforward( ( 0, _id_BAD4333AAD3972A0, 0 ) ) * 250, 1.0, 1.0, 0.2, vehicle, "evasive_action_done" );

        vehicle settargetyaw( _id_BAD4333AAD3972A0 );
        vehicle thread scripts\common\vehicle_code::setvehgoalpos_wrap( points[_id_AC0E594AC96AA3A8]["pos"], 0 );
        vehicle waittill( "near_goal" );
    }

    vehicle notify( "evasive_action_done" );
    vehicle thread scripts\common\utility::vehicle_resumepath();
}

evasive_endmaneuvers( vehicle )
{
    vehicle notify( "end_maneuvers" );
    vehicle endon( "end_maneuvers" );
    vehicle endon( "evasive_action_done" );
    vehicle endon( "death" );
    vehicle waittill( "missile_lock_ended" );
    vehicle thread scripts\common\utility::vehicle_resumepath();
}

evasive_addpoint( forward, _id_A66BA9B157533F5A, up, _id_9A69D119B9F89C38 )
{
    if ( !isdefined( self.evasive_points ) )
    {
        self.evasive_points = [];
        self.evasive_points[0]["pos"] = self.origin;
        self.evasive_points[0]["ang"] = ( 0, self.angles[1], 0 );
    }

    index = self.evasive_points.size;

    if ( !isdefined( _id_9A69D119B9F89C38 ) )
        _id_9A69D119B9F89C38 = "none";

    if ( !isdefined( up ) )
        up = 0;

    self.evasive_points[index]["forward"] = forward;
    self.evasive_points[index]["side"] = _id_A66BA9B157533F5A;
    self.evasive_points[index]["up"] = up;
    _id_F6BEAE9FF9A9876F = anglestoforward( self.evasive_points[0]["ang"] );
    _id_C8FE87B7616261B0 = anglestoright( self.evasive_points[0]["ang"] );
    self.evasive_points[index]["pos"] = self.evasive_points[index - 1]["pos"] + _id_F6BEAE9FF9A9876F * self.evasive_points[index]["forward"] + _id_C8FE87B7616261B0 * self.evasive_points[index]["side"] + ( 0, 0, up );
    self.evasive_points[index]["goalYawMethod"] = _id_9A69D119B9F89C38;
}

evasive_getallpoints( vehicle )
{
    points = vehicle.evasive_points;
    vehicle.evasive_points = undefined;
    return points;
}

evasive_drawpoints( points )
{
    for ( _id_AC0E594AC96AA3A8 = 1; _id_AC0E594AC96AA3A8 < points.size; _id_AC0E594AC96AA3A8++ )
        thread scripts\engine\sp\utility::draw_line_until_notify( points[_id_AC0E594AC96AA3A8 - 1]["pos"], points[_id_AC0E594AC96AA3A8]["pos"], 1.0, 0.2, 0.2, self, "evasive_action_done" );
}

wingman_think( vehicle )
{
    vehicle endon( "death" );
    level.playervehicle endon( "death" );
    _id_2BFF61561A805133 = 2200;
    _id_9A4D6AD378BE2C9D = 1500;
    _id_ABD0E34725AF38E3 = 0;
    _id_B608F355E5AB52B8 = 1.0;
    _id_40B0F17ED8BCC0F1 = 1.2;
    _id_F70C456B97D2571B = 50;
    _id_FB993E89949902C0 = 60;
    _id_260B7DF16F367F60 = 2000;
    _id_A2E4675D403A8346 = getplayerhelispeed();
    _id_A9848973D185D972 = 0.0;
    _id_C71354F9021FF3F3 = gettime();
    goalpos = wingman_getgoalpos( _id_2BFF61561A805133, _id_9A4D6AD378BE2C9D, _id_ABD0E34725AF38E3 );
    vehicle vehicle_setspeed( 30, 20, 20 );
    vehicle settargetyaw( level.playervehicle.angles[1] );
    vehicle setvehgoalpos( goalpos, 1 );

    for (;;)
    {
        goalpos = wingman_getgoalpos( _id_2BFF61561A805133, _id_9A4D6AD378BE2C9D, _id_ABD0E34725AF38E3 );

        if ( getdvar( "dvar_C9AB8C9FC46C92CF" ) == "1" )
        {
            thread scripts\engine\utility::draw_line_for_time( level.playervehicle.origin, goalpos, 0, 1, 0, _id_B608F355E5AB52B8 );
            thread scripts\engine\utility::draw_line_for_time( level.playervehicle.origin, vehicle.origin, 0, 0, 1, _id_B608F355E5AB52B8 );
            thread scripts\engine\utility::draw_line_for_time( vehicle.origin, goalpos, 1, 1, 0, _id_B608F355E5AB52B8 );
        }

        time = gettime();

        if ( time >= _id_C71354F9021FF3F3 + _id_260B7DF16F367F60 )
        {
            _id_C71354F9021FF3F3 = time;
            _id_A9848973D185D972 = _id_A2E4675D403A8346;
            _id_A2E4675D403A8346 = getplayerhelispeed();
        }

        _id_A50EC07292ACA5F5 = 0;
        _id_425DB4D77182C705 = 0;

        if ( _id_A9848973D185D972 > 20 )
        {
            _id_425DB4D77182C705 = _id_A9848973D185D972;
            _id_A50EC07292ACA5F5 = 1;
        }
        else if ( _id_A9848973D185D972 <= 20 && getplayerhelispeed() > 20 )
        {
            _id_425DB4D77182C705 = getplayerhelispeed();
            _id_A50EC07292ACA5F5 = 1;
        }

        if ( _id_A50EC07292ACA5F5 && _id_425DB4D77182C705 > 0 )
        {
            _id_425DB4D77182C705 = _id_425DB4D77182C705 * _id_40B0F17ED8BCC0F1;
            accel = _id_F70C456B97D2571B;
            decel = _id_FB993E89949902C0;

            if ( accel >= _id_425DB4D77182C705 / 2 )
                accel = _id_425DB4D77182C705 / 2;

            if ( decel >= _id_425DB4D77182C705 / 2 )
                decel = _id_425DB4D77182C705 / 2;

            vehicle vehicle_setspeed( _id_425DB4D77182C705, accel, decel );
            vehicle settargetyaw( level.playervehicle.angles[1] );
            _id_56BF21256ACD1819 = 0;

            if ( getplayerhelispeed() <= 30 )
                _id_56BF21256ACD1819 = 1;

            if ( getdvar( "dvar_C9AB8C9FC46C92CF" ) == "1" )
                iprintln( "wingman speed: " + _id_425DB4D77182C705 + " : " + _id_56BF21256ACD1819 );

            vehicle setvehgoalpos( goalpos, _id_56BF21256ACD1819 );
        }

        wait( _id_B608F355E5AB52B8 );
    }
}

wingman_getgoalpos( _id_2BFF61561A805133, _id_9A4D6AD378BE2C9D, _id_ABD0E34725AF38E3 )
{
    _id_F6BEAE9FF9A9876F = anglestoforward( scripts\engine\utility::flat_angle( level.playervehicle.angles ) );
    _id_C8FE87B7616261B0 = anglestoright( scripts\engine\utility::flat_angle( level.playervehicle.angles ) );
    goalpos = level.playervehicle.origin + _id_F6BEAE9FF9A9876F * _id_2BFF61561A805133 + _id_C8FE87B7616261B0 * _id_9A4D6AD378BE2C9D + ( 0, 0, _id_ABD0E34725AF38E3 );
    return goalpos;
}

getplayerhelispeed()
{
    return level.playervehicle vehicle_getspeed();
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

threat_sight_set_enabled( enabled )
{
    _id_7F6280793295798B = _func_7A21AA652F0613B0();
    _func_24E85292B191399C( enabled );
    threat_sight_set_dvar( enabled );

    if ( !enabled && _id_7F6280793295798B )
    {
        level notify( "threat_sight_audio_disabled" );

        foreach ( player in level.players )
            player thread _id_9B25540DA1B89219();
    }
    else if ( enabled && !_id_7F6280793295798B )
        level notify( "threat_sight_enabled" );

    _id_CD207438E3E764E6 = getaiarray();

    foreach ( guy in _id_CD207438E3E764E6 )
    {
        if ( isalive( guy ) && isdefined( guy._id_9329445A125D4443 ) )
            guy _meth_24CB3B5E0D4216B1( guy._id_9329445A125D4443 );
    }

    if ( enabled && !_id_7F6280793295798B )
        level thread _id_468DA1365698EABF();
}

threat_sight_set_dvar( enabled )
{
    if ( enabled && !_func_7A21AA652F0613B0() )
        return;

    setsaveddvar( "dvar_A9F8DFE902285D4A", enabled );
    level thread threat_sight_set_dvar_display( enabled );
}

threat_sight_set_dvar_display( enabled )
{
    self notify( "threat_sight_set_dvar_display" );
    self endon( "threat_sight_set_dvar_display" );

    if ( !enabled )
        wait 1.0;

    if ( getdvarint( "dvar_5B6BD7DBA9E1513E", 0 ) )
        setsaveddvar( "dvar_DFBEF9BC86D93B90", enabled );

    setdvar( "dvar_21B72D8C9FF7A1B3", enabled );
}

threat_sight_enabled()
{
    if ( !getdvarint( "dvar_A9F8DFE902285D4A" ) )
        return 0;

    if ( self == level )
        return _func_7A21AA652F0613B0();

    return isdefined( self.threatsight ) && self.threatsight;
}

threat_sight_player_entity_state_set( ai, statename )
{
    if ( !isdefined( self.stealth ) )
        return;

    switch ( statename )
    {
        case "combat_hunt":
            ai setthreatsight( self, 0.0 );
            break;
        case "investigate":
            if ( isdefined( ai.enemy ) && ai.enemy == self )
                ai setthreatsight( self, 1.0 );

            break;
        case "death":
            ai setthreatsight( self, 0.0 );
            break;
    }
}

threat_sight_force_visible( _id_BCE7C35AE555FE5B, _id_246AEE6688CC8EAE )
{
    self _meth_D955A85131DC6E69( _id_BCE7C35AE555FE5B, _id_246AEE6688CC8EAE );
    end = gettime() + int( 1000.0 * _id_246AEE6688CC8EAE );
    entnum = _id_BCE7C35AE555FE5B getentitynumber();

    if ( !isdefined( self.stealth.force_visible ) )
        self.stealth.force_visible = [];

    if ( isdefined( self.stealth.force_visible[entnum] ) )
        self.stealth.force_visible[entnum].end = max( self.stealth.force_visible[entnum].end, end );
    else
    {
        self.stealth.force_visible[entnum] = spawnstruct();
        self.stealth.force_visible[entnum].end = end;
    }

    self.stealth.force_visible[entnum].ent = _id_BCE7C35AE555FE5B;
    thread threat_sight_force_visible_thread();
}

threat_sight_force_visible_thread()
{
    if ( istrue( self.stealth.force_visible_thread ) )
        return;

    self notify( "threat_sight_force_visible_thread" );
    self endon( "threat_sight_force_visible_thread" );
    self endon( "death" );
    self.stealth.force_visible_thread = 1;
    waittime = 0.05;

    while ( isdefined( self.stealth.force_visible ) && self.stealth.force_visible.size > 0 )
    {
        _id_64F88D0441939203 = gettime();
        _id_91CA07907A589301 = [];

        foreach ( key, _id_5C3BFB25E4E70F12 in self.stealth.force_visible )
        {
            if ( _id_64F88D0441939203 < _id_5C3BFB25E4E70F12.end && issentient( _id_5C3BFB25E4E70F12.ent ) && !self cansee( _id_5C3BFB25E4E70F12.ent ) )
            {
                if ( isplayer( _id_5C3BFB25E4E70F12.ent ) )
                {
                    _id_ABD22263A9A2A0A9 = self getthreatsight( _id_5C3BFB25E4E70F12.ent );
                    _id_3D4B09D94DF0885A = _func_910A912F327B8D34( _id_5C3BFB25E4E70F12.ent );
                    _id_5C3BFB25E4E70F12.ent thread threat_sight_player_sight_audio( 1, max( _id_3D4B09D94DF0885A, _id_ABD22263A9A2A0A9 ) );
                }

                continue;
            }

            _id_91CA07907A589301[_id_91CA07907A589301.size] = key;
        }

        foreach ( key in _id_91CA07907A589301 )
            self.stealth.force_visible[key] = undefined;

        wait( waittime );
    }

    self.stealth.force_visible = undefined;
    self.stealth.force_visible_thread = undefined;
}

_id_468DA1365698EABF()
{
    level endon( "threat_sight_audio_disabled" );

    if ( !isdefined( level.stealth.fnthreatsightplayersightaudio ) )
        level waittill( "threat_sight_audio_enabled" );

    while ( !isdefined( level.players ) )
        waitframe();

    for (;;)
    {
        if ( getdvarfloat( "dvar_CC254DC67E7FEDE3" ) <= 0.0 )
        {
            foreach ( player in level.players )
            {
                if ( !isalive( player ) || !isdefined( player.stealth ) )
                    continue;

                player thread threat_sight_player_sight_audio( _func_8CE5803B7D377D72( player ), _func_910A912F327B8D34( player ) );
            }
        }

        waitframe();
    }
}

threat_sight_fake( origin, amount )
{
    self notify( "threat_sight_fake" );
    self endon( "threat_sight_fake" );
    setsaveddvar( "dvar_CC254DC67E7FEDE3", amount );
    setsaveddvar( "dvar_8C00DC8A5BC93079", origin[0] );
    setsaveddvar( "dvar_8C00DB8A5BC92E46", origin[1] );
    setsaveddvar( "dvar_8C00DA8A5BC92C13", origin[2] );
    _id_3D4B09D94DF0885A = _func_910A912F327B8D34( self );

    while ( amount > 0 )
    {
        thread threat_sight_player_sight_audio( 1, max( _id_3D4B09D94DF0885A, amount ) );
        wait 0.15;
    }

    thread threat_sight_player_sight_audio( 0, max( _id_3D4B09D94DF0885A, amount ) );
}

threat_sight_player_sight_audio( _id_5A80AEB955D466DC, maxthreat, _id_67E8151F4DFC690B )
{
    if ( isdefined( level.stealth ) && isdefined( level.stealth.fnthreatsightplayersightaudio ) )
        self thread [[ level.stealth.fnthreatsightplayersightaudio ]]( _id_5A80AEB955D466DC, maxthreat, _id_67E8151F4DFC690B );
}

_id_9B25540DA1B89219()
{
    if ( isdefined( level.stealth ) && isdefined( level.stealth._id_585390079B597CD6 ) )
        self thread [[ level.stealth._id_585390079B597CD6 ]]();
}

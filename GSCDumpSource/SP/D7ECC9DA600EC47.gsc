// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    precachestring( &"SCRIPT/INTELLIGENCE_OF_EIGHTEEN" );
    precachestring( &"SCRIPT/RORKEFILE_PREV_FOUND" );
    precachestring( &"SCRIPT/RORKEFILE_PICKUP" );
    precachestring( &"SCRIPT/INTELLIGENCE_PERCENT" );
    precachestring( &"SCRIPT/INTELLIGENCE_UPLOADING" );
    level.intel_items = create_array_of_intel_items();
    setdvar( "dvar_6CA72B22BA2FD9EA", level.intel_items.size );
    level.intel_counter = 0;
    setdvar( "dvar_B80696ED82642848", level.intel_counter );
    level.table_origins = create_array_of_origins_from_table();
    initialize_intel();
    intel_think();
}

remove_all_intel()
{
    foreach ( index, trigger in level.intel_items )
    {
        if ( !isdefined( trigger.removed ) )
            trigger remove_intel_item();
    }
}

remove_intel_item()
{
    self.removed = 1;
    self.item hide();
    self.item notsolid();
    scripts\engine\utility::trigger_off();
    level.intel_counter++;
    setdvar( "dvar_B80696ED82642848", level.intel_counter );
    self notify( "end_trigger_thread" );
}

initialize_intel()
{
    foreach ( index, trigger in level.intel_items )
    {
        origin = trigger.origin;
        trigger.num = get_nums_from_origins( origin );
    }
}

intel_think()
{
    foreach ( index, trigger in level.intel_items )
    {
        if ( trigger check_item_found() )
        {
            trigger remove_intel_item();
            continue;
        }

        trigger thread wait_for_pickup();
        trigger thread poll_for_found();
    }
}

poll_for_found()
{
    self endon( "end_loop_thread" );

    if ( isdefined( self ) )
    {
        if ( check_item_found() )
            remove_intel_item();
    }
    else
        return;

    while ( !check_item_found() )
        wait 0.05;

    remove_intel_item();
}

check_item_found()
{
    foreach ( player in level.players )
    {
        if ( !player _meth_B0E56E4A9D063A62( self.num ) )
            return 0;
    }

    return 1;
}

create_array_of_intel_items()
{
    _id_464187C644B1053D = getentarray( "intelligence_item", "targetname" );

    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_464187C644B1053D.size; _id_AC0E594AC96AA3A8++ )
    {
        _id_464187C644B1053D[_id_AC0E594AC96AA3A8].item = getent( _id_464187C644B1053D[_id_AC0E594AC96AA3A8].target, "targetname" );
        _id_464187C644B1053D[_id_AC0E594AC96AA3A8].found = 0;
    }

    return _id_464187C644B1053D;
}

create_array_of_origins_from_table()
{
    _id_B9F8504D39E0FBB5 = 20;
    origins = [];

    for ( num = 1; num <= _id_B9F8504D39E0FBB5; num++ )
    {
        location = tablelookup( "sp/intel_items.csv", 0, num, 4 );

        if ( isdefined( location ) && location != "undefined" )
        {
            _id_47A3A239C6B7196A = strtok( location, "," );

            for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_47A3A239C6B7196A.size; _id_AC0E594AC96AA3A8++ )
                _id_47A3A239C6B7196A[_id_AC0E594AC96AA3A8] = int( _id_47A3A239C6B7196A[_id_AC0E594AC96AA3A8] );

            origins[num] = ( _id_47A3A239C6B7196A[0], _id_47A3A239C6B7196A[1], _id_47A3A239C6B7196A[2] );
            continue;
        }

        origins[num] = undefined;
    }

    return origins;
}

award_intel()
{
    save_intel_for_all_players();
    _func_E1DCE96B999797A4();
    waittillframeend;
    remove_intel_item();
}

wait_for_pickup()
{
    self endon( "end_trigger_thread" );

    if ( self.classname == "trigger_use" )
    {
        self sethintstring( &"SCRIPT/RORKEFILE_PICKUP" );
        self _meth_B26BAE062D0BD27D( 1 );
    }

    thread upload_hold();
    self waittill( "hold_complete" );
    self notify( "end_loop_thread" );
    intel_feedback( level.player );
    award_intel();
}

upload_hold()
{
    level.player.hold_count = 0;

    while ( level.player.hold_count < 30 && isdefined( self ) )
    {
        level.player.hold_count = 0;
        self stoploopsound( "intelligence_pickup_loop" );
        self waittill( "trigger", player );
        self playloopsound( "intelligence_pickup_loop" );
        setdvar( "dvar_111335A236A9FF1F", "intel" );
        setdvar( "dvar_0F401B38CB54CF63", 0.0 );
        thread progress_bar();
        hold_count_check();
    }

    self notify( "hold_complete" );
    self stoploopsound( "intelligence_pickup_loop" );
    setdvar( "dvar_0F401B38CB54CF63", 1.0 );
    setdvar( "dvar_111335A236A9FF1F", "" );
}

hold_count_check()
{
    self endon( "stopped_pressing" );

    while ( isdefined( self ) && isdefined( level.player ) )
    {
        if ( level.player usebuttonpressed() && distance( level.player.origin, self.origin ) < 128 && isalive( level.player ) )
            level.player.hold_count++;
        else
        {
            setdvar( "dvar_111335A236A9FF1F", "" );
            self stoploopsound( "intelligence_pickup_loop" );
            self notify( "stopped_pressing" );
        }

        if ( level.player.hold_count >= 30 )
        {
            setdvar( "dvar_111335A236A9FF1F", "" );
            self notify( "stopped_pressing" );
            self stoploopsound( "intelligence_pickup_loop" );
        }

        waitframe();
    }
}

progress_bar()
{
    self endon( "stopped_pressing" );
    _id_E10D2077EF53FE8A = 30;
    _id_B326AC4D10D79C52 = 8;

    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_E10D2077EF53FE8A; _id_AC0E594AC96AA3A8++ )
    {
        setdvar( "dvar_0F401B38CB54CF63", getdvarfloat( "dvar_0F401B38CB54CF63" ) + 1 / _id_E10D2077EF53FE8A );
        waitframe();
    }
}

intel_upload_text( text, _id_354C73170C82E790 )
{
    self endon( "stopped_pressing" );
    _id_E10D2077EF53FE8A = 30;
    _id_F014D1434E653347 = 10;
    current_time = 0;

    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_E10D2077EF53FE8A; _id_AC0E594AC96AA3A8++ )
    {
        if ( current_time > _id_F014D1434E653347 )
            current_time = 0;

        if ( current_time < _id_F014D1434E653347 / 2 )
            text settext( &"SCRIPT/INTELLIGENCE_UPLOADING" );
        else
            text settext( "" );

        _id_354C73170C82E790.label = int( _id_AC0E594AC96AA3A8 / _id_E10D2077EF53FE8A * 100 );
        _id_354C73170C82E790 settext( &"SCRIPT/INTELLIGENCE_PERCENT" );
        current_time++;
        waitframe();
    }

    text settext( &"SCRIPT/INTELLIGENCE_UPLOADING" );
    _id_354C73170C82E790.label = "100";
    _id_354C73170C82E790 settext( &"SCRIPT/INTELLIGENCE_PERCENT" );
}

save_intel_for_all_players()
{
    foreach ( player in level.players )
    {
        if ( player _meth_B0E56E4A9D063A62( self.num ) )
            continue;

        player _meth_FB1624870DF68E2A( self.num );
    }

    logstring( "found intel item " + self.num );
}

give_point()
{
    _id_23FA13A8754DF71E = self _meth_569AC32FF1837D7C( "cheatPoints" );
    self _meth_98122FA7C7A078D8( "cheatPoints", _id_23FA13A8754DF71E + 1 );
}

intel_feedback( _id_80D5E26DC21FB13B )
{
    self.item hide();
    self.item notsolid();
    playworldsound( "intelligence_pickup", self.item.origin );
    _id_E9A2D4D493E53CE3 = 3000;
    fade_time = 700;
    _id_ADF0B02EFE0BFE92 = _id_E9A2D4D493E53CE3 + fade_time / 1000;

    foreach ( player in level.players )
    {
        if ( _id_80D5E26DC21FB13B != player && player _meth_B0E56E4A9D063A62( self.num ) )
            continue;

        _id_988B782EABFDED57 = player scripts\sp\hud_util::createclientfontstring( "objective", 1.5 );
        _id_988B782EABFDED57.glowcolor = ( 0.7, 0.7, 0.3 );
        _id_988B782EABFDED57.glowalpha = 1;
        _id_988B782EABFDED57 setup_hud_elem();
        _id_988B782EABFDED57.y = -50;
        _id_988B782EABFDED57 setpulsefx( 60, _id_E9A2D4D493E53CE3, fade_time );
        _id_324A6E68A953D960 = 0;

        if ( _id_80D5E26DC21FB13B == player && player _meth_B0E56E4A9D063A62( self.num ) )
            _id_988B782EABFDED57.label = &"SCRIPT/RORKEFILE_PREV_FOUND";
        else
        {
            _id_988B782EABFDED57.label = &"SCRIPT/INTELLIGENCE_OF_EIGHTEEN";
            player give_point();
            _id_324A6E68A953D960 = player _meth_569AC32FF1837D7C( "cheatPoints" );
            _id_988B782EABFDED57 setvalue( _id_324A6E68A953D960 );
        }

        if ( _id_324A6E68A953D960 == 18 )
            player scripts\sp\utility::player_giveachievement_wrapper( "EXT_1" );

        _id_988B782EABFDED57 scripts\engine\utility::delaycall( _id_ADF0B02EFE0BFE92, ::destroy );
    }
}

setup_hud_elem()
{
    self.color = ( 1, 1, 1 );
    self.alpha = 1;
    self.x = 0;
    self.alignx = "center";
    self.aligny = "middle";
    self.horzalign = "center";
    self.vertalign = "middle";
    self.foreground = 1;
}

assert_if_identical_origins()
{
    origins = [];

    for ( _id_AC0E594AC96AA3A8 = 1; _id_AC0E594AC96AA3A8 < 65; _id_AC0E594AC96AA3A8++ )
    {
        location = tablelookup( "sp/intel_items.csv", 0, _id_AC0E594AC96AA3A8, 4 );
        _id_47A3A239C6B7196A = strtok( location, "," );

        for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_47A3A239C6B7196A.size; _id_AC0E594AC96AA3A8++ )
            _id_47A3A239C6B7196A[_id_AC0E594AC96AA3A8] = int( _id_47A3A239C6B7196A[_id_AC0E594AC96AA3A8] );

        origins[_id_AC0E594AC96AA3A8] = ( _id_47A3A239C6B7196A[0], _id_47A3A239C6B7196A[1], _id_47A3A239C6B7196A[2] );
    }

    for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < origins.size; _id_AC0E594AC96AA3A8++ )
    {
        if ( !isdefined( origins[_id_AC0E594AC96AA3A8] ) )
            continue;

        if ( origins[_id_AC0E594AC96AA3A8] == "undefined" )
            continue;

        for ( _id_AC0E5C4AC96AAA41 = 0; _id_AC0E5C4AC96AAA41 < origins.size; _id_AC0E5C4AC96AAA41++ )
        {
            if ( !isdefined( origins[_id_AC0E5C4AC96AAA41] ) )
                continue;

            if ( origins[_id_AC0E5C4AC96AAA41] == "undefined" )
                continue;

            if ( _id_AC0E594AC96AA3A8 == _id_AC0E5C4AC96AAA41 )
                continue;

            if ( origins[_id_AC0E594AC96AA3A8] == origins[_id_AC0E5C4AC96AAA41] )
            {

            }
        }
    }
}

get_nums_from_origins( origin )
{
    for ( _id_AC0E594AC96AA3A8 = 1; _id_AC0E594AC96AA3A8 < level.table_origins.size + 1; _id_AC0E594AC96AA3A8++ )
    {
        if ( !isdefined( level.table_origins[_id_AC0E594AC96AA3A8] ) )
            continue;

        if ( distancesquared( origin, level.table_origins[_id_AC0E594AC96AA3A8] ) < squared( 75 ) )
            return _id_AC0E594AC96AA3A8;
    }
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    level.friendlyfire["min_participation"] = -200;
    level.friendlyfire["max_participation"] = 1000;
    level.friendlyfire["enemy_kill_points"] = 250;
    level.friendlyfire["friend_kill_points"] = -650;
    level.friendlyfire["point_loss_interval"] = 1.25;
    level.friendlyfire["civilians_killed"] = 0;
    level.friendlyfire["strict_ff"] = 0;
    level.player.participation = 0;
    level.friendlyfiredisabled = 0;
    level.friendlyfiredisabledfordestructible = 0;
    setdvarifuninitialized( "dvar_55EAE984217FC9B6", "0" );
    setdvarifuninitialized( "dvar_D8275BFF94773942", "0" );
    setdvarifuninitialized( "dvar_3CB172760816C3BB", "-1" );
    scripts\engine\utility::flag_init( "friendly_fire_warning" );
    thread debug_friendlyfire();
    thread participation_point_flattenovertime();
}

debug_friendlyfire()
{

}

apply_friendly_fire_damage_modifier( value )
{
    level.friendlyfire_damage_modifier = value;
}

remove_friendly_fire_damage_modifier( value )
{
    level.friendlyfire_damage_modifier = undefined;
}

friendly_fire_think( entity )
{
    if ( !isdefined( entity ) )
        return;

    if ( !isdefined( entity.team ) )
        entity.team = "allies";

    level endon( "mission failed" );
    level thread notifydamage( entity );
    level thread notifydamagenotdone( entity );
    level thread notifydeath( entity );

    for (;;)
    {
        if ( !isdefined( entity ) )
            return;

        if ( entity.health <= 0 )
            return;

        damage = undefined;
        attacker = undefined;
        direction = undefined;
        point = undefined;
        _id_3EAA9F644DBE7834 = undefined;
        weaponname = undefined;
        _id_0D23F02852FED23F = undefined;
        entity waittill( "friendlyfire_notify", damage, attacker, direction, point, _id_3EAA9F644DBE7834, objweapon );

        if ( !isdefined( entity ) )
            return;

        if ( istrue( level.skip_friendly_fire_check ) || istrue( entity.skip_friendly_fire_check ) )
            continue;

        if ( !isdefined( attacker ) )
            continue;

        if ( isdefined( level.friendlyfire_damage_modifier ) )
        {
            damage = damage * level.friendlyfire_damage_modifier;
            damage = int( damage );
        }

        _id_54C4C82BFA9FEE40 = 0;

        if ( !isdefined( objweapon ) )
            objweapon = entity.damageweapon;

        if ( isplayer( attacker ) )
        {
            _id_54C4C82BFA9FEE40 = 1;

            if ( isdefined( objweapon ) && isnullweapon( objweapon ) )
                _id_54C4C82BFA9FEE40 = 0;

            if ( attacker isusingturret() )
                _id_54C4C82BFA9FEE40 = 1;

            if ( isdefined( _id_0D23F02852FED23F ) )
                _id_54C4C82BFA9FEE40 = 1;
        }
        else if ( isdefined( attacker.code_classname ) && attacker.code_classname == "script_vehicle" )
        {
            owner = attacker getvehicleowner();

            if ( isdefined( owner ) && isplayer( owner ) )
            {
                attacker = owner;
                _id_54C4C82BFA9FEE40 = 1;
            }
        }

        if ( !_id_54C4C82BFA9FEE40 )
            continue;

        _id_6181D0250AFA3CEC = damage == -1;
        iscivilian = entity iscivilian();
        _id_24CA2FF5DCF9E62D = iscivilian && _id_6181D0250AFA3CEC;

        if ( getdvar( "dvar_D8275BFF94773942" ) == "1" && iscivilian )
            continue;

        if ( _id_24CA2FF5DCF9E62D )
            level.friendlyfire["civilians_killed"] = level.friendlyfire["civilians_killed"] + 1;

        if ( !isdefined( entity.team ) )
            continue;

        _id_DFFCC22A2CAE25B1 = entity isally();

        if ( !_id_DFFCC22A2CAE25B1 && !_id_24CA2FF5DCF9E62D )
        {
            if ( _id_6181D0250AFA3CEC )
            {
                level.player.participation = level.player.participation + level.friendlyfire["enemy_kill_points"];
                participation_point_cap();
                return;
            }
        }
        else
        {
            if ( !iscivilian && !_id_6181D0250AFA3CEC )
                entity thread _id_50EEB9595C6D6E1B::_id_D8ED6827953BCAC2();

            if ( istrue( level.no_friendly_fire_fail ) || istrue( entity.no_friendly_fire_fail ) )
                continue;

            if ( isdefined( level.friendly_fire_skip_function ) && [[ level.friendly_fire_skip_function ]]() )
                continue;

            if ( isdefined( _id_3EAA9F644DBE7834 ) && istrue( level.no_friendly_fire_splash_damage ) )
            {
                if ( _id_3EAA9F644DBE7834 == "MOD_PROJECTILE_SPLASH" )
                    continue;

                if ( isexplosivedamagemod( _id_3EAA9F644DBE7834 ) )
                    continue;
            }

            if ( isdefined( objweapon ) )
            {
                basename = objweapon.basename;

                if ( basename == "claymore" )
                    continue;

                if ( basename == "flash" )
                    continue;

                if ( basename == "semtex" && isdefined( entity.semtexstuckto ) )
                    damage = 9999;

                if ( basename == "throwingknife" )
                    damage = 9999;

                if ( basename == "molotov" )
                    damage = 9999;
            }

            if ( _id_6181D0250AFA3CEC )
            {
                _id_55D426DD45A49E09 = level.friendlyfire["strict_ff"];

                if ( isdefined( self.strict_ff ) )
                    _id_55D426DD45A49E09 = self.strict_ff;

                _id_C9999B7F48063A7B = getdvarint( "dvar_3CB172760816C3BB", -1 );

                if ( _id_C9999B7F48063A7B > -1 )
                    _id_55D426DD45A49E09 = _id_C9999B7F48063A7B;

                if ( _id_55D426DD45A49E09 && !attacker enemy_is_visible() )
                    level.player.participation = level.friendlyfire["min_participation"];
                else if ( isdefined( entity.friend_kill_points ) )
                    level.player.participation = level.player.participation + entity.friend_kill_points;
                else
                {
                    waittillframeend;
                    _id_2180ADC7CD6CB25A = attacker get_adjusted_friendly_kill_points( level.friendlyfire["friend_kill_points"], _id_3EAA9F644DBE7834 );
                    level.player.participation = level.player.participation + _id_2180ADC7CD6CB25A;
                }
            }
            else
                level.player.participation = level.player.participation - damage;

            participation_point_cap();

            if ( check_grenade( entity, _id_3EAA9F644DBE7834 ) && savecommit_aftergrenade() )
            {
                if ( _id_6181D0250AFA3CEC )
                    return;
                else
                    continue;
            }

            if ( isdefined( level.friendly_fire_fail_check ) )
            {
                [[ level.friendly_fire_fail_check ]]( entity, damage, attacker, direction, point, _id_3EAA9F644DBE7834, weaponname );
                continue;
            }

            friendly_fire_checkpoints( _id_24CA2FF5DCF9E62D );
        }
    }
}

get_adjusted_friendly_kill_points( _id_6652C65919B371AD, _id_3EAA9F644DBE7834 )
{
    if ( isdefined( _id_3EAA9F644DBE7834 ) && isexplosivedamagemod( _id_3EAA9F644DBE7834 ) )
        return _id_6652C65919B371AD;

    if ( !self.lastenemykilltime && !self.lastenemydmgtime )
        return _id_6652C65919B371AD;

    _id_946D134EBC6C711D = get_most_recent_dmg_or_death_time();
    _id_9A3457C4A803B506 = gettime() - _id_946D134EBC6C711D;

    if ( _id_9A3457C4A803B506 > 1500 )
        return _id_6652C65919B371AD;

    _id_CCBBA16287668F0A = 1 - scripts\engine\math::normalize_value( 0, 1500, _id_9A3457C4A803B506 );
    _id_A1AABF92E937BFF0 = scripts\engine\math::factor_value( _id_6652C65919B371AD, 0, _id_CCBBA16287668F0A );
    _id_A1AABF92E937BFF0 = int( _id_A1AABF92E937BFF0 );
    return _id_A1AABF92E937BFF0;
}

get_most_recent_dmg_or_death_time()
{
    if ( !self.lastenemykilltime )
        return self.lastenemydmgtime;

    if ( !self.lastenemydmgtime )
        return self.lastenemykilltime;

    if ( self.lastenemydmgtime >= self.lastenemykilltime )
        return self.lastenemydmgtime;
    else
        return self.lastenemykilltime;
}

iscivilian()
{
    if ( isdefined( self.setciviliankillcount ) )
        return self.setciviliankillcount;

    if ( isdefined( self.unittype ) && self.unittype == "civilian" )
        return 1;
    else if ( isdefined( self.asmname ) && self.asmname == "civilian" )
        return 1;
    else
        return 0;
}

isally()
{
    if ( self.team == level.player.team )
        return 1;
    else
        return 0;
}

friendly_fire_checkpoints( _id_24CA2FF5DCF9E62D )
{
    if ( isdefined( level.failonfriendlyfire ) && level.failonfriendlyfire )
    {
        level thread missionfail( _id_24CA2FF5DCF9E62D );
        return;
    }

    _id_A5C198FA345B5CAC = level.friendlyfiredisabledfordestructible;

    if ( isdefined( level.friendlyfire_destructible_attacker ) && _id_24CA2FF5DCF9E62D )
        _id_A5C198FA345B5CAC = 0;

    if ( _id_A5C198FA345B5CAC )
        return;

    if ( level.friendlyfiredisabled == 1 )
        return;

    if ( level.player.participation <= level.friendlyfire["min_participation"] )
        level thread missionfail( _id_24CA2FF5DCF9E62D );
}

check_grenade( entity, _id_3EAA9F644DBE7834 )
{
    if ( !isdefined( entity ) )
        return 0;

    _id_587907F50DC62AB4 = 0;
    objweapon = entity.damageweapon;

    if ( isdefined( objweapon ) && isnullweapon( objweapon ) )
        _id_587907F50DC62AB4 = 1;

    if ( isdefined( _id_3EAA9F644DBE7834 ) && _id_3EAA9F644DBE7834 == "MOD_GRENADE_SPLASH" )
        _id_587907F50DC62AB4 = 1;

    if ( isdefined( objweapon ) && objweapon.basename == "throwingknife" )
        _id_587907F50DC62AB4 = 1;

    if ( isdefined( objweapon ) && objweapon.basename == "molotov" )
        _id_587907F50DC62AB4 = 1;

    return _id_587907F50DC62AB4;
}

savecommit_aftergrenade()
{
    currenttime = gettime();

    if ( currenttime < 4500 )
        return 1;
    else if ( currenttime - level.autosave.lastautosavetime < 4500 )
        return 1;

    return 0;
}

participation_point_cap()
{
    if ( level.player.participation > level.friendlyfire["max_participation"] )
        level.player.participation = level.friendlyfire["max_participation"];

    if ( level.player.participation < level.friendlyfire["min_participation"] )
        level.player.participation = level.friendlyfire["min_participation"];
}

participation_point_flattenovertime()
{
    level endon( "mission failed" );

    for (;;)
    {
        if ( level.player.participation > 0 )
            level.player.participation--;
        else if ( level.player.participation < 0 )
            level.player.participation++;

        wait( level.friendlyfire["point_loss_interval"] );
    }
}

turnbackon()
{
    level.friendlyfiredisabled = 0;
}

turnoff()
{
    level.friendlyfiredisabled = 1;
}

missionfail( _id_24CA2FF5DCF9E62D )
{
    if ( !isdefined( _id_24CA2FF5DCF9E62D ) )
        _id_24CA2FF5DCF9E62D = 0;

    if ( getdvar( "dvar_55EAE984217FC9B6" ) == "1" )
        return;

    if ( getdvarint( "dvar_6B240D6250FC118C" ) > 0 )
        return;

    level.player endon( "death" );

    if ( !isalive( level.player ) )
        return;

    level endon( "mine death" );
    level notify( "mission failed" );
    level notify( "friendlyfire_mission_fail" );
    waittillframeend;
    setsaveddvar( "dvar_3234F1A923121F73", 1 );
    setomnvar( "ui_hide_weapon_info", 1 );
    setsaveddvar( "dvar_4E8225C28298A6AD", 0 );
    setsaveddvar( "dvar_9D7A2FA032E463D5", 1 );

    if ( isdefined( level.player.failingmission ) )
        return;

    if ( _id_24CA2FF5DCF9E62D )
        scripts\sp\player_death::set_custom_death_quote( 499 );
    else if ( isdefined( level.custom_friendly_fire_message ) )
        scripts\sp\player_death::set_custom_death_quote( level.custom_friendly_fire_message );
    else
        scripts\sp\player_death::set_custom_death_quote( 12 );

    if ( isdefined( level.custom_friendly_fire_shader ) )
        thread scripts\sp\player_death::set_death_icon( level.custom_friendly_fire_shader, 64, 64, 0 );

    scripts\sp\utility::missionfailedwrapper();
}

ally_turn_on_player()
{
    level.player endon( "death" );
    self endon( "death" );
    self stopanimscripted();
    scripts\engine\sp\utility::clear_force_color();
    _id_3B64EB40368C1450::set( "ai_turn_on_player", "ignoresuppression", 1 );
    scripts\engine\sp\utility::clearthreatbias( "axis", "allies" );

    for (;;)
    {
        self.team = "axis";
        self.favoritenemy = level.player;
        wait 0.05;
    }
}

notifydamage( entity )
{
    entity endon( "death" );

    for (;;)
    {
        entity waittill( "damage", damage, attacker, direction, point, _id_3EAA9F644DBE7834, _id_97282C14346A7FCF, _id_97282C14346A7FCF, _id_97282C14346A7FCF, _id_97282C14346A7FCF, objweapon );
        entity notify( "friendlyfire_notify", damage, attacker, direction, point, _id_3EAA9F644DBE7834, objweapon );
    }
}

notifydamagenotdone( entity )
{
    entity waittill( "damage_notdone", damage, attacker, _id_97282C14346A7FCF, _id_3EAA9F644DBE7834 );
    entity notify( "friendlyfire_notify", -1, attacker, undefined, undefined, _id_3EAA9F644DBE7834 );
}

notifydeath( entity )
{
    entity waittill( "death", attacker, _id_3EAA9F644DBE7834, objweapon );
    entity notify( "friendlyfire_notify", -1, attacker, undefined, undefined, _id_3EAA9F644DBE7834, objweapon );
}

detectfriendlyfireonentity( entity )
{

}

reset_friendlyfire_participation()
{
    level.player.participation = 0;
}

enemy_is_visible()
{
    _id_946D134EBC6C711D = get_most_recent_dmg_or_death_time();
    _id_9A3457C4A803B506 = gettime() - _id_946D134EBC6C711D;

    if ( _id_9A3457C4A803B506 < 600 )
        return 1;

    cos30 = 0.866025;

    foreach ( enemy in getaiarray( "axis" ) )
    {
        _id_126AA9EABC160873 = scripts\engine\math::within_fov_2d( level.player.origin, level.player.angles, enemy.origin, cos30 );
        _id_126AA9EABC160873 = _id_126AA9EABC160873 & enemy seerecently( level.player, 2.0 );

        if ( _id_126AA9EABC160873 )
            return 1;
    }

    return 0;
}

strict_ff_enable()
{
    level.friendlyfire["strict_ff"] = 1;
}

strict_ff_disable()
{
    level.friendlyfire["strict_ff"] = 0;
}

set_strict_ff( _id_E3108E412AFB3811 )
{
    self.strict_ff = _id_E3108E412AFB3811;
}

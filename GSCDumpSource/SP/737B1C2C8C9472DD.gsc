// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

register_idle_scene( _id_4C605DE032E7D01E, struct )
{
    level.ambient_idle_scenes[_id_4C605DE032E7D01E] = struct;
}

get_idle_scene( _id_4C605DE032E7D01E )
{
    if ( !isdefined( level.ambient_idle_scenes ) || !isdefined( level.ambient_idle_scenes[_id_4C605DE032E7D01E] ) )
        return undefined;

    return level.ambient_idle_scenes[_id_4C605DE032E7D01E];
}

#using_animtree("generic_human");

play_ambient_idle_scene( guy, _id_007E2EA67FD484D8 )
{
    self.random_ambient_idle_playing = 0;

    if ( isai( guy ) && !isdefined( guy.is_cheap ) )
        guy animmode( "noclip" );

    wait 0.1;
    guy clearanim( %root, 0.0 );

    if ( isdefined( guy.is_cheap ) )
    {
        if ( isdefined( _id_007E2EA67FD484D8 ) && _id_007E2EA67FD484D8 )
        {
            thread random_idle_scene_controller_simple( guy );
            thread random_idle_scene_end_cheap( guy );
        }
        else
        {
            thread random_idle_scene_controller( guy );
            thread random_idle_scene_end_cheap( guy );
        }
    }
    else if ( isdefined( _id_007E2EA67FD484D8 ) && _id_007E2EA67FD484D8 )
    {
        thread random_idle_scene_controller_simple( guy );
        thread random_idle_scene_end();
    }
    else
    {
        thread random_idle_scene_controller( guy );
        thread random_idle_scene_end();
    }

    self waittill( "ambient_idle_scene_end" );
}

play_ambient_idle_scene_single( guys, is_cheap, _id_007E2EA67FD484D8 )
{
    if ( !isdefined( is_cheap ) )
        is_cheap = 1;

    if ( !isdefined( _id_007E2EA67FD484D8 ) )
        _id_007E2EA67FD484D8 = 1;

    if ( isdefined( self.ambient_idle_anim_node ) )
        self.ambient_idle_anim_node = scripts\engine\utility::spawn_script_origin();

    _id_E729F498D927BB19 = [];

    foreach ( guy in guys )
    {
        guy.random_ambient_idle_playing = 0;

        if ( !is_cheap && isai( guy ) )
        {
            guy animmode( "noclip" );
            guy forceteleport( self.origin, self.angles, 100000.0 );
            continue;
        }

        guy.origin = self.origin;
        guy.angles = self.angles;
    }

    if ( _id_007E2EA67FD484D8 )
    {
        thread random_idle_scene_controller_simple_single( guys );
        thread random_idle_scene_end_cheap_single( guys );
    }
    else
    {
        thread random_idle_scene_controller_single( guys );
        thread random_idle_scene_end_cheap_single( guys );
    }

    self waittill( "ambient_idle_scene_end" );
}

clear_root()
{
    self clearanim( %root, 0.1 );
}

random_idle_scene_controller( guy )
{
    self endon( "death" );
    self endon( "ambient_idle_scene_end" );
    _id_465A06BAE1ABB77E = 0;
    _id_9016CDD15DA6E3DC = level.scr_anim[guy.animname]["idle_anims"].size;
    _id_01C2B4D83937AE3A = level.scr_anim[guy.animname]["idle_base"];
    _id_A195EE033962CD5F = [];
    _id_2B0D32B53D3F80C3 = 0;
    self notify( "ambient_idle_scene_start" );
    thread scripts\common\notetrack::start_notetrack_wait( guy, "single anim" );
    thread scripts\sp\anim::animscriptdonotetracksthread( guy, "single anim" );

    for (;;)
    {
        if ( _id_A195EE033962CD5F.size >= _id_9016CDD15DA6E3DC )
        {
            _id_2B0D32B53D3F80C3 = randomint( _id_9016CDD15DA6E3DC );
            _id_A195EE033962CD5F = [];
            _id_A195EE033962CD5F = scripts\engine\utility::array_add( _id_A195EE033962CD5F, _id_2B0D32B53D3F80C3 );
        }
        else
        {
            _id_2B0D32B53D3F80C3 = randomint( _id_9016CDD15DA6E3DC );

            for (;;)
            {
                if ( scripts\engine\utility::array_contains( _id_A195EE033962CD5F, _id_2B0D32B53D3F80C3 ) )
                {
                    _id_2B0D32B53D3F80C3 = randomint( _id_9016CDD15DA6E3DC );
                    continue;
                }

                _id_A195EE033962CD5F = scripts\engine\utility::array_add( _id_A195EE033962CD5F, _id_2B0D32B53D3F80C3 );
                break;
            }
        }

        if ( !isdefined( guy ) )
            return;

        _id_43CD10491329D3AD = level.scr_anim[guy.animname]["idle_anims"][_id_2B0D32B53D3F80C3];
        _id_D5685B7BAEE6505E = getstartorigin( self.origin, self.angles, _id_01C2B4D83937AE3A );
        _id_66280091B78EAF4F = getstartangles( self.origin, self.angles, _id_01C2B4D83937AE3A );

        if ( isdefined( guy.is_cheap ) || !isai( guy ) )
        {
            guy.origin = _id_D5685B7BAEE6505E;
            guy.angles = _id_66280091B78EAF4F;
        }
        else
            guy forceteleport( _id_D5685B7BAEE6505E, _id_66280091B78EAF4F, 100000.0 );

        root = undefined;

        if ( isdefined( guy.anim_getrootfunc ) )
            root = [[ guy.anim_getrootfunc ]]();

        _id_06A626AE2A0ECB1E = getanimlength( _id_01C2B4D83937AE3A );
        _id_5406E6EFFD6154E8 = randomintrange( 1, 4 );
        wait_time = _id_06A626AE2A0ECB1E * float( _id_5406E6EFFD6154E8 );

        if ( !isdefined( guy ) )
            return;

        guy animscripted( "single anim", self.origin, self.angles, _id_01C2B4D83937AE3A, undefined, undefined, 0.2 );
        wait( wait_time );

        if ( !isdefined( guy ) )
            return;

        wait_check_player_anim_interference( _id_01C2B4D83937AE3A, _id_43CD10491329D3AD[0], guy );

        if ( !isdefined( guy ) )
            return;

        guy clearanim( _id_01C2B4D83937AE3A, 0.1 );
        guy animscripted( "single anim", self.origin, self.angles, _id_43CD10491329D3AD[0], undefined, undefined, 0.2 );
        _id_A01B20054E035EF2 = getanimlength( _id_43CD10491329D3AD[0] );
        wait( _id_A01B20054E035EF2 );

        if ( !isdefined( guy ) )
            return;

        guy clearanim( _id_43CD10491329D3AD[0], 0.1 );
        guy animscripted( "single anim", self.origin, self.angles, _id_43CD10491329D3AD[1], undefined, undefined, 0.2 );
        _id_06A626AE2A0ECB1E = getanimlength( _id_43CD10491329D3AD[1] );
        _id_5406E6EFFD6154E8 = randomintrange( 1, 4 );
        wait_time = _id_06A626AE2A0ECB1E * float( _id_5406E6EFFD6154E8 );
        wait( wait_time );

        if ( !isdefined( guy ) )
            return;

        wait_check_player_anim_interference( _id_43CD10491329D3AD[1], _id_43CD10491329D3AD[2], guy );

        if ( !isdefined( guy ) )
            return;

        guy clearanim( _id_43CD10491329D3AD[1], 0.1 );
        guy animscripted( "single anim", self.origin, self.angles, _id_43CD10491329D3AD[2], undefined, undefined, 0.2 );
        _id_A01B1F054E035CBF = getanimlength( _id_43CD10491329D3AD[2] );
        wait( _id_A01B1F054E035CBF );

        if ( !isdefined( guy ) )
            return;

        guy clearanim( _id_43CD10491329D3AD[2], 0.1 );
        waitframe();
    }
}

random_idle_scene_controller_single( guys )
{
    self endon( "death" );
    self endon( "ambient_idle_scene_end" );
    _id_465A06BAE1ABB77E = 0;
    _id_9016CDD15DA6E3DC = level.scr_anim[guys[0].animname]["idle_anims"].size;
    _id_01C2B4D83937AE3A = level.scr_anim[guys[0].animname]["idle_base"];
    _id_A195EE033962CD5F = [];
    _id_2B0D32B53D3F80C3 = 0;
    self notify( "ambient_idle_scene_start" );

    foreach ( guy in guys )
    {
        if ( !isdefined( guy.animtree ) )
            guy scripts\common\anim::setanimtree();

        thread scripts\common\notetrack::start_notetrack_wait( guy, "single anim" );
        thread scripts\sp\anim::animscriptdonotetracksthread( guy, "single anim" );
    }

    for (;;)
    {
        if ( _id_A195EE033962CD5F.size >= _id_9016CDD15DA6E3DC )
        {
            _id_2B0D32B53D3F80C3 = randomint( _id_9016CDD15DA6E3DC );
            _id_A195EE033962CD5F = [];
            _id_A195EE033962CD5F = scripts\engine\utility::array_add( _id_A195EE033962CD5F, _id_2B0D32B53D3F80C3 );
        }
        else
        {
            _id_2B0D32B53D3F80C3 = randomint( _id_9016CDD15DA6E3DC );

            for (;;)
            {
                if ( scripts\engine\utility::array_contains( _id_A195EE033962CD5F, _id_2B0D32B53D3F80C3 ) )
                {
                    _id_2B0D32B53D3F80C3 = randomint( _id_9016CDD15DA6E3DC );
                    continue;
                }

                _id_A195EE033962CD5F = scripts\engine\utility::array_add( _id_A195EE033962CD5F, _id_2B0D32B53D3F80C3 );
                break;
            }
        }

        wait_time = 0;
        _id_43CD10491329D3AD = undefined;

        foreach ( guy in guys )
        {
            _id_43CD10491329D3AD = level.scr_anim[guy.animname]["idle_anims"][_id_2B0D32B53D3F80C3];
            _id_D5685B7BAEE6505E = getstartorigin( self.origin, self.angles, _id_01C2B4D83937AE3A );
            _id_66280091B78EAF4F = getstartangles( self.origin, self.angles, _id_01C2B4D83937AE3A );
            _id_01C2B4D83937AE3A = level.scr_anim[guy.animname]["idle_base"];

            if ( isdefined( guy.is_cheap ) || !isai( guy ) )
            {
                guy.origin = _id_D5685B7BAEE6505E;
                guy.angles = _id_66280091B78EAF4F;
            }
            else
                guy forceteleport( _id_D5685B7BAEE6505E, _id_66280091B78EAF4F, 100000.0 );

            root = undefined;

            if ( isdefined( guy.anim_getrootfunc ) )
                root = [[ guy.anim_getrootfunc ]]();

            _id_06A626AE2A0ECB1E = getanimlength( _id_01C2B4D83937AE3A );
            _id_5406E6EFFD6154E8 = randomintrange( 1, 4 );
            wait_time = _id_06A626AE2A0ECB1E * float( _id_5406E6EFFD6154E8 );
            guy animscripted( "single anim", self.origin, self.angles, _id_01C2B4D83937AE3A, undefined, undefined, 0.2 );
        }

        wait( wait_time );
        _id_20D2FF2688B34338 = [];

        foreach ( guy in guys )
            _id_20D2FF2688B34338 = scripts\engine\utility::array_add( _id_20D2FF2688B34338, level.scr_anim[guy.animname]["idle_anims"][_id_2B0D32B53D3F80C3][0] );

        wait_check_player_anim_interference_group( _id_01C2B4D83937AE3A, _id_20D2FF2688B34338, guys );

        foreach ( guy in guys )
        {
            _id_01C2B4D83937AE3A = level.scr_anim[guy.animname]["idle_base"];
            _id_43CD10491329D3AD = level.scr_anim[guy.animname]["idle_anims"][_id_2B0D32B53D3F80C3];
            guy clearanim( _id_01C2B4D83937AE3A, 0.1 );
            guy animscripted( "single anim", self.origin, self.angles, _id_43CD10491329D3AD[0], undefined, undefined, 0.2 );
        }

        _id_A01B20054E035EF2 = getanimlength( _id_43CD10491329D3AD[0] );
        wait( _id_A01B20054E035EF2 );

        foreach ( guy in guys )
        {
            _id_43CD10491329D3AD = level.scr_anim[guy.animname]["idle_anims"][_id_2B0D32B53D3F80C3];
            guy clearanim( _id_43CD10491329D3AD[0], 0.1 );
            guy animscripted( "single anim", self.origin, self.angles, _id_43CD10491329D3AD[1], undefined, undefined, 0.2 );
        }

        _id_06A626AE2A0ECB1E = getanimlength( _id_43CD10491329D3AD[1] );
        _id_5406E6EFFD6154E8 = randomintrange( 1, 4 );
        wait_time = _id_06A626AE2A0ECB1E * float( _id_5406E6EFFD6154E8 );
        wait( wait_time );
        _id_20D2FF2688B34338 = [];

        foreach ( guy in guys )
            _id_20D2FF2688B34338 = scripts\engine\utility::array_add( _id_20D2FF2688B34338, level.scr_anim[guy.animname]["idle_anims"][_id_2B0D32B53D3F80C3][2] );

        wait_check_player_anim_interference_group( _id_43CD10491329D3AD[1], _id_20D2FF2688B34338, guys );

        foreach ( guy in guys )
        {
            _id_01C2B4D83937AE3A = level.scr_anim[guy.animname]["idle_base"];
            _id_43CD10491329D3AD = level.scr_anim[guy.animname]["idle_anims"][_id_2B0D32B53D3F80C3];
            guy clearanim( _id_43CD10491329D3AD[1], 0.1 );
            guy animscripted( "single anim", self.origin, self.angles, _id_43CD10491329D3AD[2], undefined, undefined, 0.2 );
        }

        _id_A01B1F054E035CBF = getanimlength( _id_43CD10491329D3AD[2] );
        wait( _id_A01B1F054E035CBF );

        foreach ( guy in guys )
        {
            _id_43CD10491329D3AD = level.scr_anim[guy.animname]["idle_anims"][_id_2B0D32B53D3F80C3];
            guy clearanim( _id_43CD10491329D3AD[2], 0.1 );
        }

        waitframe();
    }
}

random_idle_scene_end()
{
    scripts\asm\asm_sp::asm_stopanimscripted();
    self notify( "ambient_idle_scene_end" );
}

random_idle_scene_end_single( guys )
{
    foreach ( guy in guys )
    {
        if ( isent( guy ) )
        {
            guy scripts\asm\asm_sp::asm_stopanimscripted();
            guy notify( "ambient_idle_scene_end" );
        }
    }
}

random_idle_scene_end_cheap( guy )
{
    self endon( "death" );
    self waittill( "ambient_scene_end" );

    if ( isent( guy ) )
        guy clear_root();

    self notify( "ambient_idle_scene_end" );
}

random_idle_scene_end_cheap_single( guys )
{
    self endon( "death" );
    self waittill( "ambient_scene_end" );

    foreach ( guy in guys )
    {
        if ( isent( guy ) )
            guy stopanimscripted();
    }

    self notify( "ambient_idle_scene_end" );
}

random_idle_scene_controller_simple( guy )
{
    self endon( "death" );
    self endon( "ambient_idle_scene_end" );
    _id_9016CDD15DA6E3DC = level.scr_anim[guy.animname]["idle_anims"].size;
    _id_01C2B4D83937AE3A = level.scr_anim[guy.animname]["idle_base"];
    _id_A195EE033962CD5F = [];
    _id_36720FB597BDFD42 = 0;
    self notify( "ambient_idle_scene_start" );
    thread scripts\common\notetrack::start_notetrack_wait( guy, "single anim" );
    thread scripts\sp\anim::animscriptdonotetracksthread( guy, "single anim" );

    for (;;)
    {
        if ( _id_A195EE033962CD5F.size >= _id_9016CDD15DA6E3DC )
        {
            _id_36720FB597BDFD42 = randomint( _id_9016CDD15DA6E3DC );
            _id_A195EE033962CD5F = [];
            _id_A195EE033962CD5F = scripts\engine\utility::array_add( _id_A195EE033962CD5F, _id_36720FB597BDFD42 );
        }
        else
        {
            _id_36720FB597BDFD42 = randomint( _id_9016CDD15DA6E3DC );

            for (;;)
            {
                if ( scripts\engine\utility::array_contains( _id_A195EE033962CD5F, _id_36720FB597BDFD42 ) )
                {
                    _id_36720FB597BDFD42 = randomint( _id_9016CDD15DA6E3DC );
                    continue;
                }

                _id_A195EE033962CD5F = scripts\engine\utility::array_add( _id_A195EE033962CD5F, _id_36720FB597BDFD42 );
                break;
            }
        }

        _id_D36C326E46C200A3 = level.scr_anim[guy.animname]["idle_anims"][_id_36720FB597BDFD42];
        _id_D5685B7BAEE6505E = getstartorigin( self.origin, self.angles, _id_01C2B4D83937AE3A );
        _id_66280091B78EAF4F = getstartangles( self.origin, self.angles, _id_01C2B4D83937AE3A );

        if ( isdefined( guy.is_cheap ) || !isai( guy ) )
        {
            guy.origin = _id_D5685B7BAEE6505E;
            guy.angles = _id_66280091B78EAF4F;
        }
        else
            guy forceteleport( _id_D5685B7BAEE6505E, _id_66280091B78EAF4F, 100000.0 );

        root = undefined;

        if ( isdefined( guy.anim_getrootfunc ) )
            root = [[ guy.anim_getrootfunc ]]();

        _id_06A626AE2A0ECB1E = getanimlength( _id_01C2B4D83937AE3A );
        _id_5406E6EFFD6154E8 = randomintrange( 1, 4 );
        wait_time = _id_06A626AE2A0ECB1E * float( _id_5406E6EFFD6154E8 );
        guy animscripted( "single anim", self.origin, self.angles, _id_01C2B4D83937AE3A, undefined, undefined, 0.2 );
        wait( wait_time );
        guy clearanim( _id_01C2B4D83937AE3A, 0.1 );
        guy animscripted( "single anim", self.origin, self.angles, _id_D36C326E46C200A3, undefined, undefined, 0.2 );
        _id_A01B20054E035EF2 = getanimlength( _id_D36C326E46C200A3 );
        wait( _id_A01B20054E035EF2 );
        guy clearanim( _id_D36C326E46C200A3, 0.1 );
        waitframe();
    }
}

random_idle_scene_controller_simple_single( guys )
{
    self endon( "death" );
    self endon( "ambient_idle_scene_end" );
    _id_9016CDD15DA6E3DC = level.scr_anim[guys[0].animname]["idle_anims"].size;
    _id_A195EE033962CD5F = [];
    _id_36720FB597BDFD42 = 0;
    animnode = self;
    self notify( "ambient_idle_scene_start" );

    foreach ( guy in guys )
    {
        _id_01C2B4D83937AE3A = level.scr_anim[guy.animname]["idle_base"];
        _id_D5685B7BAEE6505E = getstartorigin( self.origin, self.angles, _id_01C2B4D83937AE3A );
        _id_66280091B78EAF4F = getstartangles( self.origin, self.angles, _id_01C2B4D83937AE3A );
        guy.origin = _id_D5685B7BAEE6505E;
        guy.angles = _id_66280091B78EAF4F;
        thread scripts\common\notetrack::start_notetrack_wait( guy, "single anim" );
        thread scripts\sp\anim::animscriptdonotetracksthread( guy, "single anim" );
        root = undefined;

        if ( isdefined( guy.anim_getrootfunc ) )
            root = [[ guy.anim_getrootfunc ]]();

        guy animscripted( "single anim", self.origin, self.angles, _id_01C2B4D83937AE3A, undefined, root, 0.0 );
    }

    for (;;)
    {
        if ( _id_A195EE033962CD5F.size >= _id_9016CDD15DA6E3DC )
        {
            _id_36720FB597BDFD42 = randomint( _id_9016CDD15DA6E3DC );
            _id_A195EE033962CD5F = [];
            _id_A195EE033962CD5F = scripts\engine\utility::array_add( _id_A195EE033962CD5F, _id_36720FB597BDFD42 );
        }
        else
        {
            _id_36720FB597BDFD42 = randomint( _id_9016CDD15DA6E3DC );

            for (;;)
            {
                if ( scripts\engine\utility::array_contains( _id_A195EE033962CD5F, _id_36720FB597BDFD42 ) )
                {
                    _id_36720FB597BDFD42 = randomint( _id_9016CDD15DA6E3DC );
                    continue;
                }

                _id_A195EE033962CD5F = scripts\engine\utility::array_add( _id_A195EE033962CD5F, _id_36720FB597BDFD42 );
                break;
            }
        }

        _id_FDEB89C8BAD3E5A6 = [];
        wait_time = 0;
        _id_5406E6EFFD6154E8 = randomintrange( 1, 4 );

        foreach ( guy in guys )
        {
            _id_01C2B4D83937AE3A = level.scr_anim[guy.animname]["idle_base"];
            _id_D5685B7BAEE6505E = getstartorigin( self.origin, self.angles, _id_01C2B4D83937AE3A );
            _id_66280091B78EAF4F = getstartangles( self.origin, self.angles, _id_01C2B4D83937AE3A );
            guy.origin = _id_D5685B7BAEE6505E;
            guy.angles = _id_66280091B78EAF4F;
            root = undefined;

            if ( isdefined( guy.anim_getrootfunc ) )
                root = [[ guy.anim_getrootfunc ]]();

            _id_06A626AE2A0ECB1E = getanimlength( _id_01C2B4D83937AE3A );
            wait_time = _id_06A626AE2A0ECB1E;
            guy animscripted( "single anim", self.origin, self.angles, _id_01C2B4D83937AE3A, undefined, root, 0.2 );
        }

        wait( wait_time );
        _id_0A1014EE6E2EA9F2 = 0;

        foreach ( _id_AC0E594AC96AA3A8, guy in guys )
        {
            _id_01C2B4D83937AE3A = level.scr_anim[guy.animname]["idle_base"];
            _id_D36C326E46C200A3 = level.scr_anim[guy.animname]["idle_anims"][_id_36720FB597BDFD42];
            _id_D5685B7BAEE6505E = getstartorigin( self.origin, self.angles, _id_D36C326E46C200A3 );
            _id_66280091B78EAF4F = getstartangles( self.origin, self.angles, _id_D36C326E46C200A3 );
            guy.origin = _id_D5685B7BAEE6505E;
            guy.angles = _id_66280091B78EAF4F;
            root = undefined;

            if ( isdefined( guy.anim_getrootfunc ) )
                root = [[ guy.anim_getrootfunc ]]();

            guy animscripted( "single anim", self.origin, self.angles, _id_D36C326E46C200A3, undefined, root, 0.2 );
            _id_0A1014EE6E2EA9F2 = getanimlength( _id_D36C326E46C200A3 );
        }

        wait( _id_0A1014EE6E2EA9F2 );
    }
}

is_ambient_scene( _id_4C605DE032E7D01E )
{
    return isdefined( level.ambient_idle_scenes ) && isdefined( level.ambient_idle_scenes[_id_4C605DE032E7D01E] );
}

is_ambient_idle_struct( struct )
{
    if ( isdefined( struct.script_noteworthy ) && is_ambient_scene( struct.script_noteworthy ) )
        return 1;

    return 0;
}

wait_check_player_anim_interference( _id_DE406E91C3F7BAB9, _id_CBB4B60C5B00B024, _id_63D4FB5B2997628D )
{
    self endon( "death" );
    self endon( "ambient_idle_scene_end" );
    _id_63D4FB5B2997628D endon( "death" );

    if ( !isdefined( _id_63D4FB5B2997628D ) )
        return;

    _id_465A06BAE1ABB77E = length2d( level.player.origin - _id_63D4FB5B2997628D.origin );
    _id_E5248199A52F4934 = length2d( level.player.origin - _id_63D4FB5B2997628D _id_7E4D332E911E1B90::getanimendpos( _id_CBB4B60C5B00B024 ) );
    _id_33E1BBB42630BAB8 = float( getdvar( "dvar_11A6AAF18B50047B" ) ) * 0.25;

    for (;;)
    {
        if ( _id_465A06BAE1ABB77E / _id_33E1BBB42630BAB8 > getanimlength( _id_CBB4B60C5B00B024 ) && _id_E5248199A52F4934 / _id_33E1BBB42630BAB8 > getanimlength( _id_CBB4B60C5B00B024 ) )
            break;

        if ( !isdefined( _id_63D4FB5B2997628D ) )
            return;

        _id_465A06BAE1ABB77E = length2d( level.player.origin - _id_63D4FB5B2997628D.origin );
        _id_E5248199A52F4934 = length2d( level.player.origin - _id_63D4FB5B2997628D _id_7E4D332E911E1B90::getanimendpos( _id_CBB4B60C5B00B024 ) );
        _id_33E1BBB42630BAB8 = float( getdvar( "dvar_11A6AAF18B50047B" ) ) * 0.25;
        _id_418D888229A3135D = getanimlength( _id_DE406E91C3F7BAB9 );
        wait( _id_418D888229A3135D );
    }
}

wait_check_player_anim_interference_group( _id_DE406E91C3F7BAB9, _id_20D2FF2688B34338, _id_36FD215534D14BA9 )
{
    self endon( "death" );
    self endon( "ambient_idle_scene_end" );
    _id_465A06BAE1ABB77E = undefined;
    _id_E5248199A52F4934 = undefined;
    _id_33E1BBB42630BAB8 = float( getdvar( "dvar_11A6AAF18B50047B" ) ) * 0.25;

    for (;;)
    {
        _id_5E315B115A62E8AF = 0;

        for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < _id_36FD215534D14BA9.size; _id_AC0E594AC96AA3A8++ )
        {
            guy = _id_36FD215534D14BA9[_id_AC0E594AC96AA3A8];
            _id_465A06BAE1ABB77E = length2d( level.player.origin - guy.origin );
            _id_E5248199A52F4934 = length2d( level.player.origin - guy _id_7E4D332E911E1B90::getanimendpos( _id_20D2FF2688B34338[_id_AC0E594AC96AA3A8] ) );
            _id_33E1BBB42630BAB8 = float( getdvar( "dvar_11A6AAF18B50047B" ) ) * 0.25;

            if ( _id_465A06BAE1ABB77E / _id_33E1BBB42630BAB8 > getanimlength( _id_20D2FF2688B34338[_id_AC0E594AC96AA3A8] ) && _id_E5248199A52F4934 / _id_33E1BBB42630BAB8 > getanimlength( _id_20D2FF2688B34338[_id_AC0E594AC96AA3A8] ) )
                _id_5E315B115A62E8AF++;
        }

        if ( _id_5E315B115A62E8AF >= _id_36FD215534D14BA9.size )
            break;

        _id_418D888229A3135D = getanimlength( _id_DE406E91C3F7BAB9 );
        wait( _id_418D888229A3135D );
    }
}

play_random_idles( actor, _id_958AC5039223ED70, _id_72E7F473BBAB5D91 )
{
    self endon( "stop_idles" );
    self endon( "death" );
    actor endon( "death" );
    _id_AD084B6EEE8B803D = [];
    anim_array = _id_72E7F473BBAB5D91;
    _id_4FBDB8A4C881D739 = undefined;
    actor.random_idles = 1;

    for (;;)
    {
        scripts\common\anim::anim_single_solo( actor, _id_958AC5039223ED70 );

        if ( anim_array.size < 1 )
            anim_array = _id_AD084B6EEE8B803D;

        _id_4FBDB8A4C881D739 = randomint( anim_array.size );
        scripts\common\anim::anim_single_solo( actor, anim_array[_id_4FBDB8A4C881D739] );
        _id_AD084B6EEE8B803D = scripts\engine\utility::array_add( _id_AD084B6EEE8B803D, anim_array[_id_4FBDB8A4C881D739] );
        anim_array = scripts\engine\utility::array_remove( anim_array, anim_array[_id_4FBDB8A4C881D739] );
        waitframe();
    }
}

stop_random_idles()
{
    self notify( "stop_idles" );
    self.random_idles = undefined;
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

oil_barrel_init()
{
    level.g_effect["oil_barrel_impact"] = loadfx( "vfx/iw8/prop/scriptables/shared/vfx_imp_oil_stream.vfx" );
    level.g_effect["oil_barrel_death"] = loadfx( "vfx/iw8/prop/scriptables/vfx_oil_drum_big_01_s3.vfx" );
    barrels = oil_get_barrels();

    foreach ( _id_DDC4E4BDECFF28CD in barrels )
        _id_DDC4E4BDECFF28CD thread oil_barrel();
}

oil_get_barrels()
{
    return getentarray( "dyn_oil_barrel", "targetname" );
}

oil_barrel()
{
    self endon( "barrel_death" );
    self endon( "barrel_delete" );
    scripts\sp\destructibles\barrel_common::barrel_setup( "oil", 450, 250, 9100, 15000, 80, 28 );
    self.health = 9450;

    for (;;)
    {
        self waittill( "damage", amount, attacker, direction_vec, point, type, modelname, tagname, partname, _id_44E290FB31B85206, objweapon );

        if ( !scripts\sp\destructibles\barrel_common::isvalidbarreldamage( attacker, type ) )
            continue;

        if ( !isdefined( type ) )
            continue;

        if ( self.spewtags.size >= 4 )
            continue;

        _id_5B234F9FF418F161 = strtok( type, "_" );

        if ( !scripts\engine\utility::array_contains( _id_5B234F9FF418F161, "BULLET" ) )
            continue;

        tag = scripts\engine\utility::spawn_tag_origin( point );
        _id_06A3A1033FFC2699 = vectornormalize( self.origin - point );
        _id_A43B0202C06E0907 = vectortoangles( _id_06A3A1033FFC2699 * -1 );
        tag.angles = scripts\engine\utility::flat_angle( _id_A43B0202C06E0907 );
        tag linkto( self );
        _id_B9BB95FBC1D74650 = spawn( "script_origin", point );
        _id_B9BB95FBC1D74650 linkto( self );
        self notify( "new_spew", tag );
        playfxontag( level.g_effect["oil_barrel_impact"], tag, "tag_origin" );
        tag playsound( "dst_oil_barrel_puncture_stream_start" );
        _id_B9BB95FBC1D74650 _meth_F4604329F388A96F( 0, 0.0 );
        _id_B9BB95FBC1D74650 playloopsound( "dst_oil_barrel_puncture_stream_lp" );
        _id_B9BB95FBC1D74650 _meth_F4604329F388A96F( 1, 0.25 );
        _id_B9BB95FBC1D74650 thread sfx_stop_oil_barrel_stream();
        self.spewtags = scripts\engine\utility::array_add( self.spewtags, tag );
        thread oilimpactlife( tag );
    }
}

oilbarrelshoulddie( amount, attacker, type, objweapon )
{
    if ( isdefined( amount ) && amount < 100 )
        return 0;

    if ( isdefined( type ) )
    {
        switch ( type )
        {
            case "SPLASH":
            case "MOD_PROJECTILE":
            case "MOD_GRENADE":
            case "MOD_PROJECTILE_SPLASH":
            case "MOD_GRENADE_SPLASH":
            case "MOD_EXPLOSIVE":
                return 1;
        }
    }

    return 0;
}

oilimpactlife( _id_07561611ACE525E6 )
{
    scripts\engine\utility::waittill_notify_or_timeout( "entitydeleted", 5 );

    if ( isdefined( self ) )
        self.spewtags = scripts\engine\utility::array_remove( self.spewtags, _id_07561611ACE525E6 );

    _id_07561611ACE525E6 delete();
}

oil_barrel_death()
{
    self notify( "barrel_death" );

    if ( isdefined( self ) )
        self hide();

    playfx( level.g_effect["oil_barrel_death"], self.origin );

    foreach ( _id_F7806D4CF24AACD3 in self.spewtags )
    {
        killfxontag( level.g_effect["oil_barrel_impact"], _id_F7806D4CF24AACD3, "tag_origin" );
        waitframe();

        if ( isdefined( _id_F7806D4CF24AACD3 ) )
            _id_F7806D4CF24AACD3 delete();
    }

    if ( isdefined( self ) )
        thread delay_delete( 5 );
}

delay_delete( time )
{
    wait( time );

    if ( isdefined( self ) )
        self delete();
}

sfx_stop_oil_barrel_stream()
{
    wait 3.3;
    _id_05AFCD2364A0F069 = 0.25;
    self playsound( "dst_oil_barrel_puncture_stream_stop" );
    self _meth_F4604329F388A96F( 0, _id_05AFCD2364A0F069 );
    wait 0.3;
    self stoploopsound( "dst_oil_barrel_puncture_stream_lp" );
    self delete();
}

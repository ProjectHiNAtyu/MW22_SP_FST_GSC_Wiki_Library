// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

setupdestructibleparts()
{
    if ( isdefined( self.damageparts ) )
        thread damagepartshandler();
}

damagepartshandlerpart()
{
    self endon( "terminate_ai_threads" );

    while ( isalive( self ) )
    {
        self waittill( "damage_part_died", _id_8992397197CEC28A );
        _id_2B79931B08683E0A::repeater_headshot_ammo_passive( self.damageweapon, self.lastattacker, self );

        if ( self isragdoll() )
            return;

        if ( isdefined( self.fndismembermenthandler ) )
        {
            foreach ( param in _id_8992397197CEC28A )
                self [[ self.fndismembermenthandler ]]( param );
        }
    }
}

damagepartshandlersubpart()
{
    self endon( "terminate_ai_threads" );

    while ( isalive( self ) )
    {
        self waittill( "damage_subpart_died", _id_8992397197CEC28A );

        if ( self isragdoll() )
            return;

        if ( isdefined( self.fndamagesubparthandler ) )
        {
            foreach ( param in _id_8992397197CEC28A )
                self [[ self.fndamagesubparthandler ]]( param );
        }
    }
}

damagepartshandler()
{
    self endon( "death" );
    self endon( "terminate_ai_threads" );
    thread damagepartshandlersubpart();
    thread damagepartshandlerpart();
}

isselfdestruct( _id_B8EBE3F71A08AB40 )
{
    if ( scripts\asm\asm_bb::bb_isselfdestruct() )
        return anim.success;

    return anim.failure;
}

isheadless( _id_B8EBE3F71A08AB40 )
{
    if ( scripts\asm\asm_bb::bb_isheadless() )
        return anim.success;

    return anim.failure;
}

// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init_vehicles()
{
    if ( !scripts\engine\utility::add_init_script( "vehicles_sp", ::init_vehicles ) )
        return;

    scripts\engine\utility::create_func_ref( "makefakeai", ::_meth_5D1AE6D79F225F68 );
    scripts\engine\utility::create_func_ref( "setturretignoregoals", ::_meth_A2786B1EE54F29D9 );
    scripts\engine\utility::create_func_ref( "vehicle_orientto", ::_meth_8695EE69405FBA64 );
    scripts\engine\utility::create_func_ref( "getspawnerarray", ::_func_91E8F01DD90DE05A );
    scripts\engine\utility::create_func_ref( "setAiSpread", ::_meth_A7CFA7213303D08A );
    scripts\engine\utility::create_func_ref( "forcecolor_riders", ::vehicle_script_forcecolor_riders );
    scripts\engine\utility::create_func_ref( "vehicle_treads", scripts\sp\vehicle_treads::vehicle_treads );
    scripts\engine\utility::create_func_ref( "drone_give_soul", scripts\sp\drone_base::drone_give_soul );
    scripts\engine\utility::create_func_ref( "fakeactor_give_soul", scripts\sp\fakeactor::fakeactor_give_soul );
    scripts\engine\utility::create_func_ref( "anim_placeweaponon", _id_3433EE6B63C7E243::placeweaponon );
    scripts\engine\utility::create_func_ref( "vehicle_deathflag", scripts\sp\spawner::vehicle_deathflag );
    scripts\engine\utility::create_func_ref( "vehicle_spawner_deathflag", scripts\sp\spawner::vehicle_spawner_deathflag );
    scripts\engine\utility::create_func_ref( "run_spawn_functions", scripts\sp\spawner::run_spawn_functions );
    scripts\engine\utility::create_func_ref( "anim_updateanimpose", _id_7E4D332E911E1B90::updateanimpose );
    scripts\engine\utility::create_func_ref( "anim_donotetracks", _id_357B9A54DFEDBD4A::donotetracks );
    scripts\engine\utility::create_func_ref( "anim_dropallaiweapons", _id_3433EE6B63C7E243::dropallaiweapons );
    scripts\engine\utility::create_func_ref( "register_kill", scripts\sp\player_stats::register_kill );
    scripts\engine\utility::create_func_ref( "register_shot_hit", scripts\sp\player_stats::register_shot_hit );
    scripts\engine\utility::create_func_ref( "register_shot_hit", scripts\sp\player_stats::register_shot_hit );
    scripts\engine\utility::create_func_ref( "burst_fire_unmanned", scripts\sp\mgturret::burst_fire_unmanned );
    scripts\engine\utility::create_func_ref( "turret_watchPlayerUse", scripts\sp\mgturret::turret_watchplayeruse );
    scripts\engine\utility::create_func_ref( "use_turret", scripts\sp\utility::use_turret );
    scripts\engine\utility::create_func_ref( "asm_animcustom", scripts\asm\asm_sp::asm_animcustom );
    scripts\engine\utility::create_func_ref( "spawner_makerealai", scripts\sp\spawner::spawner_makerealai );
    scripts\engine\utility::create_func_ref( "use_a_turret", scripts\sp\spawner::use_a_turret );
    scripts\engine\utility::create_func_ref( "go_to_node", scripts\sp\spawner::go_to_node );
    scripts\engine\utility::create_func_ref( "fastrope_anim", ::fastrope_anim );
    scripts\engine\utility::create_func_ref( "vehicle_door_anim", ::door_anim );
    scripts\engine\utility::create_func_ref( "vehicle_usable", ::_id_7D87DD9EB57867A1 );
    scripts\common\vehicle::init_vehicles();
}

vehicle_script_forcecolor_riders( script_forcecolor )
{
    foreach ( rider in self.riders )
    {
        if ( isai( rider ) )
        {
            rider scripts\engine\sp\utility::set_force_color( script_forcecolor );
            continue;
        }

        if ( isdefined( rider.spawner ) )
        {
            rider.spawner.script_forcecolor = script_forcecolor;
            continue;
        }
    }
}

fastrope_anim( model, animation, flag )
{
    model animscripted( flag, model.origin, model.angles, animation, undefined, undefined, 0 );
}

door_anim( vehicle, animation )
{
    vehicle setflaggedanimrestart( "vehicle_anim_flag", animation );
}

_id_7D87DD9EB57867A1( distance, _id_F8B95B4543C2C1D1 )
{
    if ( !self vehicle_isphysveh() )
        return;

    if ( !isdefined( distance ) )
        distance = 150;

    if ( !isdefined( self._id_D60CC6DA4FB4A98C ) )
        _id_036DBB623C325C79( 1 );

    thread scripts\common\vehicle::_id_4F182AD6B6D594DB( distance, ::_id_FBEF61D68F733524, ::_id_E5F869D16EB9ABEA );

    if ( istrue( _id_F8B95B4543C2C1D1 ) )
    {
        level.player.veh = self;
        level.player _id_FBEF61D68F733524( self );
    }
}

_id_ABF25557F46191C5()
{
    self notify( "stop_driveable" );
    self._id_98AB42B91397D294 = undefined;
}

_id_FBEF61D68F733524( veh )
{
    if ( isdefined( veh.driver ) )
        return;

    animtag = "tag_seat_0";
    veh _id_F3AE3EA0ABCA3CFB( animtag );
    veh.ownerid = self getentitynumber();
    veh.originalowner = self;
    veh._id_49D83F0C42962D83 = veh.team;
    veh.driver = level.player;

    if ( isdefined( self.team ) )
        veh.team = self.team;

    self setplayerangles( veh.angles );
    veh setotherent( self );
    self _meth_C35AD47019D67311();
    veh vehicle_turnengineon();
    self usevehicle( veh, 0, 1 );
    self _meth_ F61FB1CE72ED501();
    self _meth_D7D5EF1BA6D19E25();

    if ( veh _meth_01E8542A707A8002( "p2p" ) )
        veh _meth_77320E794D35465A( "p2p", "pause", 1 );

    if ( veh _meth_01E8542A707A8002( "path" ) )
        veh _meth_77320E794D35465A( "path", "pause", 1 );

    if ( isdefined( veh.turret ) )
    {
        veh.turret setotherent( self );
        self remotecontrolturret( veh.turret );
    }

    veh _meth_65AA053C077C003A( 0 );

    if ( isdefined( veh.classname_mp ) )
    {
        veh scripts\common\vehicle::_id_65976A53A9CBD110();
        veh scripts\common\vehicle::_id_89CEC1224AE724D5();
        veh scripts\common\vehicle::_id_7B7412DDBEED1F41( 0 );
    }

    self notify( "entered_driving_vehicle", veh );
}

_id_036DBB623C325C79( _id_E3108E412AFB3811 )
{
    if ( _id_E3108E412AFB3811 )
    {
        self._id_D60CC6DA4FB4A98C = 1;
        self setcandamage( 1 );
    }
    else
    {
        self._id_D60CC6DA4FB4A98C = 0;
        self setcandamage( 0 );
    }
}

_id_E5F869D16EB9ABEA( veh )
{
    if ( !isdefined( veh.driver ) )
        return;

    veh.ownerid = 0;
    veh.originalowner = undefined;
    veh.driver = undefined;

    if ( isdefined( veh._id_49D83F0C42962D83 ) )
        veh.team = veh._id_49D83F0C42962D83;

    if ( isdefined( veh._id_BE3314F77FEF5D6B ) )
        _id_7E6EA515CDBB4A45 = [[ veh._id_BE3314F77FEF5D6B ]]();
    else
        _id_7E6EA515CDBB4A45 = self.origin + anglestoright( self.angles ) * -100 + anglestoforward( self.angles ) * -80;

    self _meth_C0505F05660D120C( 0, 1 );
    self setorigin( scripts\engine\utility::drop_to_ground( _id_7E6EA515CDBB4A45, 0, 0 ) );
    self _meth_AC666D5E6F814C5D();
    veh setotherent( undefined );
    veh setentityowner( undefined );
    self _meth_5773CD2DCAA3AEEE();
    self _meth_E4BEF14B0E71E526();

    if ( isdefined( veh.turret ) )
    {
        self remotecontrolturretoff( veh.turret );
        veh.turret setmode( "sentry_offline" );
    }

    if ( isdefined( veh.classname_mp ) )
    {
        veh scripts\common\vehicle::_id_37F33BFE6B63CB0A();
        veh scripts\common\vehicle::_id_7B7412DDBEED1F41( 1 );
    }

    self notify( "exited_driving_vehicle", veh );
}

_id_F3AE3EA0ABCA3CFB( bone )
{
    parts = getnumparts( self.model );

    if ( parts > 0 )
    {
        for ( _id_AC0E594AC96AA3A8 = 0; _id_AC0E594AC96AA3A8 < parts; _id_AC0E594AC96AA3A8++ )
        {
            if ( getpartname( self.model, _id_AC0E594AC96AA3A8 ) == bone )
                return 1;
        }
    }

    iprintln( "WARNING! " + self.model + " does not have bone, " + bone );
    return 0;
}

_id_6355C25E9ECABE14( weaponname )
{
    if ( !isdefined( self._id_11BD2D454480B300 ) )
        self._id_11BD2D454480B300 = [];

    if ( !isarray( weaponname ) )
        weaponname = [ weaponname ];

    self._id_11BD2D454480B300 = scripts\engine\utility::array_combine( self._id_11BD2D454480B300, weaponname );
    self._id_11BD2D454480B300 = scripts\engine\utility::array_remove_duplicates( self._id_11BD2D454480B300 );
}

_id_1FCABF2CB45D2C22( weaponname, scale )
{
    if ( !isdefined( self._id_B8E957F2BF26C5E5 ) )
        self._id_B8E957F2BF26C5E5 = [];

    if ( isarray( weaponname ) )
    {
        foreach ( name in weaponname )
            self._id_B8E957F2BF26C5E5 = scripts\engine\utility::array_add( self._id_B8E957F2BF26C5E5, [ name, scale ] );
    }
    else
        self._id_B8E957F2BF26C5E5 = scripts\engine\utility::array_add( self._id_B8E957F2BF26C5E5, [ weaponname, scale ] );
}

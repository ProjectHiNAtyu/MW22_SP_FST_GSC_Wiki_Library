// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

entity_handle_notetrack( guy, notetrack )
{
    if ( isdefined( level.customnotetrackhandler ) )
        guy [[ level.customnotetrackhandler ]]( notetrack );

    if ( guy _id_357B9A54DFEDBD4A::notetrack_prefix_handler( notetrack ) )
        return;

    general_notetrack_handler( guy, notetrack );
}

general_notetrack_handler( guy, notetrack )
{
    switch ( notetrack )
    {
        case "ignoreall true":
            guy.ignoreall = 1;
            break;
        case "ignoreall false":
            guy.ignoreall = 0;
            break;
        case "ignoreme true":
            guy.ignoreme = 1;
            break;
        case "ignoreme false":
            guy.ignoreme = 0;
            break;
        case "allowdeath true":
            guy.allowdeath = 1;
            break;
        case "allowdeath false":
            guy.allowdeath = 0;
            break;
        case "follow off":
            guy.followoff = 1;
            break;
        case "follow on":
            guy.followoff = 0;
            break;
        case "lookat_plr_head_on":
            break;
        case "lookat_plr_eyes_on":
            guy thread scripts\engine\sp\utility::gesture_follow_eyes( level.player, 4.0, 0.1 );
            break;
        case "lookat_plr_off":
            guy thread scripts\engine\sp\utility::gesture_stop( 0.7 );
            break;
        case "lookat_plr_eyes_off":
            guy thread scripts\engine\sp\utility::gesture_eyes_stop( 0.1 );
            break;
        case "lookat_plr_head_off":
            break;
        case "bc_vo_start":
            guy notify( "bc_vochat_start" );
            break;
        case "blind_on":
            guy scripts\stealth\callbacks::stealth_call( "set_blind", 1 );
            break;
        case "blind_off":
            guy scripts\stealth\callbacks::stealth_call( "set_blind", 0 );
            break;
        case "start_aim":
            self.gunposeoverride_internal = undefined;
            break;
        case "mayhem_start":
            break;
        case "mayhem_end":
            break;
    }
}

sp_anim_handle_notetrack( scr_notetrack, guy, _id_966821FC90C3CA9D, _id_F20E2B3859E05E9F )
{
    scripts\common\notetrack::anim_handle_notetrack( scr_notetrack, guy, _id_966821FC90C3CA9D, _id_F20E2B3859E05E9F );

    if ( isdefined( scr_notetrack["flag"] ) )
        scripts\engine\utility::flag_set( scr_notetrack["flag"] );

    if ( isdefined( scr_notetrack["flag_clear"] ) )
        scripts\engine\utility::flag_clear( scr_notetrack["flag_clear"] );

    if ( isdefined( scr_notetrack["attach gun left"] ) )
    {
        guy gun_pickup_left();
        return;
    }

    if ( isdefined( scr_notetrack["attach gun right"] ) )
    {
        guy gun_pickup_right();
        return;
    }

    if ( isdefined( scr_notetrack["detach gun"] ) )
    {
        guy gun_leave_behind( scr_notetrack );
        return;
    }

    if ( isdefined( scr_notetrack["mayhem_start"] ) )
        mayhem_start( scr_notetrack["mayhem_start"], scr_notetrack["use_hat_model"] );

    if ( isdefined( scr_notetrack["mayhem_end"] ) )
        mayhem_end( scr_notetrack["mayhem_end"], scr_notetrack["use_hat_model"] );

    if ( isdefined( scr_notetrack["sound"] ) )
    {
        _id_A38DC1947E93B08D = undefined;

        if ( !isdefined( scr_notetrack["sound_stays_death"] ) )
            _id_A38DC1947E93B08D = 1;

        tag = undefined;

        if ( isdefined( scr_notetrack["sound_on_tag"] ) )
            tag = scr_notetrack["sound_on_tag"];

        guy thread scripts\engine\sp\utility::play_sound_on_tag( scr_notetrack["sound"], tag, _id_A38DC1947E93B08D );
    }

    if ( isdefined( scr_notetrack["playersound"] ) )
        level.player playsound( scr_notetrack["playersound"] );

    if ( isdefined( scr_notetrack["playerdialogue"] ) )
        level.player thread scripts\engine\sp\utility::smart_player_dialogue( scr_notetrack["playerdialogue"] );
}

gun_pickup_left()
{
    if ( !isdefined( self.gun_on_ground ) )
        return;

    self.gun_on_ground delete();
    self.dropweapon = 1;
    _id_3433EE6B63C7E243::placeweaponon( self.weapon, "left" );
}

gun_pickup_right()
{
    if ( !isdefined( self.gun_on_ground ) )
        return;

    self.gun_on_ground delete();
    self.dropweapon = 1;
    _id_3433EE6B63C7E243::placeweaponon( self.weapon, "right" );
}

gun_leave_behind( scr_notetrack )
{
    if ( isdefined( self.gun_on_ground ) )
        return;

    _id_EA111DE8E9327C27 = undefined;

    if ( isdefined( scr_notetrack["suspend"] ) )
        _id_EA111DE8E9327C27 = scr_notetrack["suspend"];

    scripts\sp\anim::primaryweapon_leave_behind( scr_notetrack["tag"], _id_EA111DE8E9327C27 );
}

mayhem_start( animation, _id_5A75409EF0C9A36A )
{
    self.notetrackmayhemstarted = 1;
    self detach( self.headmodel );

    if ( !istrue( _id_5A75409EF0C9A36A ) && isdefined( self.hatmodel ) )
        self detach( self.hatmodel );

    self setanim( animation, 1.0, 0.0, 1.0 );
}

mayhem_end( animation, _id_5A75409EF0C9A36A )
{
    if ( !istrue( self.notetrackmayhemstarted ) )
        return;

    self.notetrackmayhemstarted = undefined;
    self setanim( animation, 0.0, 0.0, 1.0 );
    self attach( self.headmodel );

    if ( !istrue( _id_5A75409EF0C9A36A ) && isdefined( self.hatmodel ) )
        self attach( self.hatmodel );
}

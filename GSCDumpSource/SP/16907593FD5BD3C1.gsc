// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    precachestring( &"TAKEDOWN/TAKEDOWN_BUTTON" );
    scripts\engine\sp\utility::add_global_spawn_function( "axis", ::_id_90E6D70E6221F373 );
    _id_7FD42EF628CE886E = getaiarray( "axis" );

    foreach ( guy in _id_7FD42EF628CE886E )
        guy thread _id_90E6D70E6221F373();
}

_id_90E6D70E6221F373()
{
    if ( !isai( self ) || !isdefined( self._id_24022EB3BB98E172 ) )
        return;

    if ( scripts\engine\utility::_id_53C4C53197386572( self._id_24022EB3BB98E172._id_1EC2E43BEE2759F3, 0 ) > 0 )
    {
        self._id_24022EB3BB98E172._id_434F6D69945B8FB1 = 0;

        if ( !isdefined( self._id_4A4697AA1329CBA5 ) )
            self._id_4A4697AA1329CBA5 = [];

        self._id_4A4697AA1329CBA5[self._id_4A4697AA1329CBA5.size] = ::_id_BAC073F21FE7421B;
        _id_3B64EB40368C1450::set( "ai_stagger", "pain", 0 );
    }

    if ( istrue( self._id_24022EB3BB98E172._id_D03EEBB9644D184E ) )
        self.damage_functions[self.damage_functions.size] = ::_id_4E653EEC5E1A4EC5;
    else
        self.damage_functions[self.damage_functions.size] = ::_id_15E28BFFADE538D2;
}

_id_4E653EEC5E1A4EC5( damage, attacker, direction_vec, point, meansofdeath, modelname, tagname, partname, idflags, objweapon )
{
    if ( !isalive( self ) )
        return;

    _id_B8A9CADB802F77EF = damage;
    isexplosivedamage = isdefined( meansofdeath ) && isexplosivedamagemod( meansofdeath );
    _id_35722C9340D87E9F = isdefined( objweapon ) && isdefined( objweapon.classname ) && objweapon.classname == "sniper";

    if ( !( _id_35722C9340D87E9F || isexplosivedamage ) )
    {
        if ( isplayer( attacker ) )
            _id_B8A9CADB802F77EF = int( min( damage * 1.0, 150 ) );
        else
            _id_B8A9CADB802F77EF = int( min( damage * 0.33, 60 ) );
    }

    _id_30FE6D77D4D2C394 = self.maxhealth;
    self.health = self.health + int( damage - _id_B8A9CADB802F77EF );
    self.maxhealth = _id_30FE6D77D4D2C394;

    if ( scripts\engine\utility::_id_53C4C53197386572( self._id_24022EB3BB98E172._id_1EC2E43BEE2759F3, 0 ) > 0 )
        _id_15E28BFFADE538D2( _id_B8A9CADB802F77EF, attacker, direction_vec, point, meansofdeath, modelname, tagname, partname, idflags, objweapon );
}

_id_15E28BFFADE538D2( damage, attacker, direction_vec, point, meansofdeath, modelname, tagname, partname, idflags, objweapon )
{
    if ( !isalive( self ) )
        return;

    self._id_24022EB3BB98E172._id_434F6D69945B8FB1 = self._id_24022EB3BB98E172._id_434F6D69945B8FB1 + damage;

    if ( self._id_24022EB3BB98E172._id_434F6D69945B8FB1 >= self._id_24022EB3BB98E172._id_1EC2E43BEE2759F3 )
    {
        self._id_24022EB3BB98E172._id_434F6D69945B8FB1 = 0;
        _id_559A0810819CF4F0 = float( self.health ) / float( self.maxhealth );

        if ( _id_559A0810819CF4F0 < 0.33 )
            thread _id_952149C3CD4A4205( "large" );
        else
            thread _id_952149C3CD4A4205( "small" );
    }

    thread _id_2BED4DD4D61236D1();
}

_id_2BED4DD4D61236D1()
{
    self endon( "death" );
    self notify( "staggerMeterDecay" );
    self endon( "staggerMeterDecay" );

    if ( self._id_24022EB3BB98E172._id_434F6D69945B8FB1 == 0 )
        return;

    _id_5B280284013FDE97 = 0.5;
    wait( _id_5B280284013FDE97 );
    _id_C5452D63F815C7E9 = 0.1;

    for (;;)
    {
        self._id_24022EB3BB98E172._id_434F6D69945B8FB1 = self._id_24022EB3BB98E172._id_434F6D69945B8FB1 - self._id_24022EB3BB98E172._id_8EB7A5E5D87EE566 * _id_C5452D63F815C7E9;

        if ( self._id_24022EB3BB98E172._id_434F6D69945B8FB1 <= 0 )
        {
            self._id_24022EB3BB98E172._id_434F6D69945B8FB1 = 0;
            break;
        }

        wait( _id_C5452D63F815C7E9 );
    }
}

_id_952149C3CD4A4205( type )
{
    self endon( "death" );
    self notify( "staggerAnim" );
    self endon( "staggerAnim" );
    type = scripts\engine\utility::_id_53C4C53197386572( type, "small" );

    switch ( type )
    {
        case "small":
            self asmevalpaintransition( self.asmname );
            break;
        case "large":
            _id_8021F30E67641445( 1 );
            self._id_24022EB3BB98E172._id_90225BE40021C561 = gettime() + 4000.0;
            self asmevalpaintransition( self.asmname );
            waitframe();
            _id_2D569605A89D7281 = self asmgetcurrentstate( self.asmname );
            _id_82F8ECC0D4960731 = self asmgetanim( self.asmname, _id_2D569605A89D7281 );
            _id_FEBF77E2B0DD0241 = scripts\asm\asm::asm_getxanim( _id_2D569605A89D7281, _id_82F8ECC0D4960731 );
            animlength = getanimlength( _id_FEBF77E2B0DD0241 );
            self setanimrate( _id_FEBF77E2B0DD0241, animlength / 4.0 );
            wait 4.0;
            _id_8021F30E67641445( 0 );
            break;
    }
}

_id_8021F30E67641445( enabled )
{
    refname = "stagger_takedown";
    isactive = level.player _id_72EF6B9F0CF1F55A::_id_B76083C9909E209A( self, refname );

    if ( istrue( enabled ) )
    {
        if ( !isactive )
        {
            level.player _id_72EF6B9F0CF1F55A::_id_2ACD5041C3F3305E( self, refname, "scripted_widget_generic_text", "scripted_widget_anchor_overhead_prompt" );
            level.player _id_72EF6B9F0CF1F55A::_id_1D125BD1128E9582( self, refname, _func_8C14A8A658013E4E( &"TAKEDOWN/TAKEDOWN_BUTTON" ) );
            level.player _id_72EF6B9F0CF1F55A::_id_AD5527FEAEFFA977( self, refname, "BottomCenter" );
        }
    }
    else if ( isactive )
        level.player _id_72EF6B9F0CF1F55A::_id_AAE81EA024D45E77( self, refname );
}

_id_BAC073F21FE7421B( attacker )
{
    if ( !isdefined( self._id_24022EB3BB98E172._id_90225BE40021C561 ) )
        return 0;

    return gettime() < self._id_24022EB3BB98E172._id_90225BE40021C561;
}

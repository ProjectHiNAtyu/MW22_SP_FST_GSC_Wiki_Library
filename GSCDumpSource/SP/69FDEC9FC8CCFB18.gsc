// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

c12_setscriptedtargets( slot, targets, _id_86BF6C4845753544, _id_69A75B9115B8EEA7 )
{
    if ( isarray( targets ) )
        self.scripted_targets[slot] = targets;
    else
        self.scripted_targets[slot] = [ targets ];

    self.scripted_targets_notify[slot] = _id_86BF6C4845753544;

    if ( !isdefined( _id_69A75B9115B8EEA7 ) )
        _id_69A75B9115B8EEA7 = 1;

    self.scripted_targets_check_los[slot] = _id_69A75B9115B8EEA7;
}

c12_setrocketarc( _id_3B9335C25E03C776 )
{
    self.rocket_arc = _id_3B9335C25E03C776;
}

c12_clearscriptedtargets( slot )
{
    if ( !isdefined( self.scripted_targets ) )
        return;

    self.scripted_targets[slot] = undefined;
    self.scripted_targets_notify[slot] = undefined;
    self.scripted_targets_check_los[slot] = undefined;

    if ( self.scripted_targets.size == 0 )
    {
        self.scripted_targets = undefined;
        self.scripted_targets_notify = undefined;
        self.scripted_targets_check_los = undefined;
    }
}

c12_enablesecondarytargeting( _id_24AB7B7FE5473A32 )
{
    if ( !isdefined( _id_24AB7B7FE5473A32 ) )
        _id_24AB7B7FE5473A32 = 1;

    self.ballowsecondaries = _id_24AB7B7FE5473A32;
}

c12_enableweaponslot( slot, _id_24AB7B7FE5473A32 )
{
    if ( !isdefined( _id_24AB7B7FE5473A32 ) )
        _id_24AB7B7FE5473A32 = 1;

    self.weaponenabled[slot] = _id_24AB7B7FE5473A32;
}

c12_enableautonomouscombat( _id_24AB7B7FE5473A32 )
{
    if ( !isdefined( _id_24AB7B7FE5473A32 ) )
        _id_24AB7B7FE5473A32 = 1;

    self.bautonomouscombat = _id_24AB7B7FE5473A32;

    if ( !_id_24AB7B7FE5473A32 )
        self clearbtgoal( 2 );
}

c12_disablerodeohint( _id_49F31E97FE6A3857 )
{
    if ( !isdefined( _id_49F31E97FE6A3857 ) )
        _id_49F31E97FE6A3857 = 1;

    self.brodeohintdisabled = _id_49F31E97FE6A3857;
}

c12_disablerodeo( _id_49F31E97FE6A3857 )
{
    if ( !isdefined( _id_49F31E97FE6A3857 ) )
        _id_49F31E97FE6A3857 = 1;

    self.brodeodisabled = _id_49F31E97FE6A3857;

    if ( _id_49F31E97FE6A3857 )
        self notify( "rodeo_disabled" );
    else
        self notify( "rodeo_enabled" );
}

c12_enablestrafe( _id_24AB7B7FE5473A32 )
{
    if ( !isdefined( _id_24AB7B7FE5473A32 ) )
        _id_24AB7B7FE5473A32 = 1;

    if ( _id_24AB7B7FE5473A32 )
        self.bstrafeenabled = 1;
    else
        self.bstrafeenabled = undefined;
}

c12_setaimspeedmultiplier( _id_98EA5AFB293A76A2 )
{
    self.aimspeedmultiplier = _id_98EA5AFB293A76A2;
}

c12_islegdismembered()
{
    return scripts\asm\asm_bb::ispartdismembered( "right_leg" ) || scripts\asm\asm_bb::ispartdismembered( "left_leg" );
}

c12_enableweakrockets( _id_24AB7B7FE5473A32 )
{
    if ( !isdefined( _id_24AB7B7FE5473A32 ) )
        _id_24AB7B7FE5473A32 = 1;

    self.buseweakrockets = _id_24AB7B7FE5473A32;
}

c12_updateachievement( param )
{
    thread waittill_death_for_achievement( param );
}

waittill_death_for_achievement( param )
{
    level.player endon( "death" );
    self waittill( "death" );
    wait 0.1;
    level.player _meth_8E232755197D2A79( param, 1 );

    if ( level.player _meth_2583E4BC5ABCA7B5( "c12AchievementRodeoLeft" ) && level.player _meth_2583E4BC5ABCA7B5( "c12AchievementRodeoRight" ) && level.player _meth_2583E4BC5ABCA7B5( "c12AchievementSelfdestruct" ) )
        scripts\sp\utility::giveachievement_wrapper( "KILL_C12S" );
}

c12_initpickuphints( _id_1361F1A11BA15C7E, _id_EBA06C714D5977BE, icon, _id_D83815961B7097AD, _id_E2EDF25BCC047075 )
{
    if ( !isdefined( _id_E2EDF25BCC047075 ) )
        _id_E2EDF25BCC047075 = 0;

    scripts\engine\utility::array_thread( _id_1361F1A11BA15C7E, ::c12_weapon_pickup_hint_check, _id_EBA06C714D5977BE, icon, _id_D83815961B7097AD, _id_E2EDF25BCC047075 );
}

c12_weapon_pickup_hint_check( _id_EBA06C714D5977BE, icon, _id_D83815961B7097AD, _id_E2EDF25BCC047075 )
{
    level.player endon( "death" );
    _id_ED1DB1FF97C16FC3 = scripts\engine\utility::spawn_tag_origin( self.origin + ( 0, 0, 25 ) );
    _id_ED1DB1FF97C16FC3.respawning = 0;
    _id_ED1DB1FF97C16FC3 endon( "death" );
    _id_ED1DB1FF97C16FC3 thread c12_weapon_pickup_hint_delete_check( _id_EBA06C714D5977BE );
    thread c12_weapon_pickup_respawn_check( _id_ED1DB1FF97C16FC3, _id_E2EDF25BCC047075 );

    if ( isdefined( _id_D83815961B7097AD ) )
        level waittill( _id_D83815961B7097AD );

    if ( level.gameskill == 3 )
        wait 10;

    for (;;)
    {
        while ( distance2dsquared( _id_ED1DB1FF97C16FC3.origin, level.player.origin ) < squared( 128 ) )
            wait 0.05;

        if ( c12_player_out_of_heavy_ammo( _id_E2EDF25BCC047075 ) && !_id_ED1DB1FF97C16FC3.respawning )
        {
            _id_ED1DB1FF97C16FC3 scripts\sp\player\cursor_hint::create_cursor_hint( "tag_origin", undefined, undefined, undefined, 5000, 0, 1, 0, 0, icon, 0 );

            while ( distance2dsquared( _id_ED1DB1FF97C16FC3.origin, level.player.origin ) >= squared( 128 ) )
            {
                if ( c12_player_out_of_heavy_ammo( _id_E2EDF25BCC047075 ) )
                {
                    wait 0.05;
                    continue;
                }

                break;
            }

            _id_ED1DB1FF97C16FC3 scripts\sp\player\cursor_hint::remove_cursor_hint();
        }

        wait 0.05;
    }
}

c12_weapon_pickup_hint_delete_check( _id_EBA06C714D5977BE )
{
    while ( !isdefined( _id_EBA06C714D5977BE.c12 ) )
        wait 0.05;

    _id_EBA06C714D5977BE.c12 scripts\engine\utility::waittill_any_3( "death", "begin_rodeo", "self_destruct" );
    self delete();
}

c12_player_out_of_heavy_ammo( _id_E2EDF25BCC047075 )
{
    weapons = level.player getweaponslistprimaries();
    _id_AFB48E93CA66D9D0 = [];

    foreach ( weapon in weapons )
    {
        switch ( getweaponbasename( weapon ) )
        {
            case "iw7_atomizer":
                return 0;
            case "iw7_penetrationrail":
            case "iw7_lockon":
            case "iw7_chargeshot":
            case "iw7_steeldragon":
                _id_AFB48E93CA66D9D0[_id_AFB48E93CA66D9D0.size] = weapon;
                break;
        }
    }

    if ( _id_AFB48E93CA66D9D0.size == 0 )
        return 1;

    foreach ( weapon in _id_AFB48E93CA66D9D0 )
    {
        _id_8BF06E00CD89DB99 = 0;

        if ( _id_E2EDF25BCC047075 )
            _id_8BF06E00CD89DB99 = int( weaponclipsize( weapon ) / 2 );

        if ( level.player getweaponammostock( weapon ) + level.player getweaponammoclip( weapon ) > _id_8BF06E00CD89DB99 )
            return 0;
    }

    return 1;
}

c12_weapon_pickup_respawn_check( _id_ED1DB1FF97C16FC3, _id_E2EDF25BCC047075 )
{
    level.player endon( "death" );
    _id_ED1DB1FF97C16FC3 endon( "death" );
    spawn_point = scripts\engine\utility::spawn_tag_origin( self.origin, self.angles );
    gun = self;
    weaponname = getsubstr( gun.classname, 7 );

    if ( _id_E2EDF25BCC047075 )
    {
        stockammo = weaponmaxammo( weaponname );
        clipammo = 0;
    }
    else
    {
        stockammo = 1;
        clipammo = 1;
    }

    for (;;)
    {
        gun itemweaponsetammo( clipammo, stockammo );
        gun waittill( "trigger" );

        if ( isdefined( gun ) )
            gun delete();

        if ( level.player getammocount( weaponname ) == clipammo + stockammo )
        {
            level.player switchtoweapon( weaponname );

            if ( _id_E2EDF25BCC047075 )
            {
                level.player setweaponammoclip( weaponname, weaponclipsize( weaponname ) );
                level.player setweaponammostock( weaponname, stockammo );
            }
        }

        _id_ED1DB1FF97C16FC3.respawning = 1;

        while ( distance2dsquared( spawn_point.origin, level.player.origin ) < squared( 512 ) )
            wait 1;

        wait 10;

        if ( level.gameskill == 3 )
            wait 10;

        _id_ED1DB1FF97C16FC3.respawning = 0;
        gun = spawn( "weapon_" + weaponname, spawn_point.origin, 1 );
        gun.angles = spawn_point.angles;
    }
}

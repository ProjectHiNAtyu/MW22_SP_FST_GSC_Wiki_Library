// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

vehicle_occupancy_getleveldataforvehicle( vehiclename, create )
{
    if ( istrue( create ) && ( !scripts\cp_mp\vehicles\vehicle::_id_89DC39DC11F3988C( vehiclename ) || !isdefined( scripts\cp_mp\vehicles\vehicle::_id_29B4292C92443328( vehiclename ).occupancy ) ) )
    {
        data = undefined;

        if ( !scripts\cp_mp\vehicles\vehicle::_id_89DC39DC11F3988C( vehiclename ) )
            data = spawnstruct();
        else
            data = scripts\cp_mp\vehicles\vehicle::_id_29B4292C92443328( vehiclename );

        data.occupancy = spawnstruct();
        data.occupancy.seatdata = [];
        data.occupancy.restrictions = [];
        data.occupancy.damagemodifier = -1;
        data.occupancy.camera = "none";
        data.occupancy.threatbiasgroup = "Level_Vehicle";
        data.occupancy.exitextents = [];
        data.occupancy.exitoffsets = [];
        data.occupancy.exitdirections = [];
        data.occupancy.damagefeedbackgrouplight = "driver";
        data.occupancy.damagefeedbackgroupheavy = "all";
        level._id_A0B2C978CA57FFC5[vehiclename] = data;
    }

    if ( scripts\cp_mp\vehicles\vehicle::_id_89DC39DC11F3988C( vehiclename ) )
        return scripts\cp_mp\vehicles\vehicle::_id_29B4292C92443328( vehiclename ).occupancy;
}

_id_C9B87BEB89EC12E2( player, vehicle, exitvehicle )
{
    if ( isdefined( player ) )
    {
        if ( player _meth_793F941D7DFF15ED() )
            player _meth_C0505F05660D120C( 0, exitvehicle );
    }
}

vehicle_occupancy_getleveldataforseat( vehiclename, seatid, create )
{
    return vehicle_occupancy_getleveldataforvehicle( vehiclename ).seatdata[seatid];
}

vehicle_occupancy_registerinstance( vehicle )
{
    vehicle.occupants = [];
    vehicle.occupantsreserving = [];
    vehicle.isempty = 1;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "registerInstance" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "registerInstance" ) ]]( vehicle );
}

vehicle_occupancy_deregisterinstance( vehicle )
{
    vehicle.occupants = undefined;
    vehicle.occupantsreserving = undefined;
    vehicle.isempty = undefined;
    vehicle.preventspawninto = undefined;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "deregisterInstance" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "deregisterInstance" ) ]]( vehicle );
}

vehicle_occupancy_instanceisregistered( vehicle )
{
    return isdefined( vehicle.occupants );
}

vehicle_occupancy_getallvehicleseats( vehicle, _id_6BE731EC00F344CB )
{
    if ( !isdefined( _id_6BE731EC00F344CB ) )
        _id_6BE731EC00F344CB = 1;

    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );

    if ( isdefined( _id_E2818AD39A3341B4 ) )
        return getarraykeys( _id_E2818AD39A3341B4.seatdata );
    else
        return undefined;
}

vehicle_occupancy_getavailablevehicleseats( vehicle )
{
    _id_109A35EF4925C2B1 = [];
    seatids = vehicle_occupancy_getallvehicleseats( vehicle );

    foreach ( seatid in seatids )
    {
        if ( !vehicle_occupancy_seatisavailable( vehicle, seatid ) )
            continue;

        _id_109A35EF4925C2B1[_id_109A35EF4925C2B1.size] = seatid;
    }

    return _id_109A35EF4925C2B1;
}

_id_D3D95972F58AD2BC( vehicle )
{
    _id_109A35EF4925C2B1 = vehicle_occupancy_getavailablevehicleseats( vehicle );

    if ( !isdefined( _id_109A35EF4925C2B1 ) || _id_109A35EF4925C2B1.size <= 0 )
        return undefined;
    else if ( _id_109A35EF4925C2B1.size == 1 )
        return _id_109A35EF4925C2B1[0];

    _id_585F102C0882558A = _id_109A35EF4925C2B1[0];
    _id_5C49327452EF41BB = -1;
    _id_E1A1A4F1CE293589 = scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_getleveldataforvehicle( vehicle.vehiclename )._id_9D0537BE150542B3;

    foreach ( seatid in _id_109A35EF4925C2B1 )
    {
        _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, seatid );
        spawnpriority = _id_0C50B485A43752FD.spawnpriority;
        _id_76BB3B42BFEBB3EC = scripts\engine\utility::array_find( _id_E1A1A4F1CE293589, seatid );

        if ( !isdefined( spawnpriority ) && isdefined( _id_76BB3B42BFEBB3EC ) )
            spawnpriority = _id_E1A1A4F1CE293589.size - _id_76BB3B42BFEBB3EC;
        else if ( !isdefined( spawnpriority ) )
            spawnpriority = 0;
        else
            spawnpriority = int( max( 0, spawnpriority ) );

        if ( spawnpriority > _id_5C49327452EF41BB )
        {
            _id_585F102C0882558A = seatid;
            _id_5C49327452EF41BB = spawnpriority;
        }
    }

    return _id_585F102C0882558A;
}

vehicle_occupancy_seatisavailable( vehicle, seatid, player )
{
    _id_F85572CD5F6117C6 = vehicle.occupants[seatid];
    _id_5DC30F34F408331D = vehicle.occupantsreserving[seatid];

    if ( !isdefined( _id_F85572CD5F6117C6 ) && !isdefined( _id_5DC30F34F408331D ) )
        return 1;

    if ( isdefined( player ) )
    {
        if ( isdefined( _id_F85572CD5F6117C6 ) && _id_F85572CD5F6117C6 == player )
            return 1;

        if ( isdefined( _id_5DC30F34F408331D ) && _id_5DC30F34F408331D == player )
            return 1;
    }

    return 0;
}

vehicle_occupancy_getseatoccupant( vehicle, seatid, _id_6BE731EC00F344CB )
{
    if ( !isdefined( _id_6BE731EC00F344CB ) )
        _id_6BE731EC00F344CB = 1;

    if ( isdefined( vehicle.occupants ) )
        return vehicle.occupants[seatid];
    else
        return undefined;
}

vehicle_occupancy_getalloccupants( vehicle, _id_6BE731EC00F344CB )
{
    if ( !isdefined( _id_6BE731EC00F344CB ) )
        _id_6BE731EC00F344CB = 1;

    return vehicle.occupants;
}

_id_0EFA75AA7F0A1289( vehicle, _id_6BE731EC00F344CB )
{
    if ( !isdefined( _id_6BE731EC00F344CB ) )
        _id_6BE731EC00F344CB = 1;

    occupants = vehicle.occupants;

    if ( isdefined( self._id_8784C427B1AF24A6 ) )
        occupants = scripts\engine\utility::array_combine_unique( occupants, vehicle._id_8784C427B1AF24A6 );

    return occupants;
}

vehicle_occupancy_getalloccupantsandreserving( vehicle, _id_6BE731EC00F344CB )
{
    if ( !isdefined( _id_6BE731EC00F344CB ) )
        _id_6BE731EC00F344CB = 1;

    if ( !isdefined( vehicle.occupants ) )
        return undefined;

    return scripts\engine\utility::array_combine_unique( vehicle.occupants, vehicle.occupantsreserving );
}

vehicle_occupancy_getreserving( vehicle, _id_6BE731EC00F344CB )
{
    if ( !isdefined( _id_6BE731EC00F344CB ) )
        _id_6BE731EC00F344CB = 1;

    if ( !isdefined( vehicle.occupants ) )
        return undefined;

    return vehicle.occupantsreserving;
}

vehicle_occupancy_getoccupantseat( vehicle, player )
{
    foreach ( seatid, _id_F85572CD5F6117C6 in vehicle.occupants )
    {
        if ( _id_F85572CD5F6117C6 == player )
            return seatid;
    }

    return undefined;
}

vehicle_occupancy_occupantisvehicledriver( player )
{
    if ( isdefined( player.vehicle ) )
    {
        seatid = vehicle_occupancy_getoccupantseat( player.vehicle, player );
        _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( player.vehicle.vehiclename, seatid );

        if ( isdefined( _id_0C50B485A43752FD.animtag ) )
        {
            _id_C39487B3181A24DC = tolower( _id_0C50B485A43752FD.animtag );

            if ( _id_C39487B3181A24DC == "tag_seat_0" )
                return 1;
        }
    }

    return 0;
}

vehicle_occupancy_getdriver( vehicle, _id_6ECB77FD1F27C667 )
{
    driverseatid = vehicle_occupancy_getdriverseat( vehicle, _id_6ECB77FD1F27C667 );

    if ( isdefined( driverseatid ) )
        return vehicle_occupancy_getseatoccupant( vehicle, driverseatid, !istrue( _id_6ECB77FD1F27C667 ) );

    return undefined;
}

vehicle_occupancy_getdriverseat( vehicle, _id_6ECB77FD1F27C667 )
{
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename, !istrue( _id_6ECB77FD1F27C667 ) );

    if ( !isdefined( _id_E2818AD39A3341B4 ) )
        return undefined;

    driverseatid = _id_E2818AD39A3341B4.driverseatid;

    if ( !isdefined( driverseatid ) )
    {
        foreach ( seatid, seatdata in _id_E2818AD39A3341B4.seatdata )
        {
            if ( isdefined( seatdata.animtag ) && tolower( seatdata.animtag ) == "tag_seat_0" )
            {
                driverseatid = seatid;
                break;
            }
        }

        _id_E2818AD39A3341B4.driverseatid = driverseatid;
    }

    return driverseatid;
}

vehicle_occupancy_isdriverseat( vehicle, seatid )
{
    _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, seatid );

    if ( !isdefined( _id_0C50B485A43752FD.animtag ) )
        return 0;

    if ( tolower( _id_0C50B485A43752FD.animtag ) != "tag_seat_0" )
        return 0;

    return 1;
}

vehicle_occupancy_enter( vehicle, seatid, player, data, immediate )
{
    _id_7C80EF8134378DEA = 0;

    if ( isdefined( data ) && isdefined( data.useonspawn ) )
        _id_7C80EF8134378DEA = 1;

    if ( !_id_7C80EF8134378DEA && !player scripts\cp_mp\utility\player_utility::_isalive() )
        return;

    if ( istrue( player.inlaststand ) )
        return;

    if ( istrue( vehicle.isdestroyed ) )
        return;

    foreach ( _id_5DC30F34F408331D in vehicle.occupantsreserving )
    {
        if ( isdefined( _id_5DC30F34F408331D ) && _id_5DC30F34F408331D == player )
            return;
    }

    _id_FC7C7A874B43A31A = vehicle_occupancy_getoccupantseat( vehicle, player );

    if ( istrue( vehicle_occupancy_seatisavailable( vehicle, seatid, player ) ) )
    {
        vehicle_occupancy_stopmonitoringoccupant( player );

        if ( !isdefined( data ) )
            data = spawnstruct();

        data.immediate = istrue( immediate );
        data.raceendnotify = "vehicle_race_last_call";
        data.raceendon = "vehicle_race_finished";

        if ( !data.immediate )
        {
            thread vehicle_occupancy_raceplayerdeathdisconnect( player, data );
            thread vehicle_occupancy_racevehicledeath( vehicle, data );
            thread vehicle_occupancy_raceseatunavailable( vehicle, player, seatid, _id_FC7C7A874B43A31A, data );
            thread vehicle_occupancy_racecomplete( _id_FC7C7A874B43A31A, seatid, data );
        }

        if ( isdefined( _id_FC7C7A874B43A31A ) )
            thread vehicle_occupancy_exitstart( vehicle, _id_FC7C7A874B43A31A, seatid, player, data );

        if ( isdefined( seatid ) )
            thread vehicle_occupancy_enterstart( vehicle, seatid, _id_FC7C7A874B43A31A, player, data );

        vehicle_occupancy_updatefull( vehicle );
        vehicle_occupancy_updateempty( vehicle );

        if ( !data.immediate )
        {
            data waittill( data.raceendnotify );
            waittillframeend;
            data notify( data.raceendon );
        }

        if ( !scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_instanceisregistered( vehicle ) )
            return;

        success = vehicle_occupancy_raceresults( vehicle, player, _id_FC7C7A874B43A31A, seatid, data );

        if ( isdefined( _id_FC7C7A874B43A31A ) )
            thread vehicle_occupancy_exitend( vehicle, _id_FC7C7A874B43A31A, seatid, player, data );

        if ( isdefined( seatid ) )
            thread vehicle_occupancy_enterend( vehicle, seatid, _id_FC7C7A874B43A31A, player, data );

        vehicle_occupancy_updatefull( vehicle );
        vehicle_occupancy_updateempty( vehicle );

        if ( success )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "changedSeats" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "changedSeats" ) ]]( player, vehicle, _id_FC7C7A874B43A31A, seatid );

            thread vehicle_occupancy_monitoroccupant( vehicle, player, seatid );
            player enablereloading();

            if ( istrue( player.insertingarmorplate ) )
                player notify( "try_armor_cancel", "vehicle_enter" );

            if ( isdefined( _id_FC7C7A874B43A31A ) )
            {
                _id_DF653126C71EF4CA = vehicle_occupancy_isdriverseat( vehicle, _id_FC7C7A874B43A31A );

                if ( istrue( _id_DF653126C71EF4CA ) && scripts\cp_mp\utility\script_utility::issharedfuncdefined( "challenges", "stopChallengeTimer" ) )
                    player [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "challenges", "stopChallengeTimer" ) ]]( "driving" );
            }

            if ( isdefined( seatid ) )
            {
                _id_DF653126C71EF4CA = vehicle_occupancy_isdriverseat( vehicle, seatid );

                if ( istrue( _id_DF653126C71EF4CA ) )
                {
                    if ( !isdefined( vehicle._id_CF9BA498AF4E41E9 ) || vehicle._id_CF9BA498AF4E41E9 > 0 )
                        vehicle vehicle_turnengineon();

                    if ( isdefined( player.vehiclecustomization ) )
                    {
                        _id_7731ADEF63E19B0C = vehicle scripts\cp_mp\vehicles\vehicle::_id_D93EC4635290FEBD();

                        if ( isdefined( player.vehiclecustomization._id_94B01AC7CDDDF04D[_id_7731ADEF63E19B0C] ) )
                            vehicle setvehiclehornsound( player.vehiclecustomization._id_94B01AC7CDDDF04D[_id_7731ADEF63E19B0C] );
                        else
                            vehicle setvehiclehornsound( "" );

                        if ( !isdefined( vehicle._id_35FD13041DDE93E8 ) && !istrue( vehicle._id_7EE6203C5532A9E6 ) )
                        {
                            _id_35FD13041DDE93E8 = undefined;

                            if ( isdefined( player.vehiclecustomization._id_37DF38D20E12F77D[_id_7731ADEF63E19B0C] ) )
                                _id_35FD13041DDE93E8 = player.vehiclecustomization._id_37DF38D20E12F77D[_id_7731ADEF63E19B0C];
                            else if ( getdvarint( "dvar_42C1E6EB518BF4FC", 0 ) == 1 && scripts\engine\utility::cointoss() )
                            {
                                data = scripts\cp_mp\vehicles\vehicle::_id_29B4292C92443328( _id_7731ADEF63E19B0C );

                                if ( isdefined( data ) && isdefined( data._id_35FD13041DDE93E8 ) && data._id_35FD13041DDE93E8.size > 0 )
                                    _id_35FD13041DDE93E8 = scripts\engine\utility::random( data._id_35FD13041DDE93E8 );
                            }

                            if ( isdefined( _id_35FD13041DDE93E8 ) )
                            {
                                vehicle._id_35FD13041DDE93E8 = _id_35FD13041DDE93E8.ref;
                                vehicle _meth_788D3C14D6B4BA6B( _id_35FD13041DDE93E8.ref );

                                if ( isdefined( _id_35FD13041DDE93E8._id_FE99F86A708E76EF ) )
                                {
                                    foreach ( turret in scripts\cp_mp\vehicles\vehicle::vehicle_getturrets( vehicle ) )
                                        turret setvehicleturretcamo( _id_35FD13041DDE93E8._id_FE99F86A708E76EF );
                                }
                            }
                        }
                    }

                    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "challenges", "startChallengeTimer" ) )
                        player [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "challenges", "startChallengeTimer" ) ]]( "driving" );
                }
            }

            if ( !isdefined( _id_FC7C7A874B43A31A ) )
            {
                _id_6C6D078A43295C39 = "ENTERED_VEHICLE";

                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "pmc_missions", "onVehicleEnter" ) )
                    [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "pmc_missions", "onVehicleEnter" ) ]]( player, vehicle.vehiclename );
            }
            else
                _id_6C6D078A43295C39 = "SEAT_SWITCH";

            scripts\cp_mp\vehicles\customization\battle_tracks::battle_tracks_vehicleoccupancyenter( vehicle, player, seatid, _id_FC7C7A874B43A31A );
            scripts\cp_mp\vehicles\vehicle_dlog::vehicle_dlog_enterevent( vehicle, player, seatid, _id_6C6D078A43295C39 );
        }
        else if ( isdefined( _id_FC7C7A874B43A31A ) && !istrue( data.vehicledeath ) )
        {
            if ( istrue( data.playerdeath ) || istrue( data.playerlaststand ) || istrue( data.playerdisconnect ) )
            {
                _id_84DCD1AB2AE1DFFA = spawnstruct();
                _id_84DCD1AB2AE1DFFA.playerdeath = data.playerdeath;
                _id_84DCD1AB2AE1DFFA.playerlaststand = data.playerlaststand;
                _id_84DCD1AB2AE1DFFA.playerdisconnect = data.playerdisconnect;
                thread vehicle_occupancy_exit( vehicle, _id_FC7C7A874B43A31A, player, _id_84DCD1AB2AE1DFFA, 1 );
            }
            else
                vehicle_occupancy_reenter( vehicle, _id_FC7C7A874B43A31A, seatid, player, data );
        }
    }
}

vehicle_occupancy_exit( vehicle, seatid, player, data, immediate, _id_FE757BF1A5D559B4 )
{
    if ( isdefined( data ) )
    {

    }

    _id_FC7C7A874B43A31A = seatid;

    if ( isdefined( player ) )
    {
        if ( !isdefined( _id_FC7C7A874B43A31A ) )
            _id_FC7C7A874B43A31A = vehicle_occupancy_getoccupantseat( vehicle, player );

        if ( !player scripts\cp_mp\utility\player_utility::_isalive() )
            immediate = 1;

        if ( istrue( player.inlaststand ) )
            immediate = 1;

        vehicle_occupancy_stopmonitoringoccupant( player );
    }
    else
    {
        immediate = 1;
        vehicle_occupancy_purgedataforseatinstance( vehicle, _id_FC7C7A874B43A31A );
    }

    if ( istrue( vehicle.isdestroyed ) )
        immediate = 1;

    if ( !isdefined( data ) )
        data = spawnstruct();

    data.immediate = istrue( immediate );
    data.raceendnotify = "vehicle_race_last_call";
    data.raceendon = "vehicle_race_finished";

    if ( !data.immediate )
    {
        thread vehicle_occupancy_raceplayerdeathdisconnect( player, data );
        thread vehicle_occupancy_racevehicledeath( vehicle, data );
        thread vehicle_occupancy_racecomplete( _id_FC7C7A874B43A31A, undefined, data );
    }

    thread vehicle_occupancy_exitstart( vehicle, _id_FC7C7A874B43A31A, undefined, player, data, _id_FE757BF1A5D559B4 );

    if ( !data.immediate )
    {
        data waittill( data.raceendnotify );
        waittillframeend;
        data notify( data.raceendon );
    }

    success = vehicle_occupancy_raceresults( vehicle, player, _id_FC7C7A874B43A31A, undefined, data );
    thread vehicle_occupancy_exitend( vehicle, _id_FC7C7A874B43A31A, undefined, player, data, _id_FE757BF1A5D559B4 );
    vehicle_occupancy_updatefull( vehicle );
    vehicle_occupancy_updateempty( vehicle );

    if ( istrue( vehicle.isheli ) && istrue( vehicle.isempty ) )
        vehicle thread _id_BA42CF4E5BB24367();

    if ( success )
    {
        if ( isdefined( player ) )
        {
            player enablereloading();
            _id_DF653126C71EF4CA = vehicle_occupancy_isdriverseat( vehicle, _id_FC7C7A874B43A31A );

            if ( istrue( _id_DF653126C71EF4CA ) && scripts\cp_mp\utility\script_utility::issharedfuncdefined( "challenges", "stopChallengeTimer" ) )
                player [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "challenges", "stopChallengeTimer" ) ]]( "driving" );
        }
    }
    else if ( !istrue( data.playerdeath ) && !istrue( data.playerlaststand ) && !istrue( data.playerdisconnect ) && !istrue( data.vehicledeath ) )
        vehicle_occupancy_reenter( vehicle, _id_FC7C7A874B43A31A, undefined, player, data );
}

vehicle_occupancy_isfriendlytoplayer( vehicle, player )
{
    if ( level.teambased )
        return vehicle_occupancy_isfriendlytoteam( vehicle, player.team );
    else
    {
        if ( istrue( vehicle.friendlystatusdirty ) )
            vehicle vehicle_occupancy_cleanfriendlystatus( vehicle );

        return isdefined( vehicle.playerfriendlyto ) && vehicle.playerfriendlyto == player;
    }
}

vehicle_occupancy_isenemytoplayer( vehicle, player )
{
    if ( level.teambased )
        return vehicle_occupancy_isenemytoteam( vehicle, player.team );
    else
    {
        if ( istrue( vehicle.friendlystatusdirty ) )
            vehicle vehicle_occupancy_cleanfriendlystatus( vehicle );

        return isdefined( vehicle.playerfriendlyto ) && vehicle.playerfriendlyto != player;
    }
}

vehicle_occupancy_isneutraltoplayer( vehicle, player )
{
    if ( level.teambased )
        return vehicle_occupancy_isneutraltoteam( vehicle, player.team );
    else
    {
        if ( istrue( vehicle.friendlystatusdirty ) )
            vehicle vehicle_occupancy_cleanfriendlystatus( vehicle );

        return !isdefined( vehicle.playerfriendlyto );
    }
}

vehicle_occupancy_getplayerfriendlyto( vehicle )
{
    if ( !level.teambased )
    {
        if ( istrue( vehicle.friendlystatusdirty ) )
            vehicle vehicle_occupancy_cleanfriendlystatus( vehicle );

        return vehicle.playerfriendlyto;
    }

    return undefined;
}

vehicle_occupancy_isfriendlytoteam( vehicle, team )
{
    if ( level.teambased )
    {
        if ( istrue( vehicle.friendlystatusdirty ) )
            vehicle vehicle_occupancy_cleanfriendlystatus( vehicle );

        return isdefined( vehicle.teamfriendlyto ) && vehicle.teamfriendlyto == team;
    }

    return undefined;
}

vehicle_occupancy_isenemytoteam( vehicle, team )
{
    if ( level.teambased )
    {
        if ( istrue( vehicle.friendlystatusdirty ) )
            vehicle vehicle_occupancy_cleanfriendlystatus( vehicle );

        return isdefined( vehicle.teamfriendlyto ) && vehicle.teamfriendlyto != team;
    }

    return undefined;
}

vehicle_occupancy_isneutraltoteam( vehicle, team )
{
    if ( level.teambased )
    {
        if ( istrue( vehicle.friendlystatusdirty ) )
            vehicle vehicle_occupancy_cleanfriendlystatus( vehicle );

        return !isdefined( vehicle.teamfriendlyto );
    }

    return undefined;
}

vehicle_occupancy_getteamfriendlyto( vehicle )
{
    if ( level.teambased )
    {
        if ( istrue( vehicle.friendlystatusdirty ) )
            vehicle vehicle_occupancy_cleanfriendlystatus( vehicle );

        return vehicle.teamfriendlyto;
    }

    return undefined;
}

vehicle_occupancy_setfriendlystatusdirty( vehicle )
{
    vehicle.friendlystatusdirty = 1;
    scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_setvehicledirty( vehicle );
}

vehicle_occupancy_cleanfriendlystatus( vehicle )
{
    if ( level.teambased )
    {
        _id_C61FF99AB15EAE4B = 0;
        _id_757203A7499DFC71 = vehicle.teamfriendlyto;

        if ( isdefined( vehicle.team ) && vehicle.team != "neutral" )
        {
            vehicle.teamfriendlyto = vehicle.team;
            vehicle.friendlystatusdirty = undefined;
            _id_C61FF99AB15EAE4B = 1;
        }

        if ( !_id_C61FF99AB15EAE4B )
        {
            foreach ( _id_F85572CD5F6117C6 in vehicle.occupants )
            {
                if ( isdefined( _id_F85572CD5F6117C6 ) )
                {
                    vehicle.teamfriendlyto = _id_F85572CD5F6117C6.team;
                    vehicle.friendlystatusdirty = undefined;
                    _id_C61FF99AB15EAE4B = 1;
                    break;
                }
            }
        }

        if ( !_id_C61FF99AB15EAE4B )
        {
            vehicle.teamfriendlyto = undefined;
            vehicle.friendlystatusdirty = undefined;
        }

        if ( !isdefined( _id_757203A7499DFC71 ) && !isdefined( vehicle.teamfriendlyto ) )
            return 0;

        if ( isdefined( _id_757203A7499DFC71 ) && isdefined( vehicle.teamfriendlyto ) && _id_757203A7499DFC71 == vehicle.teamfriendlyto )
            return 0;

        vehicle_occupancy_friendlystatuschangedcallback( vehicle, _id_757203A7499DFC71, vehicle.teamfriendlyto );
        return 1;
    }
    else
    {
        _id_C61FF99AB15EAE4B = 0;
        _id_49DC0CD42EFB83E9 = vehicle.playerfriendlyto;

        if ( isdefined( vehicle.originalowner ) )
        {
            vehicle.playerfriendlyto = vehicle.originalowner;
            vehicle.friendlystatusdirty = undefined;
            _id_C61FF99AB15EAE4B = 1;
        }

        if ( !_id_C61FF99AB15EAE4B )
        {
            occupants = vehicle_occupancy_getalloccupants( vehicle );

            foreach ( _id_F85572CD5F6117C6 in occupants )
            {
                if ( isdefined( _id_F85572CD5F6117C6 ) )
                {
                    vehicle.playerfriendlyto = _id_F85572CD5F6117C6;
                    vehicle.friendlystatusdirty = undefined;
                    return;
                }
            }
        }

        if ( !isdefined( _id_49DC0CD42EFB83E9 ) && !isdefined( vehicle.playerfriendlyto ) )
            return 0;

        if ( isdefined( _id_49DC0CD42EFB83E9 ) && isdefined( vehicle.playerfriendlyto ) && _id_49DC0CD42EFB83E9 == vehicle.playerfriendlyto )
            return 0;

        vehicle_occupancy_friendlystatuschangedcallback( vehicle, _id_49DC0CD42EFB83E9, vehicle.playerfriendlyto );
        return 1;
    }
}

vehicle_occupancy_friendlystatuschangedcallback( vehicle, _id_965EA26E6EB230B9, _id_52312180EF1940BE )
{
    scripts\cp_mp\vehicles\vehicle_compass::vehicle_compass_friendlystatuschangedcallback( vehicle, _id_965EA26E6EB230B9, _id_52312180EF1940BE );
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );

    if ( !isdefined( _id_E2818AD39A3341B4.friendlystatuschangedcallback ) )
        return;

    thread [[ _id_E2818AD39A3341B4.friendlystatuschangedcallback ]]( vehicle, _id_965EA26E6EB230B9, _id_52312180EF1940BE );
}

vehicle_occupancy_setoriginalowner( vehicle, player )
{
    vehicle.originalowner = player;
    vehicle_occupancy_updateowner( vehicle );
}

vehicle_occupancy_setowner( vehicle, player, _id_57C14BF60C5BE4AB, _id_13CC810B9974360E )
{
    if ( !isdefined( vehicle.owners ) )
        vehicle.owners = [];
    else
    {
        vehicle_occupancy_clearowner( vehicle, player );
        vehicle.owners = scripts\engine\utility::array_removeundefined( vehicle.owners );
    }

    vehicle.owners[vehicle.owners.size] = player;

    if ( isdefined( _id_13CC810B9974360E ) && _id_13CC810B9974360E == -1 )
    {

    }
    else
        thread vehicle_occupancy_watchowner( vehicle, player, _id_57C14BF60C5BE4AB, _id_13CC810B9974360E );

    vehicle_occupancy_updateowner( vehicle );
}

vehicle_occupancy_updateowner( vehicle )
{
    vehicle notify( "vehicle_owner_update" );
    _id_F986E8DDFAC8AB13 = vehicle.owner;
    _id_FEFFBDC57F0856FA = vehicle.ownerteam;
    _id_B3AEDE46434BB626 = undefined;

    if ( isdefined( vehicle.owners ) )
    {
        for ( _id_AC0E594AC96AA3A8 = vehicle.owners.size - 1; _id_AC0E594AC96AA3A8 >= 0; _id_AC0E594AC96AA3A8-- )
        {
            if ( vehicle_occupancy_isplayervalidowner( vehicle, vehicle.owners[_id_AC0E594AC96AA3A8] ) )
            {
                _id_B3AEDE46434BB626 = vehicle.owners[_id_AC0E594AC96AA3A8];
                break;
            }
        }
    }

    if ( !isdefined( _id_B3AEDE46434BB626 ) )
    {
        if ( vehicle_occupancy_isplayervalidowner( vehicle, vehicle.originalowner ) )
            _id_B3AEDE46434BB626 = vehicle.originalowner;
    }

    vehicle.owner = _id_B3AEDE46434BB626;
    _id_443185A3B7BBA89C = 0;

    if ( isdefined( _id_B3AEDE46434BB626 ) || isdefined( _id_F986E8DDFAC8AB13 ) )
    {
        if ( !isdefined( _id_B3AEDE46434BB626 ) && isdefined( _id_F986E8DDFAC8AB13 ) )
            _id_443185A3B7BBA89C = 1;
        else if ( isdefined( _id_B3AEDE46434BB626 ) && !isdefined( _id_F986E8DDFAC8AB13 ) )
            _id_443185A3B7BBA89C = 1;
        else if ( _id_B3AEDE46434BB626 != _id_F986E8DDFAC8AB13 )
            _id_443185A3B7BBA89C = 1;
    }

    _id_1FBDA3BED6B9855F = 0;

    if ( isdefined( _id_B3AEDE46434BB626 ) )
    {
        if ( !isdefined( _id_FEFFBDC57F0856FA ) || _id_FEFFBDC57F0856FA != _id_B3AEDE46434BB626.team )
            _id_1FBDA3BED6B9855F = 1;

        vehicle.ownerteam = _id_B3AEDE46434BB626.team;
        scripts\cp_mp\vehicles\vehicle_compass::vehicle_compass_setteamfriendlyto( vehicle, _id_B3AEDE46434BB626.team );
        thread vehicle_occupancy_watchownerjoinedteam( vehicle, _id_B3AEDE46434BB626 );
    }
    else
    {
        if ( _id_443185A3B7BBA89C )
            _id_1FBDA3BED6B9855F = 1;

        vehicle.ownerteam = undefined;
    }

    if ( _id_443185A3B7BBA89C )
    {
        if ( !level.teambased )
            vehicle_occupancy_setfriendlystatusdirty( vehicle );
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "updateOwner" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "updateOwner" ) ]]( vehicle );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( vehicle.vehiclename, "updateOwner" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( vehicle.vehiclename, "updateOwner" ) ]]( vehicle, _id_B3AEDE46434BB626, _id_443185A3B7BBA89C, _id_1FBDA3BED6B9855F );
}

vehicle_occupancy_clearowner( vehicle, player )
{
    vehicle notify( "vehicle_clear_owner_" + player getentitynumber() );

    if ( isdefined( vehicle.owners ) )
        vehicle.owners = scripts\engine\utility::array_remove( vehicle.owners, player );

    if ( isdefined( vehicle.owner ) && vehicle.owner == player )
        vehicle_occupancy_updateowner( vehicle );
}

vehicle_occupancy_setteam( vehicle, team )
{
    _id_4BCF5A0C6C1E3A44 = !isdefined( vehicle.team ) || vehicle.team != team;
    vehicle.team = team;

    if ( vehicle.classname == "script_vehicle" )
        vehicle setvehicleteam( team );

    if ( _id_4BCF5A0C6C1E3A44 )
    {
        if ( level.teambased )
            vehicle_occupancy_setfriendlystatusdirty( vehicle );
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( vehicle.vehiclename, "updateTeam" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( vehicle.vehiclename, "updateTeam" ) ]]( vehicle, team, _id_4BCF5A0C6C1E3A44 );

    vehicle_occupancy_updateowner( vehicle );
}

#using_animtree("script_model");

vehicle_occupancy_init()
{
    _id_962A30A9BB8C0F09 = spawnstruct();
    level.vehicle.occupancy = _id_962A30A9BB8C0F09;
    _id_962A30A9BB8C0F09.vehicledata = [];
    _id_962A30A9BB8C0F09._id_77B46B8810CB73F3 = getdvarint( "dvar_4BF0D02FF4AC62ED", 1 ) > 0;

    if ( _id_962A30A9BB8C0F09._id_77B46B8810CB73F3 )
    {
        _id_962A30A9BB8C0F09._id_51C0466D6F15A77F = 0;
        _id_962A30A9BB8C0F09._id_DF81EEAB4C9E5F64 = [];
    }

    vehicle_occupancy_initdebug();
    [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "init" ) ]]();
    level._id_073D6C6366970020 = getdvarint( "dvar_ABD3BD3C25A13D43", 1 );
    level._id_351AAB391DA578A8 = getdvarint( "dvar_2BF0E47506040359", 1 ) == 1;
    level._id_ABE9BCB8A67FF917 = getdvarfloat( "dvar_83928D2D50DC276C" ) + 50;
    level._id_D9DC5B053FB57856 = getdvarfloat( "dvar_C9B7B0F34821B869" ) + 50;

    if ( istrue( level._id_351AAB391DA578A8 ) )
        level.scr_animtree["player_exit_vehicle_to_roof"] = #animtree;
}

vehicle_occupancy_enterstart( vehicle, seatid, _id_FC7C7A874B43A31A, player, data )
{
    data endon( data.raceendon );
    scripts\cp_mp\vehicles\vehicle_damage::_id_EAE2223216B7712C( vehicle, player );
    vehicle.occupantsreserving[seatid] = player;
    player.vehiclereserved = vehicle;
    scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_setvehicledirty( vehicle );
    scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_setpointsdirty( vehicle );
    scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_updateusability( vehicle );
    timestamp = undefined;

    if ( data.immediate )
        timestamp = gettime();

    if ( isdefined( data.enterstartwaitmsg ) )
        player waittill( data.enterstartwaitmsg );

    vehicle_occupancy_deleteseatcorpse( vehicle, seatid, 1 );
    enterstartcallback = vehicle_occupancy_getenterstartcallbackforseat( vehicle, seatid );

    if ( isdefined( enterstartcallback ) )
        [[ enterstartcallback ]]( vehicle, seatid, _id_FC7C7A874B43A31A, player, data );

    if ( !isdefined( data.enterstartcomplete ) )
        data.enterstartcomplete = 1;

    if ( data.immediate )
        return;
}

vehicle_occupancy_exitstart( vehicle, seatid, _id_7558F98F3236963D, player, data, _id_FE757BF1A5D559B4 )
{
    data endon( data.raceendon );
    timestamp = undefined;

    if ( data.immediate )
        timestamp = gettime();

    if ( isdefined( player ) )
    {
        seatdata = vehicle_occupancy_getleveldataforseat( vehicle scripts\cp_mp\vehicles\vehicle::_id_D93EC4635290FEBD(), seatid );

        if ( player _meth_A7DE57196F4B5D16() )
            player._id_8BCE248CE93882F2 = 1;
        else
            player._id_8BCE248CE93882F2 = undefined;
    }

    exitstartcallback = vehicle_occupancy_getexitstartcallbackforseat( vehicle, seatid );

    if ( isdefined( exitstartcallback ) )
        [[ exitstartcallback ]]( vehicle, seatid, _id_7558F98F3236963D, player, data, _id_FE757BF1A5D559B4 );
    else
        vehicle_occupancy_exitstartcallback( vehicle, seatid, _id_7558F98F3236963D, player, data, _id_FE757BF1A5D559B4 );

    if ( !isdefined( data.exitstartcomplete ) )
        data.exitstartcomplete = 1;

    if ( data.immediate )
        return;
}

_id_2966F7AB8AE9CCC6( tag )
{
    return tag + "_window";
}

_id_43C2C433B8B9B12D( vehicle, seatid, _id_FC7C7A874B43A31A, player, data )
{
    if ( istrue( data.success ) )
        _id_5004590331017D88( vehicle, seatid, _id_FC7C7A874B43A31A, player, data );
}

_id_5004590331017D88( vehicle, seatid, _id_FC7C7A874B43A31A, player, data )
{
    scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_updateomnvarsonseatenter( vehicle, _id_FC7C7A874B43A31A, seatid, player );
}

_id_857BF4201A249A99( vehicle, seatid, _id_7558F98F3236963D, player, data )
{
    if ( istrue( data.success ) )
        _id_CB4191526E56163C( vehicle, seatid, _id_7558F98F3236963D, player, data );
}

_id_CB4191526E56163C( vehicle, seatid, _id_7558F98F3236963D, player, data )
{
    if ( !istrue( data.playerdisconnect ) )
    {
        success = vehicle_occupancy_moveplayertoexit( vehicle, seatid, _id_7558F98F3236963D, player, data );

        if ( !success )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "handleSuicideFromVehicles" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "handleSuicideFromVehicles" ) ]]( player );
            else
                player suicide();
        }
    }

    scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_updateomnvarsonseatexit( vehicle, seatid, _id_7558F98F3236963D, player );
}

vehicle_occupancy_exitstartcallback( vehicle, seatid, _id_7558F98F3236963D, player, data, _id_FE757BF1A5D559B4 )
{
    data endon( data.raceendon );
    result = vehicle_occupancy_findplayerexit( player, vehicle, seatid, _id_7558F98F3236963D, data, _id_FE757BF1A5D559B4 );

    if ( !result )
    {
        data.exitstartcomplete = 0;
        vehicle_occupancy_errormessage( player, 2 );

        if ( !istrue( data.immediate ) )
        {
            waitframe();
            data notify( data.raceendnotify );
        }
    }
    else if ( isdefined( data._id_FE757BF1A5D559B4 ) && data._id_FE757BF1A5D559B4 == "_to_roof" )
    {
        result = _id_C5819749DB1604F5( player, vehicle, seatid, data );

        if ( !istrue( result ) )
        {
            player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_roof_exit" );
            vehicle_occupancy_exitstartcallback( vehicle, seatid, _id_7558F98F3236963D, player, data, undefined );
        }
    }
}

vehicle_occupancy_enterend( vehicle, seatid, _id_FC7C7A874B43A31A, player, data )
{
    if ( istrue( data.success ) )
    {
        vehicle.occupants[seatid] = player;
        vehicle.occupantsreserving[seatid] = undefined;
        player.vehicle = vehicle;
        player.vehiclereserved = undefined;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "disableClassSwapAllowed" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "disableClassSwapAllowed" ) ]]();

        vehicle_occupancy_applyrestrictionstooccupant( vehicle, seatid, player, data );
        vehicle_occupancy_updateriotshield( player, vehicle, seatid );
        vehicle_occupancy_hideoccupant( vehicle, seatid, player, data );
        vehicle_occupancy_applycameratooccupant( vehicle, seatid, _id_FC7C7A874B43A31A, player, data );
        vehicle_occupancy_applydamagemodifiertooccupant( vehicle, seatid, player, data );
        vehicle_occupancy_hidecashbag( vehicle, seatid, player, data );
        _id_7C295748BBE46EDF( vehicle, seatid, player, data );

        if ( vehicle scripts\cp_mp\vehicles\vehicle_damage::_id_452936099DCD1B94( seatid ) )
            player thread scripts\cp_mp\vehicles\vehicle_damage::_id_E6EC777562579771( vehicle, seatid );

        if ( !isdefined( _id_FC7C7A874B43A31A ) )
            vehicle_occupancy_onentervehicle( vehicle, seatid, player, data );

        _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, seatid );

        if ( isdefined( _id_0C50B485A43752FD.animtag ) && tolower( _id_0C50B485A43752FD.animtag ) == tolower( "tag_seat_0" ) )
            vehicle_occupancy_setowner( vehicle, player, 1 );

        if ( !isdefined( _id_FC7C7A874B43A31A ) )
        {
            player notify( "vehicle_enter" );

            if ( isdefined( _id_0C50B485A43752FD.onenterbattlechatter ) )
                thread vehicle_occupancy_handleplayerbc( player, _id_0C50B485A43752FD, 1 );
        }
        else
        {
            player notify( "vehicle_change_seat" );

            if ( isdefined( _id_0C50B485A43752FD.onenterbattlechatter ) )
                thread vehicle_occupancy_handleplayerbc( player, _id_0C50B485A43752FD, 0 );
        }

        _id_C6500DFC575DC550 = vehicle_occupancy_isdriverseat( vehicle, seatid );

        if ( _id_C6500DFC575DC550 && istrue( scripts\cp_mp\vehicles\vehicle::_id_29B4292C92443328( vehicle scripts\cp_mp\vehicles\vehicle::_id_D93EC4635290FEBD() )._id_941D95491D4D4817 ) )
            vehicle _id_3112242E4BC392DE();

        if ( istrue( vehicle.isheli ) )
            vehicle _id_A91927DF280E94E4();

        if ( _id_C6500DFC575DC550 && istrue( vehicle._id_6179B2EEA75DBFE0 ) )
            vehicle _id_9A816E66A02DDB40();
    }
    else
    {
        if ( isdefined( player ) )
            player.vehiclereserved = undefined;

        if ( !istrue( data.vehicledeath ) )
            vehicle.occupantsreserving[seatid] = undefined;
    }

    scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_setvehicledirty( vehicle );
    scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_setpointsdirty( vehicle );
    scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_updateusability( vehicle );
    timestamp = gettime();

    if ( istrue( data.success ) )
    {
        vehicle vehicle_turnengineon();
        player thread vehicle_occupancy_animateplayer( vehicle, seatid, _id_FC7C7A874B43A31A );
        _id_C84D89E51C871AA2( vehicle, seatid, player, data );
    }

    enterendcallback = vehicle_occupancy_getenterendcallbackforseat( vehicle, seatid );

    if ( isdefined( enterendcallback ) )
        [[ enterendcallback ]]( vehicle, seatid, _id_FC7C7A874B43A31A, player, data );
    else
        _id_43C2C433B8B9B12D( vehicle, seatid, _id_FC7C7A874B43A31A, player, data );
}

vehicle_occupancy_exitend( vehicle, seatid, _id_7558F98F3236963D, player, data, _id_FE757BF1A5D559B4 )
{
    if ( data.success )
    {
        vehicle.occupants[seatid] = undefined;

        if ( isdefined( player ) )
        {
            player notify( "vehicle_seat_exit" );

            if ( !isdefined( _id_7558F98F3236963D ) )
                player.vehicle = undefined;

            vehicle_occupancy_removerestrictionsfromoccupant( vehicle, seatid, player, data );
            vehicle_occupancy_updateriotshield( player, vehicle, _id_7558F98F3236963D );
            vehicle_occupancy_showoccupant( vehicle, seatid, player, data );
            _id_EDCB1116F9160367( vehicle, seatid, player, data );
            _id_E157F2A83AA01EA2( vehicle, seatid, player, data );
            vehicle_occupancy_removecamerafromoccupant( vehicle, _id_7558F98F3236963D, player, data );
            vehicle_occupancy_removedamagemodifierfromoccupant( vehicle, seatid, player, data );
            vehicle_occupancy_showcashbag( vehicle, seatid, player, data );
        }

        if ( !isdefined( _id_7558F98F3236963D ) )
            vehicle_occupancy_onexitvehicle( vehicle, seatid, player, data );

        if ( !vehicle scripts\common\vehicle_code::vehicle_is_stopped() && vehicle_occupancy_isdriverseat( vehicle, seatid ) )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "br", "challengeEvaluator" ) )
            {
                _id_CD37CE775909957B = spawnstruct();
                _id_CD37CE775909957B.exitdriver = 1;
                player thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "br", "challengeEvaluator" ) ]]( "br_mastery_ghostRideWhip", _id_CD37CE775909957B );
            }
        }

        if ( vehicle_occupancy_isdriverseat( vehicle, seatid ) && istrue( scripts\cp_mp\vehicles\vehicle::_id_29B4292C92443328( vehicle scripts\cp_mp\vehicles\vehicle::_id_D93EC4635290FEBD() )._id_941D95491D4D4817 ) )
            vehicle thread _id_4E7868EF633F4B36();
    }

    scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_setvehicledirty( vehicle );
    scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_setpointsdirty( vehicle );
    scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_updateusability( vehicle );
    timestamp = gettime();
    exitendcallback = vehicle_occupancy_getexitendcallbackforseat( vehicle, seatid );

    if ( isdefined( exitendcallback ) )
        [[ exitendcallback ]]( vehicle, seatid, _id_7558F98F3236963D, player, data );
    else
        _id_857BF4201A249A99( vehicle, seatid, _id_7558F98F3236963D, player, data );

    if ( isdefined( player ) )
    {
        player usebuttondone();

        if ( !isdefined( _id_7558F98F3236963D ) )
        {
            if ( isdefined( player.vehoccupancy_lastseatbc ) )
                player.vehoccupancy_lastseatbc = undefined;

            if ( isdefined( player.vehoccupancy_lastbctime ) )
                player.vehoccupancy_lastbctime = undefined;
        }
    }
}

vehicle_occupancy_reenter( vehicle, _id_9DE41F2EE77C33BA, _id_3F68C37BAFD38606, player, data )
{
    thread vehicle_occupancy_monitoroccupant( vehicle, player, _id_9DE41F2EE77C33BA );
    timestamp = gettime();
    reentercallback = vehicle_occupancy_getreentercallbackforseat( vehicle, _id_9DE41F2EE77C33BA );

    if ( isdefined( reentercallback ) )
        [[ reentercallback ]]( vehicle, _id_9DE41F2EE77C33BA, _id_3F68C37BAFD38606, player, data );
    else
    {
        data.success = undefined;
        data.exitposition = undefined;
        data.exitangles = undefined;
        data._id_FE757BF1A5D559B4 = undefined;
        data._id_2B16A165170D3506 = undefined;
        data._id_7862C7C7ADE2B42E = undefined;
        thread vehicle_occupancy_enter( vehicle, _id_9DE41F2EE77C33BA, player, data, 1 );
    }
}

vehicle_occupancy_getleveldata()
{
    return level.vehicle.occupancy;
}

vehicle_occupancy_handleplayerbc( player, seatdata, _id_4CBE0C5DDB047549 )
{
    _id_9D2442A09ADBB305 = 5000;

    if ( istrue( _id_4CBE0C5DDB047549 ) )
    {
        player.vehoccupancy_lastseatbc = seatdata.onenterbattlechatter;
        thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "trySayLocalSound" ) ]]( player, seatdata.onenterbattlechatter, undefined, 1 );
        player.vehoccupancy_lastbctime = gettime();
    }
    else if ( isdefined( player.vehoccupancy_lastseatbc ) && isdefined( player.vehoccupancy_lastbctime ) && player.vehoccupancy_lastseatbc != seatdata.onenterbattlechatter && gettime() - player.vehoccupancy_lastbctime > _id_9D2442A09ADBB305 )
    {
        thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "trySayLocalSound" ) ]]( player, seatdata.onenterbattlechatter );
        player.vehoccupancy_lastseatbc = seatdata.onenterbattlechatter;
        player.vehoccupancy_lastbctime = gettime();
    }
}

vehicle_occupancy_purgedataforseatinstance( vehicle, seatid )
{
    vehicle.occupants[seatid] = undefined;
    vehicle.occupantsreserving[seatid] = undefined;
}

vehicle_occupancy_onentervehicle( vehicle, _id_7558F98F3236963D, player, data )
{
    vehicle_occupancy_setfriendlystatusdirty( vehicle );
    vehicle scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_stopwatchingabandoned();
    player setstance( "stand" );
    player _id_3B64EB40368C1450::_id_59C053B89257BC95( "vehicle_occupant_common", vehicle_occupancy_getoccupantrestrictions(), 0 );
    thread vehicle_occupancy_takeriotshield( player, vehicle, _id_7558F98F3236963D );
    scripts\cp_mp\vehicles\customization\battle_tracks::battle_tracks_onentervehicle( vehicle, player );
    scripts\cp_mp\vehicles\vehicle_interact::_id_C5FE005F06FE5684( vehicle, player );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "onEnterVehicle", 1 ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "onEnterVehicle" ) ]]( vehicle, _id_7558F98F3236963D, player, data );
}

vehicle_occupancy_onexitvehicle( vehicle, _id_FC7C7A874B43A31A, player, data )
{
    if ( !istrue( data.playerdisconnect ) )
    {
        player vehicle_occupancy_stopmovefeedbackforplayer();
        player vehicle_occupancy_cleardamagefeedbackforplayer();
        scripts\cp_mp\vehicles\vehicle_interact::_id_DEB83798A724A77E( vehicle, player );

        if ( !istrue( data.playerdeath ) )
        {
            if ( istrue( data.playerlaststand ) )
                data.exittype = "DEATH";
            else if ( !isdefined( data.exittype ) )
                data.exittype = "VOLUNTARY";

            thread scripts\cp_mp\vehicles\vehicle::vehicle_preventplayercollisiondamagefortimeafterexit( vehicle, player );
        }
        else
            data.exittype = "DEATH";

        thread vehicle_occupancy_giveriotshield( player, data.playerdeath, data.playerlaststand );
    }
    else
        data.exittype = "DISCONNECT";

    vehicle_occupancy_setfriendlystatusdirty( vehicle );
    vehicle thread scripts\cp_mp\vehicles\vehicle_spawn::vehicle_spawn_watchabandoned();
    vehicle thread scripts\cp_mp\vehicles\vehicle_spawn::_id_6C65DF1F40E10037();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "onExitVehicle", 1 ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "onExitVehicle" ) ]]( vehicle, _id_FC7C7A874B43A31A, player, data );

    scripts\cp_mp\vehicles\vehicle_dlog::vehicle_dlog_exitevent( vehicle, player, _id_FC7C7A874B43A31A, data.exittype );
    scripts\cp_mp\vehicles\customization\battle_tracks::battle_tracks_onexitvehicle( vehicle, player, _id_FC7C7A874B43A31A );
}

vehicle_occupancy_updatefull( vehicle )
{
    _id_5E41EE78365ED202 = vehicle_occupancy_getavailablevehicleseats( vehicle ).size <= 0;

    if ( _id_5E41EE78365ED202 )
    {
        if ( !istrue( vehicle.isfull ) )
        {
            scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_setpointdirty( vehicle, "single" );
            scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_updateusability( vehicle );
            vehicle.isfull = 1;
        }
        else
            scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_updateusability( vehicle );
    }
    else if ( istrue( vehicle.isfull ) )
    {
        vehicle.isfull = undefined;
        scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_setpointdirty( vehicle, "single" );
        scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_updateusability( vehicle );
    }
    else
        scripts\cp_mp\vehicles\vehicle_interact::vehicle_interact_updateusability( vehicle );
}

vehicle_occupancy_updateempty( vehicle )
{
    _id_8224E7631D8F04F2 = vehicle_occupancy_getavailablevehicleseats( vehicle );
    _id_12D36E89A6E0742E = vehicle_occupancy_getallvehicleseats( vehicle );
    isempty = _id_8224E7631D8F04F2.size == _id_12D36E89A6E0742E.size;
    vehicle.isempty = isempty;
}

vehicle_occupancy_getenterstartcallbackforseat( vehicle, seatid )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( vehicle.vehiclename, "enterStart" ) )
        return scripts\cp_mp\utility\script_utility::getsharedfunc( vehicle.vehiclename, "enterStart" );
}

vehicle_occupancy_getenterendcallbackforseat( vehicle, seatid )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( vehicle.vehiclename, "enterEnd" ) )
        return scripts\cp_mp\utility\script_utility::getsharedfunc( vehicle.vehiclename, "enterEnd" );
}

vehicle_occupancy_getexitstartcallbackforseat( vehicle, seatid )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( vehicle.vehiclename, "exitStart" ) )
        return scripts\cp_mp\utility\script_utility::getsharedfunc( vehicle.vehiclename, "exitStart" );
}

vehicle_occupancy_getexitendcallbackforseat( vehicle, seatid )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( vehicle.vehiclename, "exitEnd" ) )
        return scripts\cp_mp\utility\script_utility::getsharedfunc( vehicle.vehiclename, "exitEnd" );
}

vehicle_occupancy_getreentercallbackforseat( vehicle, seatid )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( vehicle.vehiclename, "reenter" ) )
        return scripts\cp_mp\utility\script_utility::getsharedfunc( vehicle.vehiclename, "reenter" );
}

vehicle_occupancy_applyrestrictionstooccupant( vehicle, _id_7558F98F3236963D, player, data )
{
    if ( !vehicle_occupancy_movementisallowed( vehicle ) && !vehicle _id_F654C168752ED299() )
    {
        if ( _id_7558F98F3236963D == vehicle_occupancy_getdriverseat( vehicle ) )
            vehicle_occupancy_allowmovementplayer( vehicle, player, 0, _id_7558F98F3236963D );
    }

    restrictions = vehicle_occupancy_getrestrictionsforseat( vehicle, _id_7558F98F3236963D );
    player _id_3B64EB40368C1450::_id_59C053B89257BC95( "vehicle_occupant", restrictions, 0 );
}

vehicle_occupancy_removerestrictionsfromoccupant( vehicle, _id_FC7C7A874B43A31A, player, data )
{
    if ( !istrue( data.playerdeath ) )
    {
        vehicle_occupancy_allowmovementplayer( vehicle, player, 1, undefined );
        player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_occupant" );
    }
}

_id_031609728116475F()
{
    if ( !isdefined( level._id_12A9AAC58C679ECA ) )
        level._id_12A9AAC58C679ECA = getdvarint( "dvar_4F6BB46A93A86D18", 1 );

    return level._id_12A9AAC58C679ECA;
}

vehicle_occupancy_hideoccupant( vehicle, _id_7558F98F3236963D, player, data )
{
    if ( vehicle_shouldhideoccupantforseat( vehicle, _id_7558F98F3236963D ) )
    {
        player.nocorpse = 1;

        if ( _id_031609728116475F() )
            player scripts\cp_mp\utility\player_utility::_id_A593971D75D82113();
        else
            player playerhide();
    }
}

_id_C84D89E51C871AA2( vehicle, _id_FC7C7A874B43A31A, player, data )
{
    if ( _id_0F3DB2E446C1457F( vehicle, _id_FC7C7A874B43A31A, player ) )
        player vehicle_setstowedweaponvisibility( 0 );
}

_id_23A58D26E5C53E1F( player, data )
{
    _id_962A30A9BB8C0F09 = vehicle_occupancy_getleveldata();

    if ( !_id_962A30A9BB8C0F09._id_77B46B8810CB73F3 )
        return;

    id = _id_962A30A9BB8C0F09._id_51C0466D6F15A77F;
    _id_962A30A9BB8C0F09._id_51C0466D6F15A77F++;
    player scripts\cp_mp\utility\player_utility::_id_A593971D75D82113();
    _id_962A30A9BB8C0F09._id_DF81EEAB4C9E5F64[id] = player;

    if ( !isdefined( data._id_DF81EEAB4C9E5F64 ) )
        data._id_DF81EEAB4C9E5F64 = [];

    data._id_DF81EEAB4C9E5F64[id] = player;
    return id;
}

_id_1A067F7DA28CA689( id, data, _id_F4FEDB549A5FA44B )
{
    _id_962A30A9BB8C0F09 = vehicle_occupancy_getleveldata();

    if ( !_id_962A30A9BB8C0F09._id_77B46B8810CB73F3 )
        return;

    if ( istrue( _id_F4FEDB549A5FA44B ) )
    {
        waitframe();
        waitframe();
    }

    if ( !_id_962A30A9BB8C0F09._id_77B46B8810CB73F3 )
        return;

    if ( !isdefined( _id_962A30A9BB8C0F09._id_DF81EEAB4C9E5F64[id] ) )
        return;

    player = _id_962A30A9BB8C0F09._id_DF81EEAB4C9E5F64[id];

    if ( isdefined( data ) && isdefined( data._id_DF81EEAB4C9E5F64 ) )
        data._id_DF81EEAB4C9E5F64[id] = undefined;

    if ( isdefined( player ) )
        player scripts\cp_mp\utility\player_utility::_id_6FB380927695EE76();
}

_id_914037C6A5CEC6CD( data, _id_F4FEDB549A5FA44B )
{
    _id_962A30A9BB8C0F09 = vehicle_occupancy_getleveldata();

    if ( !_id_962A30A9BB8C0F09._id_77B46B8810CB73F3 )
        return;

    if ( istrue( _id_F4FEDB549A5FA44B ) )
    {
        waitframe();
        waitframe();
    }

    if ( !isdefined( data._id_DF81EEAB4C9E5F64 ) )
        return;

    foreach ( id, player in data._id_DF81EEAB4C9E5F64 )
    {
        if ( isdefined( _id_962A30A9BB8C0F09._id_DF81EEAB4C9E5F64[id] ) )
        {
            _id_962A30A9BB8C0F09._id_DF81EEAB4C9E5F64[id] = undefined;

            if ( isdefined( player ) )
                player scripts\cp_mp\utility\player_utility::_id_6FB380927695EE76();
        }
    }

    data._id_DF81EEAB4C9E5F64 = undefined;
}

_id_037BAD8E4D4B6A7F()
{
    _id_962A30A9BB8C0F09 = vehicle_occupancy_getleveldata();

    if ( !_id_962A30A9BB8C0F09._id_77B46B8810CB73F3 )
        return;

    foreach ( id, player in _id_962A30A9BB8C0F09._id_DF81EEAB4C9E5F64 )
    {
        if ( !isdefined( player ) )
            _id_962A30A9BB8C0F09._id_DF81EEAB4C9E5F64[id] = undefined;
    }
}

vehicle_occupancy_showoccupant( vehicle, _id_FC7C7A874B43A31A, player, data )
{
    if ( !istrue( data.playerdeath ) )
    {
        if ( vehicle_shouldhideoccupantforseat( vehicle, _id_FC7C7A874B43A31A ) )
        {
            if ( !istrue( data.nocorpse ) )
                player.nocorpse = undefined;

            if ( _id_031609728116475F() )
                player scripts\cp_mp\utility\player_utility::_id_6FB380927695EE76();
            else
                player playershow();
        }
    }
}

_id_EDCB1116F9160367( vehicle, _id_FC7C7A874B43A31A, player, data )
{
    if ( !istrue( data.playerdeath ) )
    {
        if ( _id_0F3DB2E446C1457F( vehicle, _id_FC7C7A874B43A31A, player ) )
            player vehicle_setstowedweaponvisibility( 1 );
    }
}

_id_7C295748BBE46EDF( vehicle, _id_FC7C7A874B43A31A, player, data )
{
    if ( _id_E552D137B9591A4C( vehicle, _id_FC7C7A874B43A31A, player ) && isdefined( player.headmodel ) && player tagexists( "j_helmet_hide" ) )
        player hidepart( "j_helmet_hide", player.headmodel );
}

_id_E157F2A83AA01EA2( vehicle, _id_FC7C7A874B43A31A, player, data )
{
    if ( _id_E552D137B9591A4C( vehicle, _id_FC7C7A874B43A31A, player ) && isdefined( player.headmodel ) && player tagexists( "j_helmet_hide" ) )
        player showpart( "j_helmet_hide", player.headmodel );
}

_id_E552D137B9591A4C( vehicle, seatid, player )
{
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );
    _id_0C50B485A43752FD = _id_E2818AD39A3341B4.seatdata[seatid];
    return istrue( _id_0C50B485A43752FD._id_24F53ABCEDB992BC );
}

vehicle_occupancy_applycameratooccupant( vehicle, seatid, _id_FC7C7A874B43A31A, player, data )
{
    camera = vehicle_getcameraforseat( vehicle, seatid );

    if ( isdefined( camera ) && camera != "none" )
    {
        _id_2640F93C42B5DF71 = vehicle_getcameraforseat( vehicle, _id_FC7C7A874B43A31A );

        if ( _id_2640F93C42B5DF71 != camera )
            player cameraset( camera );
    }
}

vehicle_occupancy_removecamerafromoccupant( vehicle, _id_7558F98F3236963D, player, data )
{
    if ( isdefined( _id_7558F98F3236963D ) )
    {
        camera = vehicle_getcameraforseat( vehicle, _id_7558F98F3236963D );

        if ( camera == "none" )
        {
            player cameradefault();
            return;
        }
    }
    else
        player cameradefault();
}

vehicle_occupancy_applydamagemodifiertooccupant( vehicle, _id_7558F98F3236963D, player, data )
{
    damagemodifier = vehicle_occupancy_getdamagemodifierforseat( vehicle, _id_7558F98F3236963D );

    if ( isdefined( damagemodifier ) && damagemodifier != -1 )
        player scripts\cp_mp\utility\damage_utility::adddamagemodifier( vehicle.vehiclename + "_" + _id_7558F98F3236963D, damagemodifier, 0, ::vehicle_occupancy_damagemodifierignorefunc );
}

vehicle_occupancy_removedamagemodifierfromoccupant( vehicle, _id_FC7C7A874B43A31A, player, data )
{
    if ( !istrue( data.playerdeath ) )
    {
        damagemodifier = vehicle_occupancy_getdamagemodifierforseat( vehicle, _id_FC7C7A874B43A31A );

        if ( isdefined( damagemodifier ) && damagemodifier != -1 )
            player scripts\cp_mp\utility\damage_utility::removedamagemodifier( vehicle.vehiclename + "_" + _id_FC7C7A874B43A31A, 0 );
    }
}

vehicle_occupancy_getrestrictionsforseat( vehicle, seatid )
{
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );
    _id_0C50B485A43752FD = _id_E2818AD39A3341B4.seatdata[seatid];
    restrictions = scripts\engine\utility::ter_op( isdefined( _id_0C50B485A43752FD.restrictions ), _id_0C50B485A43752FD.restrictions, _id_E2818AD39A3341B4.restrictions );

    if ( !vehicle scripts\cp_mp\vehicles\vehicle_damage::_id_B9D5A379EB1AEFC7( seatid ) )
        restrictions[restrictions.size] = "vehicle_lean_out";

    return restrictions;
}

vehicle_shouldhideoccupantforseat( vehicle, seatid )
{
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );
    _id_0C50B485A43752FD = _id_E2818AD39A3341B4.seatdata[seatid];

    if ( isdefined( _id_0C50B485A43752FD.hideoccupant ) )
        return istrue( _id_0C50B485A43752FD.hideoccupant );
    else
        return istrue( _id_E2818AD39A3341B4.hideoccupant );
}

_id_0F3DB2E446C1457F( vehicle, seatid, player )
{
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );
    _id_0C50B485A43752FD = _id_E2818AD39A3341B4.seatdata[seatid];
    return player _meth_793F941D7DFF15ED() && istrue( _id_0C50B485A43752FD.hidestowedweapon );
}

vehicle_getcameraforseat( vehicle, seatid )
{
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );

    if ( isdefined( seatid ) )
    {
        _id_0C50B485A43752FD = _id_E2818AD39A3341B4.seatdata[seatid];
        camera = _id_E2818AD39A3341B4.camera;

        if ( isdefined( _id_0C50B485A43752FD.camera ) )
            camera = _id_0C50B485A43752FD.camera;

        if ( isdefined( _id_0C50B485A43752FD.animtag ) && tolower( _id_0C50B485A43752FD.animtag ) == "tag_seat_0" )
            camera = "none";
    }
    else
        camera = "none";

    return camera;
}

vehicle_occupancy_getdamagemodifierforseat( vehicle, seatid )
{
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );
    _id_0C50B485A43752FD = _id_E2818AD39A3341B4.seatdata[seatid];
    return scripts\engine\utility::ter_op( isdefined( _id_0C50B485A43752FD.damagemodifier ), _id_0C50B485A43752FD.damagemodifier, _id_E2818AD39A3341B4.damagemodifier );
}

vehicle_occupancy_damagemodifierignorefunc( inflictor, attacker, victim, damage, meansofdeath, objweapon, hitloc )
{
    data = scripts\cp_mp\utility\damage_utility::packdamagedata( attacker, victim, damage, objweapon, meansofdeath, inflictor );

    if ( meansofdeath == "MOD_TRIGGER_HURT" )
        return 1;

    if ( isdefined( objweapon ) && objweapon.basename == "bomb_site_mp" )
        return 1;

    if ( victim scripts\cp_mp\utility\damage_utility::isstuckdamage( data ) )
        return 1;

    return 0;
}

vehicle_occupancy_monitoroccupant( vehicle, player, seatid )
{
    thread vehicle_occupancy_monitorcontrols( vehicle, player, seatid );
    thread vehicle_occupancy_monitorseatswitch( vehicle, player, seatid, 1 );
    thread vehicle_occupancy_monitorexit( vehicle, player, seatid );
    thread vehicle_occupancy_monitorgameended( vehicle, player, seatid );
    thread _id_E02E15080A5F5FE4( vehicle, player );
}

vehicle_occupancy_stopmonitoringoccupant( player )
{
    player notify( "vehicle_occupancy_monitorControls" );
    player notify( "vehicle_occupancy_monitorSeatSwitch" );
    player notify( "vehicle_occupancy_monitorExit" );
    player notify( "vehicle_occupancy_monitorGameEnded" );
    player notify( "vehicle_occupancy_monitorLeanBlocked" );
}

_id_E02E15080A5F5FE4( vehicle, player )
{
    player notify( "vehicle_occupancy_monitorLeanBlocked" );
    player endon( "vehicle_occupancy_monitorLeanBlocked" );
    player endon( "death_or_disconnect" );
    player endon( "last_stand_start" );

    for (;;)
    {
        player scripts\engine\utility::waittill_any_2( "vehicle_leanout_attempt_denied", "vehicle_leanout_forced_return" );

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "showErrorMessage" ) )
            player [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "showErrorMessage" ) ]]( "VEHICLES/LEAN_OUT_BLOCKED" );
    }
}

vehicle_occupancy_monitorseatswitch( vehicle, player, seatid, _id_36FF66C0883B5AA6 )
{
    player endon( "death_or_disconnect" );
    player endon( "last_stand_start" );
    vehicle endon( "death" );
    level endon( "game_ended" );
    player notify( "vehicle_occupancy_monitorSeatSwitch" );
    player endon( "vehicle_occupancy_monitorSeatSwitch" );
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );

    if ( _id_E2818AD39A3341B4.seatdata.size <= 1 )
        return;

    _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, seatid );

    if ( !isdefined( _id_0C50B485A43752FD.seatswitcharray ) || _id_0C50B485A43752FD.seatswitcharray.size <= 0 )
        return;

    if ( !isbot( player ) )
    {
        if ( _id_36FF66C0883B5AA6 )
            wait 0.2;

        while ( player vehswitchseatbuttonpressed() || player _meth_5919151DD97650D2() )
            waitframe();

        while ( !player vehswitchseatbuttonpressed() && !player _meth_5919151DD97650D2() || istrue( player._id_EA02A8BFCFDE7C4B ) )
            waitframe();

        if ( player _meth_5919151DD97650D2() )
            _id_C0125690BC99343D = _id_795D10F52E5291CF( vehicle, player, seatid );
        else
            _id_C0125690BC99343D = vehicle_occupancy_getnextavailableseat( vehicle, player, seatid );

        if ( isdefined( _id_C0125690BC99343D ) )
            thread vehicle_occupancy_enter( vehicle, _id_C0125690BC99343D, player );

        vehicle_occupancy_errormessage( player, 1 );
        thread vehicle_occupancy_monitorseatswitch( vehicle, player, seatid, 0 );
    }
}

vehicle_occupancy_getnextavailableseat( vehicle, player, seatid )
{
    _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, seatid );

    if ( !isdefined( _id_0C50B485A43752FD.seatswitcharray ) || _id_0C50B485A43752FD.seatswitcharray.size <= 0 )
        return undefined;

    foreach ( _id_C0125690BC99343D in _id_0C50B485A43752FD.seatswitcharray )
    {
        if ( vehicle_occupancy_seatisavailable( vehicle, _id_C0125690BC99343D, player ) )
            return _id_C0125690BC99343D;
    }
}

_id_795D10F52E5291CF( vehicle, player, seatid )
{
    _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, seatid );

    if ( !isdefined( _id_0C50B485A43752FD.seatswitcharray ) || _id_0C50B485A43752FD.seatswitcharray.size <= 0 )
        return undefined;

    _id_1CE964595AADD958 = undefined;

    foreach ( _id_C0125690BC99343D in _id_0C50B485A43752FD.seatswitcharray )
    {
        if ( vehicle_occupancy_seatisavailable( vehicle, _id_C0125690BC99343D, player ) )
            _id_1CE964595AADD958 = _id_C0125690BC99343D;
    }

    return _id_1CE964595AADD958;
}

vehicle_occupancy_monitorexit( vehicle, player, seatid )
{
    player notify( "vehicle_occupancy_monitorExit" );
    player endon( "vehicle_occupancy_monitorExit" );
    vehicle endon( "death" );
    level endon( "game_ended" );
    _id_FE757BF1A5D559B4 = vehicle_occupancy_monitorexitinternal( vehicle, player, seatid );
    data = spawnstruct();

    if ( isdefined( player ) )
    {
        if ( !player scripts\cp_mp\utility\player_utility::_isalive() )
            data.playerdeath = 1;

        if ( istrue( player.inlaststand ) )
            data.playerlaststand = 1;
    }
    else
        data.playerdisconnect = 1;

    thread vehicle_occupancy_exit( vehicle, seatid, player, data, undefined, _id_FE757BF1A5D559B4 );
}

vehicle_occupancy_monitorexitinternal( vehicle, player, seatid )
{
    player endon( "death_or_disconnect" );
    player endon( "last_stand_start" );
    endtime = gettime() + 300;
    _id_B28ED4C7D2FF1C4E = 0;
    _id_C08D88C04569A00B = vehicle_occupancy_getleveldataforvehicle( vehicle scripts\cp_mp\vehicles\vehicle::_id_D93EC4635290FEBD() )._id_C08D88C04569A00B;
    _id_6511893609889B7A = istrue( level._id_351AAB391DA578A8 ) && isdefined( _id_C08D88C04569A00B ) && _id_C08D88C04569A00B == "stand_up";
    _id_7A888FDBA3DFB003 = istrue( level._id_351AAB391DA578A8 ) && isdefined( _id_C08D88C04569A00B ) && ( _id_C08D88C04569A00B == "stand_up" || player _meth_46CA2675C0578280() );
    _id_EDC035EC125029EB = istrue( level._id_073D6C6366970020 );
    player setclientomnvar( "ui_veh_exit_button_holdtime", 0 );

    for (;;)
    {
        if ( !player usebuttonpressed() )
            _id_B28ED4C7D2FF1C4E = 1;

        if ( _id_B28ED4C7D2FF1C4E && gettime() >= endtime )
            break;

        waitframe();
    }

    _id_038FC7BD1495C4B2 = level.framedurationseconds;
    _id_33193F537B85B6D4 = getdvarint( "dvar_9402582F8123DB99", 250 ) / 1000;
    _id_0B24CF95B8CF123C = 0;
    _id_7F08BBC709D0EFFC = undefined;

    for (;;)
    {
        _id_23B90B34FECC58CD = 0;
        _id_930201649EAF32AF = player getcurrentusereloadconfig();
        _id_556640F47976049A = 0;
        player setclientomnvar( "ui_veh_exit_button_holdtime", 0 );

        while ( player usebuttonpressed() )
        {
            player disablereloading();
            player cancelreloading();
            _id_556640F47976049A = 1;
            _id_23B90B34FECC58CD = _id_23B90B34FECC58CD + _id_038FC7BD1495C4B2;
            _id_86EB80FF19554B0C = player usinggamepad();
            _id_B97750D9099A9B79 = player getuseholdkbmprofile();
            _id_73780D1B420D7903 = !_id_86EB80FF19554B0C && !_id_B97750D9099A9B79;
            _id_CAAA0275D82BFEE1 = !_id_86EB80FF19554B0C && _id_B97750D9099A9B79;
            _id_8B3C790F008214A9 = _id_86EB80FF19554B0C && _id_930201649EAF32AF == 0;
            _id_97E758980ADD17EF = _id_86EB80FF19554B0C && _id_930201649EAF32AF > 0;
            _id_41BD24E292FB94E0 = _id_8B3C790F008214A9 || _id_CAAA0275D82BFEE1;

            if ( _id_8B3C790F008214A9 || _id_CAAA0275D82BFEE1 )
                player setclientomnvar( "ui_veh_exit_button_holdtime", _id_23B90B34FECC58CD / 0.3 );

            if ( _id_41BD24E292FB94E0 && _id_23B90B34FECC58CD > 0.3 || _id_73780D1B420D7903 )
                return scripts\engine\utility::ter_op( _id_EDC035EC125029EB && player _meth_A7DE57196F4B5D16() && vehicle vehicle_getspeed() > 10, "_to_dive", undefined );
            else if ( _id_97E758980ADD17EF && _id_23B90B34FECC58CD >= _id_33193F537B85B6D4 )
            {
                player enablereloading();
                player forcereloading();
            }

            wait( _id_038FC7BD1495C4B2 );
        }

        if ( _id_556640F47976049A && player usinggamepad() && _id_930201649EAF32AF > 0 && _id_23B90B34FECC58CD < _id_33193F537B85B6D4 )
            return scripts\engine\utility::ter_op( _id_EDC035EC125029EB && player _meth_A7DE57196F4B5D16() && vehicle vehicle_getspeed() > 10, "_to_dive", undefined );
        else if ( _id_556640F47976049A )
        {
            player enablereloading();
            player forcereloading();
        }

        if ( _id_7A888FDBA3DFB003 )
        {
            _id_0B24CF95B8CF123C = _id_0B24CF95B8CF123C | player jumpbuttonpressed();

            if ( player jumpbuttonpressed() )
                _id_7F08BBC709D0EFFC = gettime();
            else if ( _id_0B24CF95B8CF123C && isdefined( _id_7F08BBC709D0EFFC ) && _id_7F08BBC709D0EFFC + 400 < gettime() )
                _id_0B24CF95B8CF123C = 0;

            if ( _id_0B24CF95B8CF123C && !player _meth_E1B085052385D056() && ( player _meth_46CA2675C0578280() || _id_6511893609889B7A ) )
                return "_to_roof";
        }

        waitframe();
    }
}

vehicle_occupancy_errormessage( player, _id_5B67BCF1FFFA8112 )
{
    _id_4A939FF1F2CAED40 = undefined;

    switch ( _id_5B67BCF1FFFA8112 )
    {
        case 1:
            _id_4A939FF1F2CAED40 = "VEHICLES/SEAT_SWITCH_OCCUPIED";
            break;
        case 2:
            _id_4A939FF1F2CAED40 = "VEHICLES/CANNOT_EXIT";
            break;
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "showErrorMessage" ) )
        player [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "showErrorMessage" ) ]]( _id_4A939FF1F2CAED40 );
}

vehicle_occupancy_monitorgameended( vehicle, player, seatid )
{
    player endon( "death_or_disconnect" );
    player endon( "last_stand_start" );
    player notify( "vehicle_occupancy_monitorGameEnded" );
    player endon( "vehicle_occupancy_monitorGameEnded" );

    if ( seatid == vehicle_occupancy_getdriverseat( vehicle ) )
    {
        level waittill( "game_ended" );
        player allowmovement( 0 );
    }
}

vehicle_occupancy_monitorcontrols( vehicle, player, seatid )
{
    player endon( "death_or_disconnect" );
    player endon( "last_stand_start" );
    vehicle endon( "death" );
    level endon( "game_ended" );
    player notify( "vehicle_occupancy_monitorControls" );
    player endon( "vehicle_occupancy_monitorControls" );

    if ( scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_controlsarefadedoutorhidden( player ) )
        return;

    if ( 1 )
        wait 1.5;

    childthread vehicle_occupancy_monitormovementcontrols( vehicle, player, seatid );
    childthread vehicle_occupancy_monitorturretcontrols( vehicle, player, seatid );
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );

    if ( isdefined( _id_E2818AD39A3341B4.monitorcontrolscallback ) )
        childthread [[ _id_E2818AD39A3341B4.monitorcontrolscallback ]]( vehicle, player, seatid, "vehicle_occupancy_monitorControls" );
}

vehicle_occupancy_fadeoutcontrols( player )
{
    scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_fadeoutcontrols( player );
    player notify( "vehicle_occupancy_monitorControls" );
}

vehicle_occupancy_monitormovementcontrols( vehicle, player, seatid )
{
    driverseatid = vehicle_occupancy_getdriverseat( vehicle );

    if ( seatid == driverseatid )
    {
        canfly = vehicle scripts\cp_mp\vehicles\vehicle::vehiclecanfly();

        if ( canfly )
        {
            for (;;)
            {
                forward = vehicle vehicle_getinputvalue( 0 );
                _id_96B5B2F64547BA5E = vehicle vehicle_getinputvalue( 2 );
                strafe = vehicle vehicle_getinputvalue( 1 );
                _id_510E41AFAD57494B = vehicle vehicle_getinputvalue( 3 );

                if ( abs( forward ) > 0 || abs( _id_96B5B2F64547BA5E ) > 0 || abs( strafe ) > 0 || abs( _id_510E41AFAD57494B ) > 0 )
                    vehicle_occupancy_fadeoutcontrols( player );

                wait 0.05;
            }
        }
        else
        {
            for (;;)
            {
                _id_B9E1E30F0AC5AA82 = vehicle vehicle_getinputvalue( 4 );

                if ( abs( _id_B9E1E30F0AC5AA82 ) >= 0.2 )
                    vehicle_occupancy_fadeoutcontrols( player );

                wait 0.05;
            }
        }
    }
}

vehicle_occupancy_monitorturretcontrols( vehicle, player, seatid )
{
    _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, seatid );

    if ( isdefined( _id_0C50B485A43752FD.turretobjweapon ) )
    {
        turret = scripts\cp_mp\vehicles\vehicle::vehicle_getturretbyweapon( vehicle, _id_0C50B485A43752FD.turretobjweapon );

        if ( isdefined( turret ) )
        {
            turret scripts\engine\utility::waittill_any_2( "turret_fire", "turret_reload" );
            vehicle_occupancy_fadeoutcontrols( player );
        }
    }
}

vehicle_occupancy_raceplayerdeathdisconnect( player, data )
{
    data endon( data.raceendon );
    result = player scripts\engine\utility::waittill_any_return_no_endon_death_3( "death", "disconnect", "last_stand_start" );

    if ( result == "death" )
        data.playerdeath = 1;
    else if ( result == "disconnect" )
        data.playerdisconnect = 1;
    else if ( result == "last_stand_start" )
        data.playerlaststand = 1;

    data notify( data.raceendnotify );
}

vehicle_occupancy_racevehicledeath( vehicle, data )
{
    data endon( data.raceendon );
    vehicle waittill( "death" );
    data.vehicledeath = 1;
    data notify( data.raceendnotify );
}

vehicle_occupancy_raceseatunavailable( vehicle, player, seatid, _id_FC7C7A874B43A31A, data )
{
    data endon( data.raceendon );

    while ( isdefined( vehicle ) )
    {
        if ( !vehicle_occupancy_seatisavailable( vehicle, seatid, player ) )
        {
            data.seatunavailable = 1;
            data notify( data.raceendnotify );
            break;
        }

        waitframe();
    }
}

vehicle_occupancy_racecomplete( _id_FC7C7A874B43A31A, _id_7558F98F3236963D, data )
{
    data endon( data.raceendon );

    if ( isdefined( _id_FC7C7A874B43A31A ) && isdefined( _id_7558F98F3236963D ) )
    {
        while ( !istrue( data.enterstartcomplete ) || !istrue( data.exitstartcomplete ) )
            waitframe();
    }
    else if ( isdefined( _id_FC7C7A874B43A31A ) )
    {
        while ( !istrue( data.exitstartcomplete ) )
            waitframe();
    }
    else
    {
        while ( !istrue( data.enterstartcomplete ) )
            waitframe();
    }

    data notify( data.raceendnotify );
}

vehicle_occupancy_raceresults( vehicle, player, _id_FC7C7A874B43A31A, _id_7558F98F3236963D, data )
{
    if ( !isdefined( data.success ) )
        data.success = 1;

    if ( data.immediate )
    {
        data.playerdisconnect = scripts\engine\utility::ter_op( isdefined( player ), 0, 1 );

        if ( !data.playerdisconnect )
        {
            data.playerdeath = !player scripts\cp_mp\utility\player_utility::_isalive();
            data.playerlaststand = istrue( player.inlaststand );
        }

        data.vehicledeath = istrue( vehicle.isdestroyed );
    }
    else if ( data.success )
    {
        if ( isdefined( _id_FC7C7A874B43A31A ) && !istrue( data.exitstartcomplete ) )
            data.success = 0;

        if ( isdefined( _id_7558F98F3236963D ) && !istrue( data.enterstartcomplete ) )
            data.success = 0;

        if ( istrue( data.vehicledeath ) )
            data.success = 0;
    }
    else
        return 0;

    if ( isdefined( _id_7558F98F3236963D ) )
    {
        if ( istrue( data.playerdeath ) || istrue( data.playerlaststand ) || istrue( data.playerdisconnect ) || istrue( data.vehicledeath ) || istrue( data.seatunavailable ) )
            data.success = 0;
    }
    else
    {

    }

    return data.success;
}

vehicle_occupancy_watchowner( vehicle, player, _id_57C14BF60C5BE4AB, _id_13CC810B9974360E )
{
    player endon( "disconnect" );
    vehicle endon( "death" );
    vehicle endon( "vehicle_clear_owner_" + player getentitynumber() );

    if ( istrue( _id_57C14BF60C5BE4AB ) )
        player waittill( "vehicle_seat_exit" );

    _id_F86FB0E66B52EA3B = scripts\engine\utility::ter_op( isdefined( _id_13CC810B9974360E ), _id_13CC810B9974360E, 20 );
    wait( _id_F86FB0E66B52EA3B );
    thread vehicle_occupancy_clearowner( vehicle, player );
}

vehicle_occupancy_watchownerjoinedteam( vehicle, player )
{
    player endon( "disconnect" );
    vehicle endon( "death" );
    vehicle endon( "vehicle_owner_update" );
    player scripts\engine\utility::waittill_any_2( "joined_team", "joined_spectators" );
    thread vehicle_occupancy_updateowner( vehicle );
}

vehicle_occupancy_isplayervalidowner( vehicle, player )
{
    if ( !isdefined( player ) )
        return 0;

    if ( level.teambased && isdefined( vehicle.team ) )
    {
        if ( vehicle.team != "neutral" && player.team != vehicle.team )
            return 0;
    }
    else if ( isdefined( vehicle.originalowner ) )
    {
        if ( player != vehicle.originalowner )
            return 0;
    }

    return 1;
}

vehicle_occupancy_animateplayer( vehicle, seatid, _id_FC7C7A874B43A31A, _id_D5CC8B378F09BD04, _id_D65FF23EFE3B8AA9, _id_3F9690FB0C8EBC84 )
{
    _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, seatid );

    if ( !isdefined( _id_0C50B485A43752FD.animtag ) )
        return;

    if ( isdefined( _id_D65FF23EFE3B8AA9 ) || isdefined( _id_3F9690FB0C8EBC84 ) )
    {
        _id_D1C52700CB7DDBF3( _id_D65FF23EFE3B8AA9, _id_3F9690FB0C8EBC84 );
        thread _id_233275857335E4DC( 1 );
    }

    self cancelmantle();
    _id_F5724E9559001550 = 0;
    _id_C39487B3181A24DC = _id_0C50B485A43752FD.animtag;

    if ( issubstr( _id_C39487B3181A24DC, "tag_seat_" ) )
        _id_F5724E9559001550 = int( getsubstr( _id_C39487B3181A24DC, 9 ) );
    else if ( issubstr( _id_C39487B3181A24DC, "gunner_" ) )
        _id_F5724E9559001550 = int( getsubstr( _id_C39487B3181A24DC, 7 ) ) + 10 - 1;

    _id_A578A00ADA66FAA3 = !isdefined( seatid );
    _id_C9B87BEB89EC12E2( self, vehicle, _id_A578A00ADA66FAA3 );
    _id_21B63BA00FE0B7E3 = !isdefined( _id_FC7C7A874B43A31A ) && isdefined( seatid );
    vehicle vehicle_turnengineon();
    self usevehicle( vehicle, _id_F5724E9559001550, _id_21B63BA00FE0B7E3 );
}

_id_D1C52700CB7DDBF3( type, seat )
{
    self notify( "OverrideVehicleSeatAnimConditionals" );
    self overridevehicleseatanimconditionals( type, seat );
}

_id_233275857335E4DC( _id_CE091DA20E3C7335 )
{
    self endon( "death_or_disconnect" );
    self notify( "OverrideVehicleSeatAnimConditionals" );
    self endon( "OverrideVehicleSeatAnimConditionals" );

    if ( istrue( _id_CE091DA20E3C7335 ) )
        waitframe();

    self overridevehicleseatanimconditionals( "", 0 );
}

_id_EE4B8B879B1B120C()
{
    if ( istrue( self.isheli ) && self getscriptablehaspart( "Exhaust" ) )
        self setscriptablepartstate( "Exhaust", "off" );
}

_id_BA42CF4E5BB24367()
{
    _id_3E9C60D3D2B4ED07 = self getscriptablehaspart( "Exhaust" );
    _id_57638606B57E8776 = self getscriptablehaspart( "NaviLights" );

    if ( !_id_3E9C60D3D2B4ED07 && !_id_57638606B57E8776 )
        return;

    self endon( "death" );
    self notify( "stopHeliEffectsAfterTime" );
    self endon( "stopHeliEffectsAfterTime" );
    self._id_19169DA06F71A4F2 = "waitingToTurnOff";
    wait 6;

    while ( istrue( self.ishovering ) )
        wait 2;

    if ( !isdefined( self._id_19169DA06F71A4F2 ) || self._id_19169DA06F71A4F2 != "waitingToTurnOff" )
        return;

    self._id_19169DA06F71A4F2 = undefined;

    if ( _id_3E9C60D3D2B4ED07 && self getscriptablepartstate( "Exhaust" ) == "on" )
        self setscriptablepartstate( "Exhaust", "off" );

    if ( _id_57638606B57E8776 && self getscriptablepartstate( "NaviLights" ) == "on" )
        self setscriptablepartstate( "NaviLights", "off" );
}

_id_A91927DF280E94E4()
{
    if ( !isdefined( self._id_19169DA06F71A4F2 ) )
    {
        if ( self getscriptablehaspart( "Exhaust" ) && scripts\cp_mp\vehicles\vehicle_damage::vehicle_damage_getstate() == "pristine" && ( !isdefined( self._id_CF9BA498AF4E41E9 ) || self._id_CF9BA498AF4E41E9 > 0 ) )
            self setscriptablepartstate( "Exhaust", "on" );

        if ( self getscriptablehaspart( "NaviLights" ) )
            self setscriptablepartstate( "NaviLights", "on" );
    }

    self._id_19169DA06F71A4F2 = "playing";
}

_id_4E7868EF633F4B36()
{
    self endon( "death" );
    self endon( "unanchored" );

    while ( self vehicle_getspeed() > 2 )
        wait 0.2;

    self _meth_481C2A63F2BA3332( -1, 100 );
}

_id_3112242E4BC392DE()
{
    self notify( "unanchored" );
    self _meth_481C2A63F2BA3332( 0 );
}

_id_F654C168752ED299()
{
    return isdefined( self ) && self vehicle_isphysveh() && self _meth_76FA53E72547FF02();
}

vehicle_occupancy_allowmovement( vehicle, _id_E3108E412AFB3811, _id_FFB36A4B82C7AD04 )
{
    if ( _id_E3108E412AFB3811 )
    {
        vehicle.movementdisabled--;

        if ( vehicle.movementdisabled == 0 )
        {
            if ( isdefined( vehicle.occupants ) )
            {
                scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_hidewarning( "movementDisabled", vehicle.occupants, vehicle scripts\cp_mp\vehicles\vehicle::_id_D93EC4635290FEBD() );

                if ( vehicle _id_F654C168752ED299() )
                    vehicle _meth_64D8AE560C3EC9B6( 0 );
                else
                {
                    foreach ( seatid, _id_F85572CD5F6117C6 in vehicle.occupants )
                        vehicle_occupancy_allowmovementplayer( vehicle, _id_F85572CD5F6117C6, 1, seatid );
                }
            }

            return 1;
        }
    }
    else
    {
        if ( !isdefined( vehicle.movementdisabled ) )
            vehicle.movementdisabled = 0;

        vehicle.movementdisabled++;

        if ( vehicle.movementdisabled == 1 )
        {
            occupants = _id_0EFA75AA7F0A1289( vehicle );

            if ( isdefined( occupants ) )
            {
                if ( !isdefined( _id_FFB36A4B82C7AD04 ) || _id_FFB36A4B82C7AD04 == 1 )
                    scripts\cp_mp\utility\vehicle_omnvar_utility::vehomn_showwarning( "movementDisabled", occupants, vehicle scripts\cp_mp\vehicles\vehicle::_id_D93EC4635290FEBD() );

                if ( vehicle _id_F654C168752ED299() )
                {
                    vehicle _meth_64D8AE560C3EC9B6( 1 );
                    vehicle.veh_throttle = 0;
                }
                else
                {
                    foreach ( seatid, _id_F85572CD5F6117C6 in vehicle.occupants )
                        vehicle_occupancy_allowmovementplayer( vehicle, _id_F85572CD5F6117C6, 0, seatid );
                }
            }

            return 0;
        }
    }
}

vehicle_occupancy_clearallowmovement( vehicle )
{
    if ( vehicle _id_F654C168752ED299() )
        vehicle _meth_64D8AE560C3EC9B6( 0 );
    else if ( isdefined( vehicle.occupants ) )
    {
        foreach ( seatid, _id_F85572CD5F6117C6 in vehicle.occupants )
            vehicle_occupancy_allowmovementplayer( 1, _id_F85572CD5F6117C6, seatid );
    }

    vehicle.movementdisabled = undefined;
}

vehicle_occupancy_allowmovementplayer( vehicle, player, _id_E3108E412AFB3811, seatid )
{
    if ( _id_E3108E412AFB3811 )
    {
        if ( istrue( player.vehicledisabledmovement ) )
        {
            if ( player scripts\cp_mp\utility\player_utility::_isalive() )
                player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_occupancy" );

            player.vehicledisabledmovement = undefined;
        }
    }
    else
    {
        _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, seatid );

        if ( isdefined( _id_0C50B485A43752FD.animtag ) && _id_0C50B485A43752FD.animtag == "tag_seat_0" )
        {
            if ( !istrue( player.vehicledisabledmovement ) )
            {
                if ( player scripts\cp_mp\utility\player_utility::_isalive() )
                {
                    player _id_3B64EB40368C1450::set( "vehicle_occupancy", "allow_movement", 0 );
                    player.vehicledisabledmovement = 1;
                }
            }
        }
    }
}

vehicle_occupancy_clearallowmovementplayer( player, _id_FCEF8D217A441961 )
{
    if ( !istrue( _id_FCEF8D217A441961 ) && istrue( player.vehicledisabledmovement ) )
        player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_occupancy" );

    player.vehicledisabledmovement = undefined;
}

vehicle_occupancy_movementisallowed( vehicle )
{
    return !isdefined( vehicle.movementdisabled ) || vehicle.movementdisabled <= 0;
}

vehicle_occupancy_getexitpositionandangles( vehicle, player, seatid, allowairexit, _id_732C1A4DD3A04513, _id_FE757BF1A5D559B4 )
{
    exitboundinginfo = vehicle_occupancy_getexitboundinginfo( vehicle );
    _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, seatid );
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );

    if ( isdefined( _id_FE757BF1A5D559B4 ) )
    {
        _id_5580F4007EC05FC4 = seatid + _id_FE757BF1A5D559B4;
        _id_2B16A165170D3506 = _id_E2818AD39A3341B4.exitdirections[_id_5580F4007EC05FC4];
        position = vehicle_occupancy_getexitposition( vehicle, player, _id_5580F4007EC05FC4, exitboundinginfo, 1 );

        if ( isdefined( position ) )
        {
            angles = undefined;

            if ( !isdefined( _id_0C50B485A43752FD.animtag ) || _id_0C50B485A43752FD.animtag != "tag_seat_0" )
                angles = vehicle_occupancy_getexitangles( vehicle, player, _id_5580F4007EC05FC4, _id_732C1A4DD3A04513 );

            if ( _id_FE757BF1A5D559B4 == "_to_roof" )
                player notify( "roof_exit" );

            return [ position, angles, _id_FE757BF1A5D559B4, _id_2B16A165170D3506 ];
        }
    }

    _id_21D45F646111D24F = 0;

    foreach ( _id_11C87FAEC6F85F74 in _id_0C50B485A43752FD.exitids )
    {
        _id_5580F4007EC05FC4 = _id_11C87FAEC6F85F74._id_2B16A165170D3506;
        _id_2B16A165170D3506 = _id_E2818AD39A3341B4.exitdirections[_id_5580F4007EC05FC4];

        if ( _id_2B16A165170D3506 == "roof" || _id_2B16A165170D3506 == "dive" )
            continue;

        position = vehicle_occupancy_getexitposition( vehicle, player, _id_5580F4007EC05FC4, exitboundinginfo, allowairexit );

        if ( isdefined( position ) )
        {
            angles = undefined;

            if ( !isdefined( _id_0C50B485A43752FD.animtag ) || _id_0C50B485A43752FD.animtag != "tag_seat_0" )
                angles = vehicle_occupancy_getexitangles( vehicle, player, _id_5580F4007EC05FC4, _id_732C1A4DD3A04513 );

            return [ position, angles, undefined, _id_2B16A165170D3506 ];
        }
    }

    return undefined;
}

vehicle_occupancy_getexitposition( vehicle, player, _id_5580F4007EC05FC4, exitboundinginfo, allowairexit )
{
    if ( istrue( exitboundinginfo.exitsfailed[_id_5580F4007EC05FC4] ) )
        return undefined;

    if ( isdefined( exitboundinginfo.exitpositions[_id_5580F4007EC05FC4] ) )
        return exitboundinginfo.exitpositions[_id_5580F4007EC05FC4];

    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );
    _id_7862C7C7ADE2B42E = _id_E2818AD39A3341B4.exitoffsets[_id_5580F4007EC05FC4];
    _id_2B16A165170D3506 = _id_E2818AD39A3341B4.exitdirections[_id_5580F4007EC05FC4];

    if ( _id_2B16A165170D3506 == "roof" )
    {
        exitposition = vehicle.origin + rotatevector( _id_7862C7C7ADE2B42E, vehicle.angles );
        exitboundinginfo.exitpositions[_id_5580F4007EC05FC4] = exitposition;
        return exitposition;
    }

    contents = physics_createcontents( [ "physicscontents_item", "physicscontents_glass", "physicscontents_vehicle", "physicscontents_playerclip" ] );
    ignorelist = [];

    foreach ( ent in vehicle getlinkedchildren( 1 ) )
    {
        if ( !isplayer( ent ) )
            ignorelist[ignorelist.size] = ent;
    }

    ignorelist[ignorelist.size] = vehicle;
    ignorelist[ignorelist.size] = player;

    if ( _id_2B16A165170D3506 == "inside" || _id_2B16A165170D3506 == "dive" )
    {
        caststart = vehicle.origin + rotatevector( _id_7862C7C7ADE2B42E, vehicle.angles );
        castend = caststart;
        castend = _id_FE33F8F45B65696E( player, caststart, castend, ignorelist, allowairexit, _id_2B16A165170D3506 );

        if ( !isdefined( castend ) )
        {
            exitboundinginfo.exitsfailed[_id_5580F4007EC05FC4] = 1;
            return;
        }

        exitboundinginfo.exitpositions[_id_5580F4007EC05FC4] = castend;
        return castend;
    }

    exittopcastoffset = scripts\engine\utility::ter_op( isdefined( _id_E2818AD39A3341B4.exittopcastoffset ), _id_E2818AD39A3341B4.exittopcastoffset, 20 );
    _id_A3F1B22369929922 = _id_7862C7C7ADE2B42E[0];
    _id_A3F1B22369929922 = clamp( _id_A3F1B22369929922, exitboundinginfo.offsets["back"], exitboundinginfo.offsets["front"] );
    _id_A3F1B32369929B55 = scripts\engine\utility::ter_op( exitboundinginfo.flipleftright, _id_7862C7C7ADE2B42E[1] * -1, _id_7862C7C7ADE2B42E[1] );
    _id_A3F1B32369929B55 = clamp( _id_A3F1B32369929B55, exitboundinginfo.offsets["right"], exitboundinginfo.offsets["left"] );
    _id_74E1FBEF334A1E72 = ( 0, vehicle.angles[1], 0 );
    caststart = vehicle.origin;
    caststart = caststart + _id_A3F1B22369929922 * anglestoforward( _id_74E1FBEF334A1E72 );
    caststart = caststart + _id_A3F1B32369929B55 * anglestoright( _id_74E1FBEF334A1E72 );
    _id_1C273E2879D842FD = exitboundinginfo.offsets["bottom"] + ( exitboundinginfo.offsets["top"] - exitboundinginfo.offsets["bottom"] ) / 2;

    if ( _id_2B16A165170D3506 == "top" )
        _id_1C273E2879D842FD = exitboundinginfo.offsets["top"] + 72 + exittopcastoffset;

    _id_330D2A18C3901424 = exitboundinginfo.offsets["top"] + exittopcastoffset;
    _id_DAE1D7CF43D6690E = undefined;
    _id_41A388AFBF92867B = undefined;
    castend = caststart + ( 0, 0, _id_330D2A18C3901424 );
    caststart = caststart + ( 0, 0, _id_1C273E2879D842FD );
    _id_8644A2CC8CD47B66 = "tag_body_animate";

    if ( !vehicle tagexists( _id_8644A2CC8CD47B66 ) )
        _id_8644A2CC8CD47B66 = "tag_body";

    _id_6B051C16C0678276 = vehicle gettagorigin( _id_8644A2CC8CD47B66 );
    _id_DE8DE34672903D23 = 0;
    _id_E021C2744CC7ED68 = physics_raycast( _id_6B051C16C0678276, caststart, contents, ignorelist, 0, "physicsquery_closest", 1 );

    if ( isdefined( _id_E021C2744CC7ED68 ) && _id_E021C2744CC7ED68.size > 0 )
        _id_DE8DE34672903D23 = 1;

    if ( _id_DE8DE34672903D23 )
        exitboundinginfo.exitsfailed[_id_5580F4007EC05FC4] = 1;
    else
    {
        _id_DE8DE34672903D23 = 0;
        _id_E021C2744CC7ED68 = physics_raycast( caststart, castend, contents, ignorelist, 0, "physicsquery_closest", 1 );

        if ( isdefined( _id_E021C2744CC7ED68 ) && _id_E021C2744CC7ED68.size > 0 )
        {
            _id_750C94BA41F40A47 = 2;
            _id_83432A35E8D5340D = ( _id_330D2A18C3901424 - _id_1C273E2879D842FD ) * _id_E021C2744CC7ED68[0]["fraction"];

            if ( _id_83432A35E8D5340D <= 72 + _id_750C94BA41F40A47 )
                _id_DE8DE34672903D23 = 1;
            else
                castend = _id_E021C2744CC7ED68[0]["position"] - ( 0, 0, _id_750C94BA41F40A47 );
        }

        if ( _id_DE8DE34672903D23 )
        {
            exitboundinginfo.exitsfailed[_id_5580F4007EC05FC4] = 1;
            return;
        }

        _id_2B16A165170D3506 = tolower( _id_2B16A165170D3506 );

        if ( exitboundinginfo.flipleftright )
        {
            if ( _id_2B16A165170D3506 == "left" )
                _id_2B16A165170D3506 = "right";
            else if ( _id_2B16A165170D3506 == "right" )
                _id_2B16A165170D3506 = "left";
        }

        caststart = castend;
        _id_7983980C1B0BF150 = ( 0, 0, 0 );
        _id_91557455EEB0423D = ( 0, 0, 0 );
        _id_0D1D1B2751FEA9BA = ( 0, 0, 0 );
        _id_5EF9E6993DF92A2E = ( 0, 0, 0 );
        _id_D99FEE6EA320BB53 = ( 0, 0, 0 );
        _id_3D15F366F4AD67E8 = ( 0, 0, 0 );
        _id_91557455EEB0423D = ( 0, 0, _id_330D2A18C3901424 );

        if ( _id_2B16A165170D3506 == "left" )
        {
            _id_7983980C1B0BF150 = _id_7983980C1B0BF150 + ( _id_A3F1B22369929922, 0, 0 );
            _id_7983980C1B0BF150 = _id_7983980C1B0BF150 + ( 0, exitboundinginfo.offsets["left"], 0 );
            _id_5EF9E6993DF92A2E = _id_5EF9E6993DF92A2E + ( 0, 32, 0 );
        }
        else if ( _id_2B16A165170D3506 == "right" )
        {
            _id_7983980C1B0BF150 = _id_7983980C1B0BF150 + ( _id_A3F1B22369929922, 0, 0 );
            _id_7983980C1B0BF150 = _id_7983980C1B0BF150 + ( 0, exitboundinginfo.offsets["right"], 0 );
            _id_5EF9E6993DF92A2E = _id_5EF9E6993DF92A2E + ( 0, -32, 0 );
        }
        else if ( _id_2B16A165170D3506 == "front" )
        {
            _id_7983980C1B0BF150 = _id_7983980C1B0BF150 + ( exitboundinginfo.offsets["front"], 0, 0 );
            _id_7983980C1B0BF150 = _id_7983980C1B0BF150 + ( 0, _id_A3F1B32369929B55, 0 );
            _id_5EF9E6993DF92A2E = _id_5EF9E6993DF92A2E + ( 32, 0, 0 );
        }
        else if ( _id_2B16A165170D3506 == "back" )
        {
            _id_7983980C1B0BF150 = _id_7983980C1B0BF150 + ( exitboundinginfo.offsets["back"], 0, 0 );
            _id_7983980C1B0BF150 = _id_7983980C1B0BF150 + ( 0, _id_A3F1B32369929B55, 0 );
            _id_5EF9E6993DF92A2E = _id_5EF9E6993DF92A2E + ( -32, 0, 0 );
        }
        else if ( _id_2B16A165170D3506 == "top" )
        {
            _id_7983980C1B0BF150 = _id_7983980C1B0BF150 + ( _id_A3F1B22369929922, _id_A3F1B32369929B55, 0 );
            _id_5EF9E6993DF92A2E = _id_5EF9E6993DF92A2E + ( 0, 0, 0 );
            _id_91557455EEB0423D = ( 0, 0, exitboundinginfo.offsets["top"] + 72 );
        }

        _id_0D1D1B2751FEA9BA = _id_7983980C1B0BF150 + _id_91557455EEB0423D;
        _id_3D15F366F4AD67E8 = _id_5EF9E6993DF92A2E;
        caststart = castend;
        castend = vehicle.origin + rotatevector( _id_0D1D1B2751FEA9BA + _id_3D15F366F4AD67E8, _id_74E1FBEF334A1E72 );
        _id_DE8DE34672903D23 = 0;
        _id_E021C2744CC7ED68 = physics_raycast( caststart, castend, contents, ignorelist, 0, "physicsquery_closest", 1 );

        if ( isdefined( _id_E021C2744CC7ED68 ) && _id_E021C2744CC7ED68.size > 0 )
            _id_DE8DE34672903D23 = 1;

        if ( _id_DE8DE34672903D23 )
        {
            exitboundinginfo.exitsfailed[_id_5580F4007EC05FC4] = 1;
            return;
        }

        _id_5EF9E6993DF92A2E = _id_5EF9E6993DF92A2E / 2;
        _id_D99FEE6EA320BB53 = ( 0, 0, -72 );
        _id_3D15F366F4AD67E8 = _id_5EF9E6993DF92A2E + _id_D99FEE6EA320BB53;
        _id_91557455EEB0423D = ( 0, 0, exitboundinginfo.offsets["top"] + exittopcastoffset );

        if ( _id_2B16A165170D3506 == "top" )
            _id_91557455EEB0423D = ( 0, 0, exitboundinginfo.offsets["top"] + 72 );

        _id_0D1D1B2751FEA9BA = _id_7983980C1B0BF150 + _id_91557455EEB0423D;
        caststart = vehicle.origin + rotatevector( _id_0D1D1B2751FEA9BA + _id_3D15F366F4AD67E8, _id_74E1FBEF334A1E72 );
        _id_91557455EEB0423D = ( 0, 0, exitboundinginfo.offsets["bottom"] ) - ( 0, 0, 40 );

        if ( _id_2B16A165170D3506 == "top" )
            _id_91557455EEB0423D = ( 0, 0, exitboundinginfo.offsets["top"] );

        _id_0D1D1B2751FEA9BA = _id_7983980C1B0BF150 + _id_91557455EEB0423D;
        _id_D99FEE6EA320BB53 = ( 0, 0, 0 );
        _id_3D15F366F4AD67E8 = _id_5EF9E6993DF92A2E + _id_D99FEE6EA320BB53;
        castend = vehicle.origin + rotatevector( _id_0D1D1B2751FEA9BA + _id_3D15F366F4AD67E8, _id_74E1FBEF334A1E72 );
        castend = _id_FE33F8F45B65696E( player, caststart, castend, ignorelist, allowairexit, _id_2B16A165170D3506 );

        if ( !isdefined( castend ) )
        {
            exitboundinginfo.exitsfailed[_id_5580F4007EC05FC4] = 1;
            return;
        }

        exitboundinginfo.exitpositions[_id_5580F4007EC05FC4] = castend;
    }
}

_id_136FEA30DBEDCE0F( vehicle, player, origin )
{
    ignorelist = [];

    foreach ( ent in vehicle getlinkedchildren( 1 ) )
    {
        if ( !isplayer( ent ) )
            ignorelist[ignorelist.size] = ent;
    }

    ignorelist[ignorelist.size] = vehicle;
    castend = origin;
    castend = _id_FE33F8F45B65696E( player, origin, castend, ignorelist, 1, "inside" );
    return isdefined( castend );
}

_id_FE33F8F45B65696E( player, caststart, castend, ignorelist, allowairexit, _id_2B16A165170D3506, exitboundinginfo, _id_5580F4007EC05FC4 )
{
    _id_DE8DE34672903D23 = 0;
    _id_DAE1D7CF43D6690E = undefined;
    _id_41A388AFBF92867B = undefined;
    contents = physics_createcontents( [ "physicscontents_item", "physicscontents_glass", "physicscontents_vehicle", "physicscontents_playerclip", "physicscontents_characterproxy" ] );
    _id_E021C2744CC7ED68 = physics_charactercast( caststart, castend, player, 0, ( 0, 0, 0 ), contents, ignorelist, "physicsquery_closest", "physicsquery_any" );

    if ( isdefined( _id_E021C2744CC7ED68 ) && _id_E021C2744CC7ED68.size > 0 )
    {
        if ( _id_E021C2744CC7ED68[1] )
            _id_DE8DE34672903D23 = 1;
        else if ( _id_E021C2744CC7ED68[0].size == 0 )
        {
            if ( !istrue( allowairexit ) )
                _id_DE8DE34672903D23 = 1;
            else if ( _id_2B16A165170D3506 != "top" && _id_2B16A165170D3506 != "roof" && _id_2B16A165170D3506 != "inside" )
                castend = castend + ( 0, 0, 40 );
        }
        else
            castend = _id_E021C2744CC7ED68[0][0]["shape_position"];
    }

    if ( _id_DE8DE34672903D23 )
        return undefined;

    return castend;
}

vehicle_occupancy_getexitboundinginfo( vehicle )
{
    exitboundinginfo = undefined;

    if ( isdefined( vehicle.exitboundinginfo ) && vehicle.exitboundinginfo.timestamp == gettime() )
        exitboundinginfo = vehicle.exitboundinginfo;
    else
    {
        _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );

        if ( isdefined( _id_E2818AD39A3341B4 ) && isdefined( _id_E2818AD39A3341B4.exitextents ) )
        {
            angles = vehicle.angles;
            _id_35A43F1D588A99BC = rotatevector( ( _id_E2818AD39A3341B4.exitextents["front"], _id_E2818AD39A3341B4.exitextents["left"] * -1, _id_E2818AD39A3341B4.exitextents["top"] ), angles );
            _id_2E27BD18DFE68565 = rotatevector( ( _id_E2818AD39A3341B4.exitextents["front"], _id_E2818AD39A3341B4.exitextents["right"], _id_E2818AD39A3341B4.exitextents["top"] ), angles );
            _id_3034B10EE587F92E = rotatevector( ( _id_E2818AD39A3341B4.exitextents["back"] * -1, _id_E2818AD39A3341B4.exitextents["left"] * -1, _id_E2818AD39A3341B4.exitextents["top"] ), angles );
            _id_23F57BE14A18A221 = rotatevector( ( _id_E2818AD39A3341B4.exitextents["back"] * -1, _id_E2818AD39A3341B4.exitextents["right"], _id_E2818AD39A3341B4.exitextents["top"] ), angles );
            _id_5DE23E0BAFEEEB6A = rotatevector( ( _id_E2818AD39A3341B4.exitextents["front"], _id_E2818AD39A3341B4.exitextents["left"] * -1, _id_E2818AD39A3341B4.exitextents["bottom"] * -1 ), angles );
            _id_F5245E120DE48DB3 = rotatevector( ( _id_E2818AD39A3341B4.exitextents["front"], _id_E2818AD39A3341B4.exitextents["right"], _id_E2818AD39A3341B4.exitextents["bottom"] * -1 ), angles );
            _id_2FEBBCB4C37B3B64 = rotatevector( ( _id_E2818AD39A3341B4.exitextents["back"] * -1, _id_E2818AD39A3341B4.exitextents["left"] * -1, _id_E2818AD39A3341B4.exitextents["bottom"] * -1 ), angles );
            _id_3A64B6F876A6B09F = rotatevector( ( _id_E2818AD39A3341B4.exitextents["back"] * -1, _id_E2818AD39A3341B4.exitextents["right"], _id_E2818AD39A3341B4.exitextents["bottom"] * -1 ), angles );
            points = [ _id_35A43F1D588A99BC, _id_2E27BD18DFE68565, _id_3034B10EE587F92E, _id_23F57BE14A18A221, _id_5DE23E0BAFEEEB6A, _id_F5245E120DE48DB3, _id_2FEBBCB4C37B3B64, _id_3A64B6F876A6B09F ];
            _id_12EA3927E1B44942 = -99999;
            _id_EE041CBC1E1F4C1C = 99999;
            _id_16B7A2FE1CBCDDCA = -99999;
            _id_8E6D35A0C2CD0B37 = 99999;
            _id_5D4D3E8B839C896A = -99999;
            _id_EE77C08BEE0DF950 = 99999;
            _id_74E1FBEF334A1E72 = ( 0, angles[1], 0 );

            foreach ( point in points )
            {
                point = rotatevectorinverted( point, _id_74E1FBEF334A1E72 );

                if ( point[0] > _id_12EA3927E1B44942 )
                    _id_12EA3927E1B44942 = point[0];

                if ( point[0] < _id_EE041CBC1E1F4C1C )
                    _id_EE041CBC1E1F4C1C = point[0];

                if ( point[1] < _id_8E6D35A0C2CD0B37 )
                    _id_8E6D35A0C2CD0B37 = point[1];

                if ( point[1] > _id_16B7A2FE1CBCDDCA )
                    _id_16B7A2FE1CBCDDCA = point[1];

                if ( point[2] > _id_5D4D3E8B839C896A )
                    _id_5D4D3E8B839C896A = point[2];

                if ( point[2] < _id_EE77C08BEE0DF950 )
                    _id_EE77C08BEE0DF950 = point[2];
            }

            exitboundinginfo = spawnstruct();
            vehicle.exitboundinginfo = exitboundinginfo;
            exitboundinginfo = exitboundinginfo;
            exitboundinginfo.vehicle = vehicle;
            exitboundinginfo.timestamp = gettime();
            exitboundinginfo.offsets["front"] = _id_12EA3927E1B44942;
            exitboundinginfo.offsets["back"] = _id_EE041CBC1E1F4C1C;
            exitboundinginfo.offsets["left"] = _id_16B7A2FE1CBCDDCA;
            exitboundinginfo.offsets["right"] = _id_8E6D35A0C2CD0B37;
            exitboundinginfo.offsets["top"] = _id_5D4D3E8B839C896A;
            exitboundinginfo.offsets["bottom"] = _id_EE77C08BEE0DF950;
            exitboundinginfo.exitsfailed = [];
            exitboundinginfo.exitpositions = [];
            exitboundinginfo.orientedboxpoints = [];
            exitboundinginfo.unorientedboxpoints = [];
            exitboundinginfo.flipleftright = abs( angleclamp180( angles[2] ) ) > 90;
            exitboundinginfo thread vehicle_cleanupexitboundinginfo();
        }
    }

    return exitboundinginfo;
}

vehicle_cleanupexitboundinginfo()
{
    waitframe();

    if ( isdefined( self.vehicle ) )
        return;

    if ( !isdefined( self.vehicle.exitboundinginfo ) )
        return;

    if ( self.vehicle.exitboundinginfo.timestamp != self.timestamp )
        return;

    self.vehicle.exitboundinginfo = undefined;
}

vehicle_occupancy_getexitangles( vehicle, player, _id_5580F4007EC05FC4, _id_732C1A4DD3A04513 )
{
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );
    exitboundinginfo = vehicle_occupancy_getexitboundinginfo( vehicle );
    exitposition = exitboundinginfo.exitpositions[_id_5580F4007EC05FC4];
    _id_C06551440B16249C = undefined;
    _id_DE0520C7C9450953 = 0;

    if ( istrue( _id_732C1A4DD3A04513 ) )
    {
        _id_C06551440B16249C = vehicle.origin + rotatevector( _id_E2818AD39A3341B4.exitoffsets[_id_5580F4007EC05FC4], vehicle.angles );
        _id_DE0520C7C9450953 = 1;
    }

    if ( !isdefined( _id_C06551440B16249C ) )
        _id_C06551440B16249C = player getvieworigin() + anglestoforward( player getplayerangles() ) * 550;

    _id_95EE9A642DBEA4CF = undefined;

    if ( istrue( _id_732C1A4DD3A04513 ) )
        _id_95EE9A642DBEA4CF = exitposition + ( 0, 0, 22 );
    else
        _id_95EE9A642DBEA4CF = exitposition + ( 0, 0, 60 );

    _id_6A8A4307EF24181D = vectornormalize( _id_C06551440B16249C - _id_95EE9A642DBEA4CF );

    if ( !_id_DE0520C7C9450953 )
    {
        contents = physics_createcontents( [ "physicscontents_vehicle", "physicscontents_item" ] );
        _id_E021C2744CC7ED68 = physics_raycast( _id_95EE9A642DBEA4CF, _id_95EE9A642DBEA4CF + _id_6A8A4307EF24181D * 300, contents, undefined, 0, "physicsquery_closest", 1 );

        if ( isdefined( _id_E021C2744CC7ED68 ) && _id_E021C2744CC7ED68.size > 0 )
        {
            _id_1D9FB21B4F3023F3 = _id_E021C2744CC7ED68[0]["entity"];
            _id_899FD7301D5E9FCC = 0;

            if ( isdefined( _id_1D9FB21B4F3023F3 ) )
            {
                _id_00B404AAB7D45C92 = vehicle getlinkedchildren( 1 );

                if ( !isdefined( _id_00B404AAB7D45C92 ) )
                    _id_00B404AAB7D45C92 = [];

                _id_00B404AAB7D45C92[_id_00B404AAB7D45C92.size] = vehicle;

                foreach ( ent in _id_00B404AAB7D45C92 )
                {
                    if ( _id_1D9FB21B4F3023F3 == ent )
                    {
                        _id_899FD7301D5E9FCC = 1;
                        break;
                    }
                }
            }

            if ( _id_899FD7301D5E9FCC )
            {
                _id_2B16A165170D3506 = _id_E2818AD39A3341B4.exitdirections[_id_5580F4007EC05FC4];
                angles = ( 0, vehicle.angles[1], 0 );

                if ( _id_2B16A165170D3506 == "left" || _id_2B16A165170D3506 == "right" )
                    _id_0109BACEBD7AB9A8 = anglestoright( angles );
                else
                    _id_0109BACEBD7AB9A8 = anglestoforward( angles );

                _id_6A8A4307EF24181D = _id_6A8A4307EF24181D - _id_0109BACEBD7AB9A8 * vectordot( _id_6A8A4307EF24181D, _id_0109BACEBD7AB9A8 );
            }
        }
    }

    _id_8C57EF0D95A6EE0C = vectortoangles( _id_6A8A4307EF24181D );
    _id_8C57EF0D95A6EE0C = ( clamp( _id_8C57EF0D95A6EE0C[0], -12, 12 ), _id_8C57EF0D95A6EE0C[1], 0 );
    return _id_8C57EF0D95A6EE0C;
}

vehicle_occupancy_getfallbackexitpositionandangles( vehicle, player, data )
{
    _id_1C4C151526A1A9B4 = vectordot( ( 0, 0, 1 ), anglestoup( vehicle.angles ) ) < 0;
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );
    _id_D2666395E6CF4732 = undefined;
    _id_2B58E9F9E67DE0A5 = undefined;

    if ( _id_1C4C151526A1A9B4 )
    {
        if ( !isdefined( _id_E2818AD39A3341B4.exitfallbackoffsetinverted ) )
            return undefined;

        _id_D2666395E6CF4732 = _id_E2818AD39A3341B4.exitfallbackoffsetinverted;
        _id_2B58E9F9E67DE0A5 = anglestoup( vehicle.angles ) * -1;
    }
    else
    {
        if ( !isdefined( _id_E2818AD39A3341B4.exitfallbackoffset ) )
            return undefined;

        _id_D2666395E6CF4732 = _id_E2818AD39A3341B4.exitfallbackoffset;
        _id_2B58E9F9E67DE0A5 = anglestoup( vehicle.angles );
    }

    contents = vehicle_occupancy_getexitcastcontents();
    ignorelist = vehicle_occupancy_getexitcastignorelist( vehicle );
    caststart = vehicle.origin + _id_2B58E9F9E67DE0A5 * _id_D2666395E6CF4732;
    _id_E021C2744CC7ED68 = physics_getclosestpointtocapsule( caststart, 16, 36, ( 0, 0, 0 ), 0, contents, ignorelist, "physicsquery_closest" );

    if ( !isdefined( _id_E021C2744CC7ED68 ) || _id_E021C2744CC7ED68.size <= 0 )
        return [ caststart, vehicle.angles * ( 0, 1, 0 ) ];
    else
        return undefined;
}

vehicle_occupancy_findplayerexit( player, vehicle, _id_FC7C7A874B43A31A, _id_7558F98F3236963D, data, _id_FE757BF1A5D559B4 )
{
    if ( !isdefined( player ) || isdefined( _id_7558F98F3236963D ) || istrue( data.playerdeath ) && !istrue( data.playerlaststand ) )
        return 1;

    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );
    allowairexit = istrue( _id_E2818AD39A3341B4.allowairexit ) || istrue( data.allowairexit ) || !vehicle vehicle_isonground();
    _id_29187EC6E45D7481 = vehicle_occupancy_getexitpositionandangles( vehicle, player, _id_FC7C7A874B43A31A, allowairexit, data.playerlaststand, _id_FE757BF1A5D559B4 );

    if ( isdefined( _id_29187EC6E45D7481 ) )
    {
        data.exitposition = _id_29187EC6E45D7481[0];
        data.exitangles = _id_29187EC6E45D7481[1];
        data._id_FE757BF1A5D559B4 = _id_29187EC6E45D7481[2];
        data._id_2B16A165170D3506 = _id_29187EC6E45D7481[3];
        data._id_7862C7C7ADE2B42E = rotatevectorinverted( data.exitposition - vehicle.origin, vehicle.angles );
        return 1;
    }
    else
        return 0;
}

_id_A24042975031E692()
{
    if ( isdefined( self.vehiclename ) )
    {
        _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( self.vehiclename );
        return isdefined( _id_E2818AD39A3341B4 ) && isdefined( _id_E2818AD39A3341B4.exitextents ) && isdefined( _id_E2818AD39A3341B4.exitextents["front"] ) && isdefined( _id_E2818AD39A3341B4.exitextents["back"] ) && isdefined( _id_E2818AD39A3341B4.exitextents["left"] ) && isdefined( _id_E2818AD39A3341B4.exitextents["right"] ) && isdefined( _id_E2818AD39A3341B4.exitextents["top"] ) && isdefined( _id_E2818AD39A3341B4.exitextents["bottom"] );
    }

    return 0;
}

_id_9D86FD9A89CD2702( player, vehicle )
{
    if ( !isdefined( player ) || !isdefined( vehicle ) || !isdefined( player.origin ) || !isdefined( vehicle.origin ) || !isdefined( vehicle.angles ) )
        return [ undefined, undefined ];

    data = vehicle_occupancy_getleveldataforvehicle( vehicle scripts\cp_mp\vehicles\vehicle::_id_D93EC4635290FEBD() );
    _id_51552A03A376D4E6 = [];

    foreach ( ref, offset in data.exitoffsets )
    {
        dir = data.exitdirections[ref];
        _id_9F925F5509626DF1 = spawnstruct();
        _id_9F925F5509626DF1.ref = ref;
        _id_9F925F5509626DF1.dir = dir;
        _id_9F925F5509626DF1.origin = vehicle.origin + rotatevector( offset, vehicle.angles );
        _id_51552A03A376D4E6[_id_51552A03A376D4E6.size] = _id_9F925F5509626DF1;
    }

    _id_51552A03A376D4E6 = sortbydistance( _id_51552A03A376D4E6, player.origin );
    exitboundinginfo = vehicle_occupancy_getexitboundinginfo( vehicle );

    foreach ( _id_9F925F5509626DF1 in _id_51552A03A376D4E6 )
    {
        if ( _id_9F925F5509626DF1.dir == "top" || _id_9F925F5509626DF1.dir == "inside" || _id_9F925F5509626DF1.dir == "roof" )
            continue;

        position = vehicle_occupancy_getexitposition( vehicle, player, _id_9F925F5509626DF1.ref, exitboundinginfo, 1 );

        if ( isdefined( position ) )
            return [ position, _id_9F925F5509626DF1.dir ];
    }

    foreach ( _id_9F925F5509626DF1 in _id_51552A03A376D4E6 )
    {
        if ( _id_9F925F5509626DF1.dir != "top" && _id_9F925F5509626DF1.dir != "inside" && _id_9F925F5509626DF1.dir != "roof" )
            continue;

        position = vehicle_occupancy_getexitposition( vehicle, player, _id_9F925F5509626DF1.ref, exitboundinginfo, 1 );

        if ( isdefined( position ) )
            return [ position, _id_9F925F5509626DF1.dir ];
    }

    return [ undefined, undefined ];
}

vehicle_occupancy_moveplayertoexit( vehicle, seatid, _id_7558F98F3236963D, player, data )
{
    if ( !isdefined( player ) || istrue( data.playerdeath ) && !istrue( data.playerlaststand ) || isdefined( _id_7558F98F3236963D ) )
    {
        if ( isdefined( player ) && !isdefined( _id_7558F98F3236963D ) )
        {
            _id_C9B87BEB89EC12E2( player, vehicle, !isdefined( _id_7558F98F3236963D ) );
            player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_roof_exit" );
            player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_occupant_common" );
        }

        return 1;
    }

    _id_12AE002F8D36036F = undefined;

    if ( isdefined( data._id_7862C7C7ADE2B42E ) )
        _id_12AE002F8D36036F = vehicle.origin + rotatevector( data._id_7862C7C7ADE2B42E, vehicle.angles );

    if ( isdefined( _id_12AE002F8D36036F ) && _id_136FEA30DBEDCE0F( vehicle, player, _id_12AE002F8D36036F ) )
        exitposition = _id_12AE002F8D36036F;
    else
        exitposition = data.exitposition;

    if ( isdefined( exitposition ) )
    {
        if ( isdefined( data._id_FE757BF1A5D559B4 ) )
        {
            if ( data._id_FE757BF1A5D559B4 == "_to_roof" )
                _id_AEA8BD0571B7A840( player, vehicle, seatid, data );
            else
            {
                player _meth_2E8DE69E35A63F1D();
                player _meth_C0505F05660D120C( 0, 1 );
                player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_roof_exit" );
                player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_occupant_common" );
            }
        }
        else
        {
            _id_C9B87BEB89EC12E2( player, vehicle, !isdefined( _id_7558F98F3236963D ) );
            player dontinterpolate();

            if ( data._id_2B16A165170D3506 == "inside" || data._id_2B16A165170D3506 == "top" )
                player _meth_0A055801DA45D769( exitposition, vehicle );
            else
                player setorigin( exitposition, 1, 1 );

            player setstance( "stand" );

            if ( isdefined( data.exitangles ) )
                player setplayerangles( data.exitangles );

            player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_roof_exit" );
            player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_occupant_common" );
        }

        return 1;
    }
    else
    {
        _id_C9B87BEB89EC12E2( player, vehicle, !isdefined( _id_7558F98F3236963D ) );
        player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_roof_exit" );
        player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_occupant_common" );
        return 0;
    }
}

_id_AEA8BD0571B7A840( player, vehicle, seatid, data )
{
    _id_7731ADEF63E19B0C = vehicle scripts\cp_mp\vehicles\vehicle::_id_D93EC4635290FEBD();
    _id_2E7B44E2B456F504 = vehicle_occupancy_getleveldataforvehicle( _id_7731ADEF63E19B0C );

    if ( _id_2E7B44E2B456F504._id_C08D88C04569A00B == "animated" )
        _id_C9E915E56C1B6170 = player _meth_E5D1AE0CF82E3E7A() + ( 0, 0, 18 );
    else
    {
        offset = _id_2E7B44E2B456F504.exitoffsets[seatid + "_to_roof"];
        _id_C9E915E56C1B6170 = vehicle.origin + rotatevector( offset, vehicle.angles );
    }

    _id_C9B87BEB89EC12E2( player, vehicle, 1 );
    player thread scripts\cp_mp\vehicles\vehicle::vehicle_preventplayercollisiondamagefortimeafterexit( vehicle, player );
    stance = scripts\engine\utility::ter_op( _id_2E7B44E2B456F504._id_C08D88C04569A00B == "stand_up", "stand", "crouch" );

    if ( isbot( player ) )
        player botsetstance( stance );

    player setstance( stance, 1, 1, 1 );
    player dontinterpolate();
    player _meth_0A055801DA45D769( _id_C9E915E56C1B6170, vehicle );
    player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_occupant_common" );
    player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicle_roof_exit" );
}

_id_C5819749DB1604F5( player, vehicle, seatid, data )
{
    _id_7731ADEF63E19B0C = vehicle scripts\cp_mp\vehicles\vehicle::_id_D93EC4635290FEBD();
    _id_2E7B44E2B456F504 = vehicle_occupancy_getleveldataforvehicle( _id_7731ADEF63E19B0C );

    if ( !isdefined( _id_2E7B44E2B456F504._id_C08D88C04569A00B ) )
        return;

    vehicle thread _id_7F925D6914FA15CC( 8000 );

    if ( _id_2E7B44E2B456F504._id_C08D88C04569A00B == "animated" )
    {
        player endon( "death_or_disconnect" );
        player endon( "last_stand_start" );
        player endon( "vehicle_roof_exit_collision_detected" );
        vehicle endon( "death" );
        player _id_3B64EB40368C1450::_id_59C053B89257BC95( "vehicle_roof_exit", [ "script_weapon_switch", "weapon_switch", "melee", "vehicle_seat_switch", "allow_movement" ], 0 );
        player _meth_47A2FC8FDEEDA75F();
        endtime = gettime() + scripts\engine\utility::ter_op( player _meth_A7DE57196F4B5D16(), level._id_ABE9BCB8A67FF917, level._id_D9DC5B053FB57856 );

        while ( !player _meth_D09168B16803F5BE() && gettime() < endtime )
            waitframe();

        while ( player _meth_D09168B16803F5BE() && gettime() < endtime )
            waitframe();
    }

    return 1;
}

_id_7F925D6914FA15CC( time )
{
    self notify( "maintainSpeedForTime" );
    self endon( "maintainSpeedForTime" );

    if ( vectordot( self vehicle_getvelocity(), anglestoforward( self.angles ) ) < 0 || self vehicle_getspeed() < 5 )
        return;

    self endon( "death" );
    self._id_6179B2EEA75DBFE0 = 1;
    self _meth_6A325F91941ED47C( "player" );
    self _meth_D2E41C7603BA7697( "p2p" );
    maxspeed = self vehicle_getspeed();
    endtime = gettime() + time;

    while ( gettime() < endtime && istrue( self._id_6179B2EEA75DBFE0 ) && self vehicle_getspeed() > 5 )
    {
        self _meth_77320E794D35465A( "p2p", "manualSpeed", scripts\engine\utility::mph_to_ips( min( maxspeed, self vehicle_getspeed() ) ) );
        self _meth_77320E794D35465A( "p2p", "goalPoint", self.origin + anglestoforward( self.angles ) * 2000 );
        waitframe();
    }

    if ( !istrue( self._id_6179B2EEA75DBFE0 ) )
        return;

    _id_9A816E66A02DDB40();
}

_id_9A816E66A02DDB40()
{
    self._id_6179B2EEA75DBFE0 = undefined;
    self _meth_77320E794D35465A( "p2p", "manualSpeed", 0 );
    self _meth_6A325F91941ED47C( "p2p" );
}

vehicle_occupancy_getexitcastcontents()
{
    return physics_createcontents( [ "physicscontents_glass", "physicscontents_water", "physicscontents_item", "physicscontents_vehicle", "physicscontents_playerclip" ] );
}

vehicle_occupancy_getexitcastignorelist( vehicle )
{
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( vehicle.vehiclename );
    ignorelist = [ vehicle ];

    if ( isdefined( _id_E2818AD39A3341B4.exitignorelistcallback ) )
        ignorelist = [[ _id_E2818AD39A3341B4.exitignorelistcallback ]]( vehicle );

    return ignorelist;
}

vehicle_occupancy_watchmovefeedback( driverseatid )
{
    self endon( "death" );

    for (;;)
    {
        vehicle_occupancy_updatemovefeedback( driverseatid );
        waitframe();
    }
}

vehicle_occupancy_updatemovefeedback( driverseatid )
{
    driver = vehicle_occupancy_getseatoccupant( self, driverseatid );
    occupants = vehicle_occupancy_getalloccupants( self );

    if ( isdefined( driver ) )
    {
        _id_E394E5E73BE2F081 = driver getnormalizedmovement()[0];

        if ( abs( _id_E394E5E73BE2F081 ) > 0.15 )
        {
            foreach ( _id_F85572CD5F6117C6 in occupants )
            {
                if ( _id_F85572CD5F6117C6 scripts\cp_mp\utility\player_utility::_isalive() )
                    _id_F85572CD5F6117C6 vehicle_occupancy_startmovefeedbackforplayer();
            }

            return;
        }

        foreach ( _id_F85572CD5F6117C6 in occupants )
        {
            if ( _id_F85572CD5F6117C6 scripts\cp_mp\utility\player_utility::_isalive() )
                _id_F85572CD5F6117C6 vehicle_occupancy_stopmovefeedbackforplayer();
        }

        return;
    }
    else if ( isdefined( occupants ) )
    {
        foreach ( _id_F85572CD5F6117C6 in occupants )
        {
            if ( _id_F85572CD5F6117C6 scripts\cp_mp\utility\player_utility::_isalive() )
                _id_F85572CD5F6117C6 vehicle_occupancy_stopmovefeedbackforplayer();
        }
    }
}

vehicle_occupancy_startmovefeedbackforplayer()
{
    if ( istrue( self.vehiclemoveshakeenabled ) )
        return;

    self.vehiclemoveshakeenabled = 1;
    self setscriptablepartstate( "vehicleMoveShake", "active1", 0 );
}

vehicle_occupancy_stopmovefeedbackforplayer()
{
    if ( !istrue( self.vehiclemoveshakeenabled ) )
        return;

    self.vehiclemoveshakeenabled = undefined;
    self setscriptablepartstate( "vehicleMoveShake", "neutral", 0 );
}

vehicle_occupancy_updatedamagefeedback( data )
{
    _id_E2818AD39A3341B4 = vehicle_occupancy_getleveldataforvehicle( self.vehiclename );

    if ( !isdefined( _id_E2818AD39A3341B4 ) )
        return;

    if ( !isdefined( data.damage ) || data.damage <= 0 )
        return;

    if ( !isdefined( data.meansofdeath ) )
        return;

    _id_0655D44253941F2B = undefined;
    _id_BFF4B44AA047360A = undefined;

    switch ( data.meansofdeath )
    {
        case "MOD_EXPLOSIVE_BULLET":
        case "MOD_GRENADE_SPLASH":
        case "MOD_PISTOL_BULLET":
        case "MOD_RIFLE_BULLET":
        case "MOD_GRENADE":
        case "MOD_PROJECTILE":
            _id_0655D44253941F2B = "light";
            _id_BFF4B44AA047360A = _id_E2818AD39A3341B4.damagefeedbackgrouplight;
            break;
        case "MOD_IMPACT":
        case "MOD_EXPLOSIVE":
        case "MOD_PROJECTILE_SPLASH":
            _id_0655D44253941F2B = "heavy";
            _id_BFF4B44AA047360A = _id_E2818AD39A3341B4.damagefeedbackgroupheavy;
            break;
    }

    if ( !isdefined( _id_0655D44253941F2B ) )
        return;

    if ( !isdefined( _id_BFF4B44AA047360A ) || _id_BFF4B44AA047360A == "none" )
        return;

    players = [];

    if ( _id_BFF4B44AA047360A == "driver" )
    {
        foreach ( seatid, _id_0C50B485A43752FD in _id_E2818AD39A3341B4.seatdata )
        {
            if ( !isdefined( _id_0C50B485A43752FD.animtag ) )
                continue;

            if ( _id_0C50B485A43752FD.animtag == "tag_seat_0" )
            {
                players = [ vehicle_occupancy_getseatoccupant( self, seatid ) ];
                break;
            }
        }
    }
    else if ( _id_BFF4B44AA047360A == "all" )
        players = vehicle_occupancy_getalloccupants( self );

    if ( !isdefined( players ) || players.size == 0 )
        return;

    foreach ( player in players )
    {
        if ( !isdefined( player ) )
            continue;

        if ( !player scripts\cp_mp\utility\player_utility::_isalive() )
            continue;

        if ( _id_0655D44253941F2B == "light" )
        {
            player thread vehicle_occupancy_lightdamagefeedbackforplayer();
            continue;
        }

        if ( _id_0655D44253941F2B == "heavy" )
            player thread vehicle_occupancy_heavydamagefeedbackforplayer();
    }
}

vehicle_occupancy_lightdamagefeedbackforplayer()
{
    self endon( "disconnect" );
    self endon( "vehicle_occupancy_clearLightDamageFeedbackPlayer" );

    if ( !isdefined( self.vehiclelightdamagefeedbackid ) )
        self.vehiclelightdamagefeedbackid = 1;

    self setscriptablepartstate( "vehicleDamageShakeLight", "active" + self.vehiclelightdamagefeedbackid, 0 );
    self.vehiclelightdamagefeedbackid = 1 + scripts\engine\utility::mod( self.vehiclelightdamagefeedbackid + 1, 3 );
    wait 0.15;
    thread vehicle_occupancy_clearlightdamagefeedbackplayer();
}

vehicle_occupancy_clearlightdamagefeedbackplayer()
{
    self notify( "vehicle_occupancy_clearLightDamageFeedbackPlayer" );
    self setscriptablepartstate( "vehicleDamageShakeLight", "neutral", 0 );
    self.vehiclelightdamagefeedbackid = undefined;
}

vehicle_occupancy_heavydamagefeedbackforplayer()
{
    self endon( "disconnect" );
    self endon( "vehicle_occupancy_clearHeavyDamageFeedbackPlayer" );

    if ( !isdefined( self.vehicleheavydamagefeedbackid ) )
        self.vehicleheavydamagefeedbackid = 1;

    self setscriptablepartstate( "vehicleDamageShakeHeavy", "active" + self.vehicleheavydamagefeedbackid, 0 );
    self.vehicleheavydamagefeedbackid = 1 + scripts\engine\utility::mod( self.vehicleheavydamagefeedbackid + 1, 3 );
    wait 0.3;
    thread vehicle_occupancy_clearheavydamagefeedbackplayer();
}

vehicle_occupancy_clearheavydamagefeedbackplayer()
{
    self notify( "vehicle_occupancy_clearHeavyDamageFeedbackPlayer" );
    self setscriptablepartstate( "vehicleDamageShakeHeavy", "neutral", 0 );
    self.vehicleheavydamagefeedbackid = undefined;
}

vehicle_occupancy_cleardamagefeedbackforplayer()
{
    vehicle_occupancy_clearlightdamagefeedbackplayer();
    vehicle_occupancy_clearheavydamagefeedbackplayer();
}

vehicle_occupancy_giveturret( player, vehicle, objweapon )
{
    player endon( "disconnect" );
    _id_91CD55D06B5AD113 = player _meth_793F941D7DFF15ED();
    _id_C9B87BEB89EC12E2( player, vehicle );

    if ( _id_91CD55D06B5AD113 )
        waitframe();

    turret = scripts\cp_mp\vehicles\vehicle::vehicle_getturretbyweapon( vehicle, objweapon );
    turret.owner = player;
    turret setotherent( player );
    turret setentityowner( player );
    turret setsentryowner( player );
    player disableturretdismount();
    player controlturreton( turret );

    if ( !player hasweapon( objweapon ) )
        player scripts\cp_mp\utility\inventory_utility::_giveweapon( objweapon );

    if ( !player scripts\cp_mp\utility\inventory_utility::iscurrentweapon( objweapon ) )
        player scripts\cp_mp\utility\inventory_utility::domonitoredweaponswitch( objweapon, 1, 1 );
}

vehicle_occupancy_taketurret( player, vehicle, objweapon, data, _id_504FA7A88BA40E41 )
{
    if ( isdefined( data.raceendon ) )
        data endon( data.raceendon );

    if ( istrue( _id_504FA7A88BA40E41 ) )
        childthread vehicle_occupancy_givetaketurrettimeout( data, 1.5 );

    if ( player hasweapon( objweapon ) )
    {
        result = undefined;
        thread vehicle_occupancy_clearforceweaponswitchallowed( player );

        if ( player scripts\cp_mp\utility\inventory_utility::isswitchingtoweaponwithmonitoring( objweapon ) )
        {
            player scripts\cp_mp\utility\inventory_utility::abortmonitoredweaponswitch( makeweapon( objweapon ) );
            result = 1;
        }
        else
        {
            turret = scripts\cp_mp\vehicles\vehicle::vehicle_getturretbyweapon( vehicle, objweapon );

            if ( isdefined( turret ) )
                player controlturretoff( turret );

            if ( player hasweapon( objweapon ) )
            {
                _id_5CD91BF870C84920 = player scripts\cp_mp\utility\inventory_utility::iscurrentweapon( objweapon );

                if ( _id_5CD91BF870C84920 )
                {
                    player scripts\cp_mp\utility\inventory_utility::_takeweapon( objweapon );
                    player thread scripts\cp_mp\utility\inventory_utility::forcevalidweapon();
                }
                else
                    player thread scripts\cp_mp\utility\inventory_utility::getridofweapon( objweapon, 1 );
            }

            result = 1;
        }

        if ( isdefined( result ) && !result )
        {
            data.success = 0;
            data notify( data.raceendnotify );
        }
    }
}

vehicle_occupancy_givetaketurrettimeout( data, timeout )
{
    wait( timeout );
    data.success = 0;
    data notify( data.raceendnotify );
}

vehicle_occupancy_clearforceweaponswitchallowed( player )
{
    player notify( "vehicle_occupancy_forceWeaponSwitchAllowed" );

    if ( player _id_3B64EB40368C1450::_id_E0751B03DFB9EB43( "weapon_switch" ) )
        player enableweaponswitch();
    else
        player disableweaponswitch();
}

vehicle_occupancy_ejectalloccupants( vehicle )
{
    if ( vehicle scripts\cp_mp\vehicles\vehicle::_id_B7148A3BFC4DEFB2() )
        return;

    seatids = vehicle_occupancy_getallvehicleseats( vehicle );

    foreach ( seatid in seatids )
    {
        _id_F85572CD5F6117C6 = vehicle_occupancy_getseatoccupant( vehicle, seatid );

        if ( isdefined( _id_F85572CD5F6117C6 ) )
        {
            data = spawnstruct();
            data.allowairexit = 1;
            data.exittype = "INVOLUNTARY";
            thread vehicle_occupancy_exit( vehicle, seatid, _id_F85572CD5F6117C6, data, 1 );
        }
    }
}

vehicle_occupancy_getoccupantrestrictions()
{
    allows = [ "crouch", "prone", "sprint", "mantle", "mount_top", "mount_side", "vehicle_use", "crate_use", "ladder_placement", "execution_attack", "execution_victim", "usability" ];

    if ( getdvarint( "dvar_06C68604CD07D358", 0 ) == 1 )
        allows[allows.size] = "offhand_weapons";

    return allows;
}

vehicle_occupancy_getdriverrestrictions()
{
    return [ "usability", "offhand_weapons", "melee", "fire", "reload", "autoreload", "weapon_switch", "cough_gesture" ];
}

_id_B9CC4AD5C15D3CEE()
{
    return [ "usability", "offhand_weapons", "melee", "reload", "autoreload", "weapon_switch", "cough_gesture" ];
}

vehicle_occupancy_getcombatpassengerrestrictions()
{
    return [ "weapon_pickup" ];
}

vehicle_occupancy_getcombatcabpassengerrestrictions()
{
    restrictions = vehicle_occupancy_getcombatpassengerrestrictions();
    return restrictions;
}

vehicle_occupancy_getpassivepassengerrestrictions()
{
    return vehicle_occupancy_getdriverrestrictions();
}

vehicle_occupancy_getturretpassengerrestrictions()
{
    restrictions = vehicle_occupancy_getcombatpassengerrestrictions();
    restrictions[restrictions.size] = "cough_gesture";
    restrictions[restrictions.size] = "offhand_weapons";
    return scripts\engine\utility::array_remove_duplicates( restrictions );
}

vehicle_occupancy_disablefirefortime( player, _id_05AB9EA557C8B0A4, _id_7DFB5B86164129F9 )
{
    player endon( "disconnect" );
    player notify( "vehicle_occupancy_disableFireForTime" );
    player endon( "vehicle_occupancy_disableFireForTime" );

    if ( !istrue( self.vehicledisablefire ) )
    {
        player.vehicledisablefire = 1;
        player _id_3B64EB40368C1450::set( "vehicleDisableFire", "fire", 0 );
    }

    if ( !isdefined( player.vehicledisablefireendtime ) || !istrue( _id_7DFB5B86164129F9 ) )
        player.vehicledisablefireendtime = gettime() + _id_05AB9EA557C8B0A4;

    while ( isdefined( player.vehicledisablefireendtime ) && gettime() < player.vehicledisablefireendtime )
        wait 0.05;

    thread vehicle_occupancy_cleardisablefirefortime( player );
}

vehicle_occupancy_cleardisablefirefortime( player, _id_FCEF8D217A441961 )
{
    player notify( "vehicle_occupancy_disableFireForTime" );

    if ( isdefined( player.vehicledisablefire ) )
    {
        if ( !istrue( _id_FCEF8D217A441961 ) )
            player _id_3B64EB40368C1450::_id_C9D0B43701BDBA00( "vehicleDisableFire" );
    }

    player.vehicledisablefire = undefined;
    player.vehicledisablefireendtime = undefined;
}

vehicle_occupancy_takeriotshield( player, vehicle, _id_7558F98F3236963D )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "takeRiotShield" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "takeRiotShield" ) ]]( player, vehicle, _id_7558F98F3236963D );
}

vehicle_occupancy_giveriotshield( player, _id_FCEF8D217A441961, _id_8FEAFCEA3627EB2B )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "giveRiotShield" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "giveRiotShield" ) ]]( player, _id_FCEF8D217A441961, _id_8FEAFCEA3627EB2B );
}

vehicle_occupancy_updateriotshield( player, vehicle, _id_7558F98F3236963D )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "updateRiotShield" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "updateRiotShield" ) ]]( player, vehicle, _id_7558F98F3236963D );
}

vehicle_occupancy_hidecashbag( vehicle, seatid, player, data )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "hideCashBag" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "hideCashBag" ) ]]( vehicle, seatid, player, data );
}

vehicle_occupancy_showcashbag( vehicle, seatid, player, data )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "showCashBag" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "showCashBag" ) ]]( vehicle, seatid, player, data );
}

vehicle_occupancy_registersentient( vehicle )
{
    if ( isdefined( vehicle.sentientdisabled ) && vehicle.sentientdisabled > 0 )
        return;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "registerSentient" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "registerSentient" ) ]]( vehicle );
}

vehicle_occupancy_unregistersentient( vehicle )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "unregisterSentient" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "unregisterSentient" ) ]]( vehicle );
}

vehicle_occupancy_issentient( vehicle )
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_occupancy", "isSentient" ) )
        return [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_occupancy", "isSentient" ) ]]( vehicle );
}

vehicle_occupancy_allowsentient( _id_E3108E412AFB3811 )
{
    if ( _id_E3108E412AFB3811 )
    {
        self.sentientdisabled--;

        if ( self.sentientdisabled == 0 )
            vehicle_occupancy_registersentient( self );
    }
    else
    {
        if ( !isdefined( self.sentientdisabled ) )
            self.sentientdisabled = 0;

        self.sentientdisabled++;

        if ( self.sentientdisabled == 1 )
            vehicle_occupancy_unregistersentient( self );
    }
}

vehicle_occupancy_linktooriginandangles( vehicle, _id_6126D8436C986BAF )
{
    linktooriginandangles = spawnstruct();

    if ( vehicle tagexists( _id_6126D8436C986BAF ) )
    {
        linktooriginandangles.origin = vehicle gettagorigin( _id_6126D8436C986BAF );
        linktooriginandangles.angles = vehicle gettagangles( _id_6126D8436C986BAF );
    }
    else
    {
        _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, _id_6126D8436C986BAF );

        if ( isdefined( _id_0C50B485A43752FD.animtag ) )
        {
            linktooriginandangles.origin = vehicle gettagorigin( _id_0C50B485A43752FD.animtag );
            linktooriginandangles.angles = vehicle gettagangles( _id_0C50B485A43752FD.animtag );
        }
        else
        {
            linktooriginandangles.origin = vehicle.origin;
            linktooriginandangles.angles = vehicle.angles;
        }
    }

    return linktooriginandangles;
}

vehicle_occupancy_linkseatcorpse( corpse, vehicle, _id_6126D8436C986BAF )
{
    if ( vehicle tagexists( _id_6126D8436C986BAF ) )
    {
        corpse enablelinkto();
        corpse linkto( vehicle, _id_6126D8436C986BAF );
    }
    else
    {
        _id_0C50B485A43752FD = vehicle_occupancy_getleveldataforseat( vehicle.vehiclename, _id_6126D8436C986BAF );

        if ( isdefined( _id_0C50B485A43752FD.animtag ) )
        {
            corpse enablelinkto();
            corpse linkto( vehicle, _id_0C50B485A43752FD.animtag );
        }
        else
        {
            corpse enablelinkto();
            corpse linkto( vehicle );
        }
    }
}

vehicle_occupancy_assignseatcorpse( corpse, vehicle, _id_6126D8436C986BAF, _id_F9E25038FED22BF0 )
{
    if ( !isdefined( vehicle.corpses ) )
        vehicle.corpses = [];

    vehicle_occupancy_deleteseatcorpse( vehicle, _id_6126D8436C986BAF, 0 );
    vehicle.corpses[_id_6126D8436C986BAF] = corpse;

    if ( !_id_F9E25038FED22BF0 )
        corpse.dontdeleteonseatenter = 1;
}

vehicle_occupancy_clearseatcorpse( corpse, vehicle, _id_6126D8436C986BAF )
{
    if ( isdefined( vehicle.corpses ) && isdefined( vehicle.corpses[_id_6126D8436C986BAF] ) )
        vehicle.corpses[_id_6126D8436C986BAF] = undefined;

    corpse.dontdeleteonseatenter = undefined;
}

vehicle_occupancy_deleteseatcorpse( vehicle, _id_6126D8436C986BAF, _id_A710FD9108240C6A )
{
    if ( isdefined( vehicle.corpses ) && isdefined( vehicle.corpses[_id_6126D8436C986BAF] ) )
    {
        corpse = vehicle.corpses[_id_6126D8436C986BAF];

        if ( isdefined( corpse ) )
        {
            if ( !istrue( corpse.dontdeleteonseatenter ) || !_id_A710FD9108240C6A )
            {
                vehicle.corpses[_id_6126D8436C986BAF] delete();
                vehicle.corpses[_id_6126D8436C986BAF] = undefined;
            }
        }
    }
}

vehicle_occupancy_deleteseatcorpses( vehicle )
{
    if ( isdefined( vehicle.corpses ) )
    {
        foreach ( corpse in vehicle.corpses )
        {
            if ( isdefined( corpse ) )
                corpse delete();
        }
    }

    vehicle.corpses = undefined;
}

vehicle_occupancy_allowspawninto( vehicle, _id_E3108E412AFB3811 )
{
    if ( istrue( vehicle.isdestroyed ) || !isdefined( vehicle.occupants ) )
        vehicle.preventspawninto = undefined;
    else
    {
        if ( _id_E3108E412AFB3811 )
        {
            vehicle.preventspawninto--;
            return;
        }

        if ( !isdefined( vehicle.preventspawninto ) )
            vehicle.preventspawninto = 0;

        vehicle.preventspawninto++;
    }
}

vehicle_occupancy_canspawninto( vehicle )
{
    if ( istrue( vehicle.isdestroyed ) || !isdefined( vehicle.occupants ) )
        return 0;

    if ( isdefined( vehicle.preventspawninto ) && vehicle.preventspawninto > 0 )
        return 0;

    return 1;
}

vehicle_occupancy_generateseatswitcharray( seatid, _id_EA452AFA253F8034 )
{
    _id_D6D7814802640F93 = [];
    _id_866452ADE4626D3F = 0;
    _id_AC0E594AC96AA3A8 = 0;

    for (;;)
    {
        if ( !_id_866452ADE4626D3F )
        {
            if ( seatid == _id_EA452AFA253F8034[_id_AC0E594AC96AA3A8] )
                _id_866452ADE4626D3F = 1;
        }
        else
        {
            _id_AC0E594AC96AA3A8 = scripts\engine\utility::mod( _id_AC0E594AC96AA3A8, _id_EA452AFA253F8034.size );

            if ( seatid == _id_EA452AFA253F8034[_id_AC0E594AC96AA3A8] )
                break;

            _id_D6D7814802640F93[_id_D6D7814802640F93.size] = _id_EA452AFA253F8034[_id_AC0E594AC96AA3A8];
        }

        _id_AC0E594AC96AA3A8++;
    }

    return _id_D6D7814802640F93;
}

vehicle_occupancy_killoccupants( vehicle, damagedata, _id_29187EC6E45D7481 )
{
    if ( !isdefined( damagedata.inflictor ) )
    {
        switch ( damagedata.meansofdeath )
        {
            case "MOD_GRENADE_SPLASH":
            case "MOD_GRENADE":
            case "MOD_PROJECTILE_SPLASH":
            case "MOD_PROJECTILE":
                if ( isdefined( vehicle.killcament ) )
                    vehicle.killcament delete();

                vehicle.killcament = damagedata.inflictor;
                damagedata.inflictor = vehicle;
        }
    }

    if ( !isdefined( damagedata.inflictor ) )
        damagedata.inflictor = undefined;

    meansofdeath = damagedata.meansofdeath;

    if ( meansofdeath == "MOD_PROJECTILE" )
        meansofdeath = "MOD_PROJECTILE_SPLASH";
    else if ( meansofdeath == "MOD_GRENADE" )
        meansofdeath = "MOD_GRENADE_SPLASH";

    seatids = vehicle_occupancy_getallvehicleseats( self );

    foreach ( seatid in seatids )
    {
        _id_F85572CD5F6117C6 = vehicle_occupancy_getseatoccupant( self, seatid );

        if ( isdefined( _id_F85572CD5F6117C6 ) && _id_F85572CD5F6117C6 scripts\cp_mp\utility\player_utility::_isalive() )
        {
            _id_0A0A415F8F5DB022 = damagedata.attacker;

            if ( scripts\common\utility::iscp() )
            {
                _id_F85572CD5F6117C6.shouldskipdeathsshield = 1;

                if ( !isdefined( _id_0A0A415F8F5DB022 ) )
                {
                    if ( isdefined( damagedata.inflictor ) )
                        _id_0A0A415F8F5DB022 = damagedata.inflictor;
                }

                if ( !isdefined( _id_0A0A415F8F5DB022 ) )
                    _id_0A0A415F8F5DB022 = _id_F85572CD5F6117C6;

                if ( isdefined( _id_0A0A415F8F5DB022 ) && isdefined( _id_0A0A415F8F5DB022.team ) )
                {
                    if ( _id_0A0A415F8F5DB022.team == _id_F85572CD5F6117C6.team )
                    {
                        vehicle_occupancy_exit( self, seatid, _id_F85572CD5F6117C6, undefined, 1 );
                        _id_F85572CD5F6117C6.skipvehiclespashdamage = 1;
                        continue;
                    }
                }
            }
            else if ( !isdefined( _id_0A0A415F8F5DB022 ) || !scripts\cp_mp\utility\player_utility::playersareenemies( _id_0A0A415F8F5DB022, _id_F85572CD5F6117C6 ) )
                _id_0A0A415F8F5DB022 = _id_F85572CD5F6117C6;

            _id_F85572CD5F6117C6.donotmodifydamage = 1;
            _id_AB7B2B4764CFF0F5 = 0;

            if ( scripts\cp_mp\utility\game_utility::_id_0BEFF479639E6508() && istrue( _id_F85572CD5F6117C6.isjuggernaut ) )
            {
                if ( isdefined( _id_F85572CD5F6117C6.juggcontext.juggconfig.vehiclecankillhealth ) && _id_F85572CD5F6117C6.health > _id_F85572CD5F6117C6.juggcontext.juggconfig.vehiclecankillhealth )
                    _id_AB7B2B4764CFF0F5 = 1;
            }

            if ( !istrue( _id_AB7B2B4764CFF0F5 ) )
            {
                _id_F85572CD5F6117C6 thread _id_2700EF822671144A( vehicle, _id_0A0A415F8F5DB022, damagedata, meansofdeath );

                if ( isdefined( level.vehicleoccupantdeathcustomcallback ) )
                    _id_F85572CD5F6117C6 thread [[ level.vehicleoccupantdeathcustomcallback ]]();
            }

            _id_F85572CD5F6117C6.donotmodifydamage = undefined;
            thread vehicle_occupancy_exit( vehicle, seatid, _id_F85572CD5F6117C6, _id_29187EC6E45D7481, 1 );
        }
    }

    vehicle_occupancy_deleteseatcorpses( vehicle );
}

_id_2700EF822671144A( vehicle, _id_0A0A415F8F5DB022, damagedata, meansofdeath )
{
    self endon( "death_or_disconnect" );
    origin = vehicle.origin;

    while ( self _meth_793F941D7DFF15ED() )
        waitframe();

    attacker = damagedata.attacker;
    inflictor = damagedata.inflictor;

    if ( !isdefined( attacker ) )
        attacker = scripts\engine\utility::ter_op( isdefined( self._id_9328DED553F15D2B ) && istrue( scripts\cp_mp\utility\player_utility::playersareenemies( self, self._id_9328DED553F15D2B ) ), self._id_9328DED553F15D2B, self );

    if ( !isdefined( attacker ) )
    {
        if ( isdefined( vehicle ) )
            attacker = vehicle;
        else
            attacker = self;
    }

    if ( !isdefined( inflictor ) )
        inflictor = self;

    self dodamage( self.maxhealth, origin, attacker, inflictor, meansofdeath, damagedata.objweapon, "torso_upper" );
}

vehicle_occupancy_initdebug()
{
    _id_962A30A9BB8C0F09 = vehicle_occupancy_getleveldata();
    _id_962A30A9BB8C0F09.debuginstances = [];
}

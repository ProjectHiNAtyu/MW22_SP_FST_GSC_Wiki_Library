// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init_audio()
{
    if ( !isdefined( level.audio ) )
        level.audio = spawnstruct();

    _id_7AB5B649FA408138::_id_6DCA6F439CA0A74F();
    init_reverb();
    level.onplayerconnectaudioinit = ::onplayerconnectaudioinit;
}

onplayerconnectaudioinit()
{
    apply_reverb( "default" );
    thread _id_9A645B459EB6BD04();

    if ( getdvarint( "dvar_66C38B5B61297AC1" ) == 1 )
        setglobalsoundcontext( "thirdpersonmode", "on" );
}

init_reverb()
{
    add_reverb( "default", "generic", 0.15, 0.9, 2 );
}

add_reverb( name, type, _id_70E492A54C3CA6A3, _id_1549D7DB07806DF8, _id_F69BA8D7B96E8326 )
{
    _id_382BDA769DA38BC9 = [];
    is_roomtype_valid( type );
    _id_382BDA769DA38BC9["roomtype"] = type;
    _id_382BDA769DA38BC9["wetlevel"] = _id_70E492A54C3CA6A3;
    _id_382BDA769DA38BC9["drylevel"] = _id_1549D7DB07806DF8;
    _id_382BDA769DA38BC9["fadetime"] = _id_F69BA8D7B96E8326;
    level.audio.reverb_settings[name] = _id_382BDA769DA38BC9;
}

is_roomtype_valid( type )
{

}

apply_reverb( name )
{
    if ( !isdefined( level.audio.reverb_settings[name] ) )
        _id_382BDA769DA38BC9 = level.audio.reverb_settings["default"];
    else
        _id_382BDA769DA38BC9 = level.audio.reverb_settings[name];
}

_id_9A645B459EB6BD04()
{
    self endon( "disconnect" );
    state = "idle";

    for (;;)
    {
        _id_E036BEB70DA584EC = istrue( self _meth_9CC921A57FF4DEB5() );
        ismoving = istrue( self _meth_11C1DE42F0B2B2A7() );
        laststate = state;

        if ( state == "idle" && _id_E036BEB70DA584EC )
            state = "attach";

        if ( state == "attach" && ismoving )
            state = "moving";

        if ( state == "moving" && !ismoving )
            state = "detach";

        if ( state == "detach" && !_id_E036BEB70DA584EC )
            state = "idle";

        if ( state != laststate )
        {
            laststate = state;
            self setscriptablepartstate( "ascender", state, 0 );
        }

        waitframe();
    }
}

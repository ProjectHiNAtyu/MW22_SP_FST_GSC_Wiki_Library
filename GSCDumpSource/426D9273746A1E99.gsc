// IW9 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\engine\scriptable::scriptable_addusedcallbackbypart( "body", ::x1stashlootcacheused );
    enabled = _id_3ACF1C0EBAF602F2::registerquestcategory( "x1stash", getdvarint( "dvar_7241762AC469B87E", 1 ) );

    if ( !enabled )
        return;

    _id_3ACF1C0EBAF602F2::getquestdata( "x1stash" ).questenabled = getdvarint( "dvar_7241762AC469B87E", 1 );
    _id_3ACF1C0EBAF602F2::getquestdata( "x1stash" ).searchcirclesize = getdvarint( "dvar_8A3C7B1FE177E7A4", 3000 );
    _id_3ACF1C0EBAF602F2::getquestdata( "x1stash" ).missionbasetimer = getdvarint( "dvar_C9AE5E5E91FBD0D5", 240 );
    _id_3ACF1C0EBAF602F2::registerremovequestinstance( "x1stash", ::x1stash_removequestinstance );
    _id_3ACF1C0EBAF602F2::registeronplayerdisconnect( "x1stash", ::x1stash_playerdisconnect );
    _id_3ACF1C0EBAF602F2::registerquestthink( "x1stash", ::_id_743AA73771C74EBC, 0.1 );
    _id_3ACF1C0EBAF602F2::registeronentergulag( "x1stash", ::x1stash_entergulag );
    _id_3ACF1C0EBAF602F2::registeronrespawn( "x1stash", ::x1stash_respawn );
    _id_3ACF1C0EBAF602F2::questtimerinit( "x1stash", 0 );
    _id_3ACF1C0EBAF602F2::registerontimerexpired( "x1stash", ::x1stash_ontimerexpired );
}

autoapplyquest()
{
    level endon( "game_ended" );
    level waittill( "prematch_done" );
    teamlist = getarraykeys( level.teamdata );

    foreach ( team in teamlist )
    {
        players = level.teamdata[team]["players"];

        if ( players.size == 0 )
            continue;

        instance = players[0] applyquest();
    }
}

x1stash_entergulag( player )
{
    if ( !checkforcorrectinstance( player ) )
        return;

    player _id_3ACF1C0EBAF602F2::uiobjectivehide();
    scripts\cp_mp\utility\game_utility::_id_D7D113D56EF0EF5B( player );
}

x1stash_respawn( player )
{
    if ( !checkforcorrectinstance( player ) )
        return;

    player _id_3ACF1C0EBAF602F2::uiobjectiveshow( "x1stash" );
    scripts\cp_mp\utility\game_utility::_id_CFD53C8F6878014F( player );
}

x1stash_ontimerexpired()
{
    level thread _id_2CEDCC356F1B9FC8::brleaderdialogteam( "mission_gen_fail", self.team, 1 );
}

x1stash_removequestinstance()
{
    scripts\cp_mp\utility\game_utility::_id_AF5604CE591768E1();
    _id_3ACF1C0EBAF602F2::releaseteamonquest( self.team );
}

x1stash_playerdisconnect( _id_345221032955C106 )
{
    if ( _id_345221032955C106.team == self.team )
    {
        playerlist = scripts\mp\utility\teams::getteamdata( self.team, "players" );
        _id_3ACF1C0EBAF602F2::getquestinstancedata( "x1stash", self.team ).playerlist = playerlist;

        if ( isdefined( self ) && isdefined( self.cacheentity ) && playerlist.size )
            self.cacheentity setotherent( playerlist[0] );

        if ( !_id_3ACF1C0EBAF602F2::isteamvalid( _id_345221032955C106.team ) )
        {
            self.result = "fail";
            _id_3ACF1C0EBAF602F2::removequestinstance();
        }
    }
}

checkforcorrectinstance( player )
{
    if ( player.team == self.team )
        return 1;
    else
        return 0;
}

givequest( team, id, player, modifier, rewardscriptable )
{
    instance = _id_3ACF1C0EBAF602F2::createquestinstance( "x1stash", team, id, rewardscriptable );
    instance _id_3ACF1C0EBAF602F2::registerteamonquest( self.team, self );
    instance _id_3ACF1C0EBAF602F2::registercontributingplayers( self );
    instance.team = self.team;
    instance.startlocation = self.origin;
    instance.currlocation = self.origin;
    instance.playerlist = scripts\mp\utility\teams::getteamdata( self.team, "players" );
    _id_AA9D61F3C51B6A77 = _id_3ACF1C0EBAF602F2::getteamcenter( team, level.questinfo.defaultfilter );
    _id_354D1457278B342C = lootcachesearchparams( _id_AA9D61F3C51B6A77 );
    instance.reservedplacement = _id_3ACF1C0EBAF602F2::findquestplacement( "x1stash", _id_354D1457278B342C );
    instance spawnx1stashlootcache( instance.reservedplacement.origin, instance.reservedplacement.angles );
    instance scripts\cp_mp\utility\game_utility::_id_6B6B6273F8180522( "SafeCracker_Br", instance.reservedplacement.origin, _id_3ACF1C0EBAF602F2::getquestdata( "x1stash" ).searchcirclesize );
    instance determinetrackingcircleoffset();
    instance updatex1stashhud();
    _id_3ACF1C0EBAF602F2::uiobjectiveshowtoteam( "x1stash", self.team );
    instance _id_3ACF1C0EBAF602F2::questtimerset( _id_3ACF1C0EBAF602F2::getquestdata( "x1stash" ).missionbasetimer, 4 );
    _id_3ACF1C0EBAF602F2::addquestinstance( "x1stash", instance );
    _id_3ACF1C0EBAF602F2::startteamcontractchallenge( "x1stash", self, self.team );
    params = spawnstruct();
    params.plundervar = _id_3ACF1C0EBAF602F2::getquestplunderreward( "x1stash", _id_3ACF1C0EBAF602F2::getquestrewardtier( self.team ) );
    _id_3ACF1C0EBAF602F2::displayteamsplash( self.team, "br_x1stash_quest_start_team_notify", params );
    return instance;
}

applyquest()
{
    player = self;

    if ( isdefined( level.questinfo.quests["x1stash"].instances[player.team] ) )
        return;

    instance = givequest( player.team, "", player, "" );

    if ( isdefined( instance ) )
    {
        instance thread oninstanceremoved();
        instance._id_38E43A2E7AC81325 = 0;
        _id_D5C9EA6D6C4CD2D9 = getdvarint( "dvar_27BC446BB2280F51", 240 );
        instance thread _id_4527BF8BBA284923( instance.reservedplacement.origin, _id_D5C9EA6D6C4CD2D9 );
    }

    return instance;
}

oninstanceremoved()
{
    instance = self;
    instance waittill( "removed" );

    if ( instance._id_38E43A2E7AC81325 )
        instance _id_64ACB6CE534155B7::deletequestobjicon();

    instance notify( "update" );
}

lootcachesearchparams( searchcircleorigin, reservedplacement )
{
    _id_354D1457278B342C = spawnstruct();
    _id_354D1457278B342C.searchfunc = "getUnusedLootCacheArray";
    _id_354D1457278B342C.searchcircleorigin = searchcircleorigin;
    _id_354D1457278B342C.searchradiusmax = 10000;
    _id_354D1457278B342C.searchradiusmin = 2000;
    _id_354D1457278B342C.searchradiusidealmax = 6000;
    _id_354D1457278B342C.searchradiusidealmin = 3000;
    _id_354D1457278B342C.searchforcecirclecenter = 1;
    _id_354D1457278B342C.reservedplacement = reservedplacement;
    _id_354D1457278B342C.mintime = 60;

    if ( getdvar( "dvar_7611A2790A0BF7FE", "" ) == "plunder" )
    {
        if ( _id_354D1457278B342C.searchradiusmax < level.quest_secretdistmax )
            _id_354D1457278B342C.searchradiusmax = level.quest_secretdistmax;

        _id_354D1457278B342C.searchradiusidealmax = level.quest_secretdistmax;
        _id_354D1457278B342C.searchradiusidealmin = level.quest_secretdistmin;
    }

    return _id_354D1457278B342C;
}

spawnx1stashlootcache( _id_7E05C139FBBD8374, _id_5B9C864B21207FF6 )
{
    cacheentity = spawn( "script_model", _id_7E05C139FBBD8374 );
    _id_7F599ACCB72658D1 = self.playerlist[0];
    cacheentity.angles = _id_5B9C864B21207FF6;
    cacheentity setotherent( _id_7F599ACCB72658D1 );
    cacheentity setmodel( "x1_military_loot_crate_br_01" );
    cacheentity setscriptablepartstate( "body", "x1_stash_closed" );
    cacheentity.questinstance = self;
    self.cacheentity = cacheentity;
    _id_4EAD6B4FF3816236 = getlootscriptablearray( "br_loot_cache" );
    self.rewardscriptable = _id_4EAD6B4FF3816236[0];

    foreach ( player in level.players )
    {
        if ( player != _id_7F599ACCB72658D1 && ( _id_7F599ACCB72658D1.team == "none" || player.team != _id_7F599ACCB72658D1.team ) )
            cacheentity disablescriptableplayeruse( player );
    }
}

updatex1stashhud()
{
    foreach ( player in self.playerlist )
    {
        player _id_3ACF1C0EBAF602F2::uiobjectiveshow( "x1stash" );
        scripts\cp_mp\utility\game_utility::_id_CFD53C8F6878014F( player );
    }
}

determinetrackingcircleoffset()
{
    search_location = ( self.cacheentity.origin[0], self.cacheentity.origin[1], _id_3ACF1C0EBAF602F2::getquestdata( "x1stash" ).searchcirclesize );
    search_location = search_location + scripts\engine\math::random_vector_2d() * randomfloatrange( 500, 2000 );
    scripts\cp_mp\utility\game_utility::_id_6E148C8DA2E4DB13( search_location );
}

hidex1stashhudfromplayer( player )
{
    scripts\cp_mp\utility\game_utility::_id_D7D113D56EF0EF5B( player );
    player _id_3ACF1C0EBAF602F2::uiobjectivehide();
}

deletex1stashhud()
{
    foreach ( player in self.playerlist )
        hidex1stashhudfromplayer( player );
}

x1stashlootcacheused( instance, part, state, player, _id_A5B2C541413AA895, _id_CC38472E36BE1B61 )
{
    if ( state == "x1_stash_closed" && isdefined( instance.entity ) )
    {
        questinstance = instance.entity.questinstance;

        if ( player.team != questinstance.team )
        {
            player iprintlnbold( "Chest Requires a Scavenger Mission" );
            return;
        }

        instance setscriptablepartstate( "body", "x1_stash_opening" );
        _id_C0858ACEEA4BB7D9 = getdvarint( "dvar_3B1EC176D14497EA", 30 );
        instance.entity scripts\engine\utility::_id_AD9433AAB9FCDF04( _id_C0858ACEEA4BB7D9, "death_or_disconnect", ::delete );
        _id_3ACF1C0EBAF602F2::givequestrewardgroup( "scavenger_1", player.team, instance.origin, instance.angles, questinstance.rewardscriptable );
        questinstance.rewardorigin = instance.origin;
        questinstance.rewardangles = instance.angles;
        level notify( "lootcache_opened_kill_callout" + instance.origin );
        _id_96674628376EABA6 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getFriendlyPlayers" ) ]]( player.team, 0 );

        foreach ( _id_F0EA4030349A33D5 in _id_96674628376EABA6 )
            _id_F0EA4030349A33D5 notify( "calloutmarkerping_warzoneKillQuestIcon" );
    }
}

_id_A4A1256A74E3C610( player )
{
    questinstance = level.questinfo.quests["x1stash"].instances[self.instance.team];
    _id_3ACF1C0EBAF602F2::givequestrewardgroup( "x1stash", player.team, self.origin, self.angles, self.rewardscriptable );
    _id_3ACF1C0EBAF602F2::displaysquadmessagetoteam( player.team, player, 8, _id_3ACF1C0EBAF602F2::getquestindex( "x1stash" ) );
    questinstance completex1stashquest( self.instance );
}

completex1stashquest( _id_760BFDA7D490677E )
{
    params = spawnstruct();
    rewardtier = _id_3ACF1C0EBAF602F2::getquestrewardtier( self.team );
    missionid = _id_3ACF1C0EBAF602F2::getquestindex( "x1stash" );
    _id_11D65784F0B6AFA2 = _id_3ACF1C0EBAF602F2::getquestrewardgroupindex( _id_3ACF1C0EBAF602F2::getquestrewardbuildgroupref( "x1stash" ) );
    params.packedbits = _id_3ACF1C0EBAF602F2::packsplashparambits( missionid, rewardtier, _id_11D65784F0B6AFA2 );

    if ( getdvarint( "dvar_4B7D23AD6FCA65D8", 1 ) )
    {
        players = level.teamdata[self.team]["alivePlayers"];
        _id_3ACF1C0EBAF602F2::displaysplashtoplayers( players, "br_x1stash_quest_complete", params );
    }
    else
        _id_3ACF1C0EBAF602F2::displayteamsplash( self.team, "br_x1stash_quest_complete", params );

    level thread _id_2CEDCC356F1B9FC8::brleaderdialogteam( "mission_scav_success", self.team, 1, 1 );
    self.rewardorigin = _id_760BFDA7D490677E.origin;
    self.rewardangles = _id_760BFDA7D490677E.angles;
    self.result = "success";
    _id_3ACF1C0EBAF602F2::removequestinstance();
}

failx1stashquest()
{
    deletex1stashhud();
    self.result = "fail";
    _id_3ACF1C0EBAF602F2::removequestinstance();
}

_id_743AA73771C74EBC()
{
    _id_A51A45C698BA273B = self;

    if ( istrue( _id_A51A45C698BA273B.forcefail ) )
    {
        _id_A51A45C698BA273B failx1stashquest();
        return;
    }
}

_id_4527BF8BBA284923( _id_2D650E48B7ABDFA6, _id_EE011D69B16FF21D )
{
    instance = self;
    instance endon( "update" );
    level endon( "game_ended" );
    wait( _id_EE011D69B16FF21D );
    instance _id_3ACF1C0EBAF602F2::createquestobjicon( "ui_mp_br_mapmenu_icon_x1_03_objective", "current", _id_2D650E48B7ABDFA6 + ( 0, 0, 50 ) );
    objective_removeallfrommask( instance.objectiveiconid );
    objective_addteamtomask( instance.objectiveiconid, instance.team );
    instance._id_38E43A2E7AC81325 = 1;
}
